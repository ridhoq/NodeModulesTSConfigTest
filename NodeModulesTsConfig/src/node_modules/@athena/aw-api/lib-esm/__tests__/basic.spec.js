"use strict";
// import ApiClass from '../index';
import { User } from '../index';
const fetch = require('node-fetch');
const QueryString = require('query-string');
let savedState = {
    access_token: '',
    distributor_id: '',
    sponsor_id: '',
    user_id: '',
};
function logMeIn(user) {
    let config = {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' },
        body: QueryString.stringify({
            username: user.username,
            password: user.password,
            grant_type: 'password',
            os_type: 'Api-Test',
        }),
    };
    return fetch('https://testapi.patientio.com/Token', config)
        .then((response) => {
        return response.json().then((user) => ({ user, response }));
    })
        .then(({ user, response }) => {
        if (!response.ok) {
            return Promise.reject(user);
        }
        else {
            // console.log(user);
            savedState.access_token = user.access_token;
            savedState.distributor_id = user.distributors;
            savedState.sponsor_id = user.sponsors;
            savedState.user_id = user.id;
            return Promise.resolve(user);
        }
    })
        .catch((err) => console.log('Error: ', err));
}
describe('GetSponsorUserAsync', function () {
    const user = new User('https://testapi.patientio.com');
    it('Should allow a user to get a user', function (done) {
        logMeIn({
            username: 'erick.sadmin@example.com',
            password: '111111',
        }).then(() => {
            user.GetSponsorUserAsync({
                distributorId: savedState.distributor_id,
                sponsorId: savedState.sponsor_id,
                userId: savedState.user_id,
                authorization: `Bearer ${savedState.access_token}`,
            }).then((response) => {
                expect(response.status).toBe(200);
                done();
            });
        });
    });
});
//# sourceMappingURL=basic.spec.js.map