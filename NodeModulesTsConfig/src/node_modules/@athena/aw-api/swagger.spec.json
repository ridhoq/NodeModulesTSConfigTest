{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Patient IO API"
    },
    "host": "testapi.patientio.com",
    "schemes": [
        "https"
    ],
    "paths": {
        "/api/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "This is a method that looks up information about a specific account for a user.",
                "operationId": "Accounts_LookupAccountByUserName",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userName",
                        "in": "query",
                        "description": "Name of the user.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/accounts/passwordreset": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "This is a method that initiates a password reset for an account holder with a given email address, by\r\n                sending a password reset email to that address.",
                "operationId": "Accounts_SendPasswordResetEmail",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model view with only an email address.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordResetViewModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/accounts/password": {
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "This is a method that resets a user's password, given that they have a reset token.",
                "operationId": "Accounts_ResetPasswordWithToken",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResetPasswordByCodeBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/audit/aggregates/{id}": {
            "get": {
                "tags": [
                    "Audit"
                ],
                "summary": "This is a method that retrieves audit information for a system aggregate -\r\n                Patient, User, Sponsor, CarePlan, Organization, Distributor, etc.",
                "operationId": "Audit_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the aggregate",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "If supplied, retrieves entries that occurred on or after the specified date",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "If supplied, retrieves entries that occurred on or before the specified date",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AuditEntityViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/beacons": {
            "post": {
                "tags": [
                    "Beacon"
                ],
                "summary": "This is an endpoint for capturing beacons in an authenticated context. The endpoint uses the current user and\r\n                the following http headers to create a beacon: \r\n                X-FILAMENT-OS-TYPE - The platform operating system\r\n                X-FILAMENT-OS-VERSION - The platform operating system's version\r\n                X-FILAMENT-APP-VERSION - The version of the Patient IO App",
                "operationId": "Beacon_RecordBeacon",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model containg the type of beacon.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecordBeaconBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/beacons/invitations": {
            "post": {
                "tags": [
                    "Beacon"
                ],
                "summary": "This is an endpoint for capturing beacons in an unauthenticated context for invitations. The endpoint \r\n                uses the following http headers to create a beacon: \r\n                X-FILAMENT-OS-TYPE - The platform operating system\r\n                X-FILAMENT-OS-VERSION - The platform operating system's version\r\n                X-FILAMENT-APP-VERSION - The version of the Patient IO App",
                "operationId": "Beacon_RecordInvitationBeacon",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model containing the type of beacon and the invitation code.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecordInvitationBeaconBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/branding": {
            "get": {
                "tags": [
                    "Branding"
                ],
                "summary": "Get the branding for the logged in user.",
                "operationId": "Branding_GetBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BrandingViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/branding/distributors/{distributorId}": {
            "get": {
                "tags": [
                    "Branding"
                ],
                "summary": "Gets the branding for a given distributor.",
                "operationId": "Branding_GetDistributorBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BrandingViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/branding/distributors/{distributorId}/sponsors/{sponsorId}": {
            "get": {
                "tags": [
                    "Branding"
                ],
                "summary": "Gets the combined branding for a given sponsor of a given distributor. \r\n                This effectively returns the combination of sponsor and distributor\r\n                branding, with a sponsor's branding taking precednece over the distributor\r\n                branding.",
                "operationId": "Branding_GetSponsorBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BrandingViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/branding/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}": {
            "get": {
                "tags": [
                    "Branding"
                ],
                "summary": "Gets the combined branding for a given organization of a given sponsor. \r\n                This effectively returns the combination of sponsor and distributor\r\n                branding, with a sponsor's branding taking precednece over the distributor\r\n                branding.",
                "operationId": "Branding_GetOrganizationBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BrandingViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/campaignmonitor/transactional/smartEmail": {
            "get": {
                "tags": [
                    "CampaignMonitor"
                ],
                "summary": "Gets a list of all the smart emails for a sponsor.",
                "operationId": "CampaignMonitor_GetTransactionalSmartEmails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor Id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor Id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CampaignMonitorSmartEmailListing"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/campaignmonitor/driplists": {
            "get": {
                "tags": [
                    "CampaignMonitor"
                ],
                "summary": "Get a list of all the client's email subscriber list.",
                "operationId": "CampaignMonitor_GetSubscriberLists",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SubscriberListDetail"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/content": {
            "get": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that gets all of the care center content items for a sponsor.",
                "operationId": "CareCenter_GetCareCenterContentForDistributor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CareCenterContentViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method to create a new distributor care center center content item.",
                "operationId": "CareCenter_AddDistributorCareCenterContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The care center content model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content": {
            "get": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that gets all of the care center content items for a sponsor.",
                "operationId": "CareCenter_GetCareCenterContentForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CareCenterContentViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method to create a new care center center content item.",
                "operationId": "CareCenter_AddCareCenterContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The care center content model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/content/{contentId}": {
            "get": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that retrieves an individual piece of care center content, by ID.",
                "operationId": "CareCenter_GetDistributorCareCenterContent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that updates a care center content item.",
                "operationId": "CareCenter_UpdateDistributorCareCenterContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The id of the content item to update.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that deletes a care center content item and it's associated media.",
                "operationId": "CareCenter_DeleteDistributorCareCenterContent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}": {
            "get": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that retrieves an individual piece of care center content, by ID.",
                "operationId": "CareCenter_GetCareCenterContent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that updates a care center content item.",
                "operationId": "CareCenter_UpdateCareCenterContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The id of the content item to update.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that deletes a care center content item.",
                "operationId": "CareCenter_DeleteCareCenterContent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/content/{contentId}/image": {
            "post": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that uploads an arbitrary media item for a sponsor and associated it to a piece of already created\r\n                content.\r\n                The returned URL points to the uploaded item. Invocation of this method must be done as Mime Multi-part content.",
                "operationId": "CareCenter_UploadDistributorMedia",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier for the content for which to upload media.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that deletes a piece of media based on its URL.",
                "operationId": "CareCenter_DeleteDistributorMedia",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier of the content image to be deleted.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}/image": {
            "post": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that uploads an arbitrary media item for a sponsor and associated it to a piece of already created\r\n                content.\r\n                The returned URL points to the uploaded item. Invocation of this method must be done as Mime Multi-part content.",
                "operationId": "CareCenter_UploadMedia",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier for the content for which to upload media.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that deletes a piece of media based on its URL.",
                "operationId": "CareCenter_DeleteMedia",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "contentId",
                        "in": "path",
                        "description": "The content identifier of the content image to be deleted.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/careteams/{organizationId}": {
            "get": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that retrieves care team members within a given sponsor organization.",
                "operationId": "CareCenter_GetCareCenterContentForCareTeam",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CareTeamMemberViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/content/upload": {
            "post": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that creates an item of care center content with a document to upload at the sponsor level.",
                "operationId": "CareCenter_UploadDistributorCareCenterContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentUploadBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/upload": {
            "post": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that creates an item of care center content with a document to upload at the sponsor level.",
                "operationId": "CareCenter_UploadCareCenterContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CareCenterContentUploadBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/carecenter/content": {
            "get": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that gets the care center content for patient.",
                "operationId": "CareCenter_GetCareCenterContentForPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CareCenterContentViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/carecenter": {
            "get": {
                "tags": [
                    "CareCenter"
                ],
                "summary": "This is a method that retrieves all care center content for a patient,\r\n                including organization and care team sections.",
                "operationId": "CareCenter_GetCareCenterNodesForPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SectionReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/carecenter/content": {
            "get": {
                "tags": [
                    "CareCenterInternal"
                ],
                "summary": "This is a method that gets the care center content for patient.",
                "operationId": "CareCenterInternal_GetCareCenterContentForPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier. Must be the Patient IO internal identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CareCenterContentViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/carecenter": {
            "get": {
                "tags": [
                    "CareCenterInternal"
                ],
                "summary": "This is a method that retrieves all care center content for a patient,\r\n                including organization and care team sections.",
                "operationId": "CareCenterInternal_GetCareCenterNodesForPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SectionReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/categories": {
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that adds categories to a care plan.\r\n                Within the dashboard UI, categories are referred to as \"Groups\".\r\n                Categories are most frequently used to describe groups of patients.",
                "operationId": "CarePlans_AddCategoriesToCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "categoryIdList",
                        "in": "body",
                        "description": "List of category ids to add.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that removes categories from a care plan. Categories are referred to as groups within\r\n                the UI of Patient IO applications.",
                "operationId": "CarePlans_RemoveCategoriesFromCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "List of category ids to remove",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/categories": {
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that adds categories to a distributor care plan.\r\n                Within the dashboard UI, categories are referred to as \"Groups\".\r\n                Categories are most frequently used to describe groups of patients.",
                "operationId": "CarePlans_AddCategoriesToDistributorCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryIdList",
                        "in": "body",
                        "description": "List of category ids to add.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "Remove categories fom a distributor care plan",
                "operationId": "CarePlans_RemoveCategoriesFromDistributorCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of category Ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/sponsorcareplanid": {
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that applies a sponsor assigned id to a care plan.\r\n                This is an arbitrary string referred to as the SponsorCarePlanId.",
                "operationId": "CarePlans_ApplyCarePlanSponsorCarePlanId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The SponsorCarePlanId",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ValueBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}": {
            "get": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that retrieves data about a care plan.",
                "operationId": "CarePlans_GetSponsorCarePlan",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that clones a care plan within a sponsor.\r\n                This action creates a new and independent clone of the care plan.\r\n                The name, categories and plan types of the care plan can be changed.",
                "operationId": "CarePlans_CloneCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "carePlanCloneModel",
                        "in": "body",
                        "description": "Model describing new care plan name, CategoryId, PlanTypeId.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloneCarePlanBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that archives a care plan.\r\n                Archiving a care plan makes it inaccessible for new assignments\r\n                to patients or changes to the care plan. A care plan to which\r\n                patients are currently assigned cannot be archived.\r\n                Archived care plans can be un-archived.\r\n                Personal care plans cannot be archived.",
                "operationId": "CarePlans_ArchiveCarePlan",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan definition.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}": {
            "get": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that retrieves data about a care plan.",
                "operationId": "CarePlans_GetDistributorCarePlan",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that clones a care plan within a sponsor.\r\n                This action creates a new and independent clone of the care plan.\r\n                The name, categories and plan types of the care plan can be changed.",
                "operationId": "CarePlans_CloneDistributorCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanCloneModel",
                        "in": "body",
                        "description": "Model describing new care plan name, CategoryId, PlanTypeId.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloneCarePlanBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that archives a care plan.\r\n                Archiving a care plan makes it inaccessible for new assignments\r\n                to patients or changes to the care plan. A care plan to which\r\n                patients are currently assigned cannot be archived.",
                "operationId": "CarePlans_ArchiveDistributorCarePlan",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan definition.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans": {
            "get": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that retrieves a sponsor's care plans. The return set is \r\n            limited; it does not retrieve all the of the information about a care plan \r\n             because sponsors may have a large number of care plans.",
                "operationId": "CarePlans_GetCarePlans",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SponsorCarePlanReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that creates a new sponsor population care plan.\r\n                Care plans are always created and \"owned\" in the context of a sponsor.",
                "operationId": "CarePlans_CreateCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlan",
                        "in": "body",
                        "description": "The care plan definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CarePlanBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans": {
            "get": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that retrieves a distributor's care plans. The return set is \r\n            limited; it does not retrieve all the of the information about a care plan \r\n             because distributors may have a large number of care plans.",
                "operationId": "CarePlans_GetDistributorCarePlans",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DistributorCarePlanReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that creates a new distributor population care plan.\r\n                Care plans are always created and \"owned\" in the context of a sponsor.",
                "operationId": "CarePlans_CreateDistributorCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The care plan definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCarePlanBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/name": {
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This method renames a dstributor care plan.",
                "operationId": "CarePlans_RenameDistributorCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/careplans/{carePlanId}": {
            "get": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that retrieves data about a care plan.",
                "operationId": "CarePlans_GetCarePlan",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The internal care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/days/{dayOfCare}": {
            "get": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that retrieves data about a Care Plan for a specific day.",
                "operationId": "CarePlans_GetCarePlanForDate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dayOfCare",
                        "in": "path",
                        "description": "The day of care in the format yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/approve": {
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that records the signature of a supervisor, indicating that revisions to a care plan have\r\n                been reviewed and approved.",
                "operationId": "CarePlans_RecordSupervisorApproval",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The signature model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignatureBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/name": {
            "put": {
                "tags": [
                    "CarePlans"
                ],
                "summary": "This is a method that renames a care plan.",
                "operationId": "CarePlans_RenameCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "This is a method that gets all of the categories within a distributor.",
                "operationId": "Categories_GetCategoriesForDistributor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "This is a method that creates a Category for a distributor.\r\n                Categories can be created at the Distributor level and shared\r\n                to Sponsors within that Distributor.",
                "operationId": "Categories_CreateCategoryForDistributor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryModel",
                        "in": "body",
                        "description": "Category to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/categories/{categoryId}": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "This is a method that renames a distributor category.",
                "operationId": "Categories_RenameDistributorCategory",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "nameModel",
                        "in": "body",
                        "description": "The name binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "This is a method that gets all of the categories within a sponsor.",
                "operationId": "Categories_GetCategoriesForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "This is a method that creates a category with a sponsor.",
                "operationId": "Categories_CreateCategoryForSponsor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryModel",
                        "in": "body",
                        "description": "Category to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/categories/{categoryId}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "This is a method that renames a category within a sponsor.",
                "operationId": "Categories_RenameCategory",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor Id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor Id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category Id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryName",
                        "in": "body",
                        "description": "The categoryName",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdNameModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/chatbot/{chatBotContextId}": {
            "get": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Retrieves a Distributor's chat bot context.",
                "operationId": "ChatBot_GetDistributorChatBotContextModel",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}": {
            "get": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Retrieves a Sponsor's chat bot context.",
                "operationId": "ChatBot_GetSponsorChatBotContextModel",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/context/all": {
            "get": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Get all of the Chat Bot Contexts associated with a sponsor and distributor.",
                "operationId": "ChatBot_GetAllSponsorChatBotContextModels",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChatBotContextViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/bot": {
            "post": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Create a distributor level bot.",
                "operationId": "ChatBot_CreateDistributorBotAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The create binding model for the bot.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/chatbot": {
            "post": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Creates a new Distributor Chat Bot context.",
                "operationId": "ChatBot_CreateChatBotDistributorContext",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The chat bot context create binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot": {
            "post": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Creates a new Sponsor Chat Bot context.",
                "operationId": "ChatBot_CreateChatBotSponsorContext",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The chat bot context create binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items": {
            "post": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Create a Distributor's chat bot context item.",
                "operationId": "ChatBot_AddDistributorChatBotContextItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items": {
            "post": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Create a Sponsor's chat bot context item.",
                "operationId": "ChatBot_AddSponsorChatBotContextItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}/feedback": {
            "post": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Provide feedback on a chat bot response",
                "operationId": "ChatBot_SendChatBotResponseFeedback",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chat bot context identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextItemId",
                        "in": "path",
                        "description": "The chat bot context item identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The chat bot response feedback model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotResponseFeedbackBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}": {
            "put": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Edit a Distributor's chat bot context item.",
                "operationId": "ChatBot_UpdateDistributorChatBotContextItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextItemId",
                        "in": "path",
                        "description": "The chatbot context item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Delete a Distributor's chat bot context item.",
                "operationId": "ChatBot_DeleteDistributorChatBotContextItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextItemId",
                        "in": "path",
                        "description": "The chatbot context item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}": {
            "put": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Edit a Sponsor's chat bot context item.",
                "operationId": "ChatBot_UpdateSponsorChatBotContextItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextItemId",
                        "in": "path",
                        "description": "The chatbot context item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatBotContextItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "ChatBot"
                ],
                "summary": "Delete a Sponsor's chat bot context item.",
                "operationId": "ChatBot_DeleteSponsorChatBotContextItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextId",
                        "in": "path",
                        "description": "The chatbot context identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "chatBotContextItemId",
                        "in": "path",
                        "description": "The chatbot context item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/careplans": {
            "get": {
                "tags": [
                    "ClientDataExport"
                ],
                "summary": "This is a method that retrieves data describing the precise definition\r\n                of the care plan assigned to each patient within a sponsor.",
                "operationId": "ClientDataExport_GetPatientsCarePlans",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ExportCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/patients/scheduledtasks": {
            "post": {
                "tags": [
                    "ClientDataExport"
                ],
                "summary": "This is a method that retrieves all the ScheduledTasks assigned to\r\n                patients within a sponsor, along with the outcomes of those ScheduledTasks\r\n                covering a specific date range. If no dates are provided, the results will\r\n                cover the last 30 days.",
                "operationId": "ClientDataExport_CreatePatientTaskDataExtract",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePatientTaskDataExtractBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ExportCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/patients/taskcompletion": {
            "get": {
                "tags": [
                    "ClientDataExport"
                ],
                "summary": "This is a method that retrieves the completion state of a specific task over a time range.",
                "operationId": "ClientDataExport_GetPatientsTaskCompletion",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "text/csv"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskName",
                        "in": "query",
                        "description": "The name of the task.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientTaskCompletionOutboundModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/users/information": {
            "get": {
                "tags": [
                    "ClientDataExport"
                ],
                "summary": "Retrieves the list of users for a given distributor/sponsor.",
                "operationId": "ClientDataExport_GetActiveUsersInformation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserInformationOutboundModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/conversations": {
            "get": {
                "tags": [
                    "ConversationLists"
                ],
                "summary": "This is a method that retrieves a list of all of a sponsor's organization conversations,\r\n                optionally within a specified date range. The organization list is constrained to the organizations\r\n                which the calling user has a right to view.",
                "operationId": "ConversationLists_GetSponsorOrganizationConversations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be\r\n                omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive.\r\n                May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of\r\n                a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in\r\n                the list,\r\n                all tags must be present on the conversation in order for it to be included. Parameter is optional.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/ConversationListItemViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/conversations/metadata": {
            "get": {
                "tags": [
                    "ConversationLists"
                ],
                "summary": "This is a method that retrieves metadata about all the conversations in a sponsor's organizations.\r\n                The organizations are constrained to those the caller can see.",
                "operationId": "ConversationLists_GetSponsorOrganizationConversationsMetaData",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationsMetaData"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations": {
            "get": {
                "tags": [
                    "ConversationLists"
                ],
                "summary": "This is a method that retrieves a list of all of an organization's conversations, optionally within a specified date range.",
                "operationId": "ConversationLists_GetOrganizationConversations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be\r\n                omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of\r\n                a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in\r\n                the list,\r\n                all tags must be present on the conversation in order for it to be included. Parameter is optional.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations": {
            "get": {
                "tags": [
                    "ConversationLists"
                ],
                "summary": "This is a method that retrieves a list of all of a user's conversations, optionally within a specified date range.",
                "operationId": "ConversationLists_GetUserConversations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of\r\n                a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in\r\n                the list,\r\n                all tags must be present on the conversation in order for it to be included. Parameter is optional.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/conversations": {
            "get": {
                "tags": [
                    "ConversationLists"
                ],
                "summary": "This is a method that retrieves a list of all of a patient's conversations, optionally within a specified date range.",
                "operationId": "ConversationLists_GetPatientConversations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of\r\n                a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in\r\n                the list,\r\n                all tags must be present on the conversation in order for it to be included. Parameter is optional",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/conversations": {
            "get": {
                "tags": [
                    "ConversationLists"
                ],
                "summary": "This is a method that retrieves a list of all of a patient's conversations, optionally within a specified date range.",
                "operationId": "ConversationLists_GetPatientConversationsSponsorIdentifier",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of\r\n                a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in\r\n                the list,\r\n                all tags must be present on the conversation in order for it to be included. Parameter is optional",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/conversations/messageable": {
            "get": {
                "tags": [
                    "ConversationParties"
                ],
                "summary": "This is a method that gets the patient's list of messageable parties.",
                "operationId": "ConversationParties_GetMessageablePartiesForPatientExternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartyListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/conversations/messageable": {
            "get": {
                "tags": [
                    "ConversationParties"
                ],
                "summary": "This is a method that gets the patient's list of messageable parties.",
                "operationId": "ConversationParties_GetMessageablePartiesForPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier, must be the internal identifier to Patient IO.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartyListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/messageable": {
            "get": {
                "tags": [
                    "ConversationParties"
                ],
                "summary": "This is a method that gets a user's list of messageable parties",
                "operationId": "ConversationParties_GetMessageablePatientsForUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartyListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/messageable": {
            "get": {
                "tags": [
                    "ConversationParties"
                ],
                "summary": "This is a method that gets an organization's list of messageable parties (patients).",
                "operationId": "ConversationParties_GetMessageablePatientsForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartyListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/patients/{patientId}": {
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that gets an organization's conversation with a patient (from the organization's perspective). Optionally,\r\n                it can retrieve only those messages within a specified date range.",
                "operationId": "Conversations_GetOrganizationConversationWithPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be\r\n                omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that updates the state of an organization's conversation with a patient.",
                "operationId": "Conversations_UpdateOrganizationConversationStatus",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The conversation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConversationUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that sends a message from an organization to a patient.",
                "operationId": "Conversations_SendMessageFromOrganizationToPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "messageModel",
                        "in": "body",
                        "description": "The message.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MessageCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NewMessageReturnViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/patients/{patientId}": {
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that gets a user's conversation with a patient (from the user's perspective). Optionally,\r\n                it can retrieve only those messages within a specified date range.",
                "operationId": "Conversations_GetUserConversationWithPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be\r\n                omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that updates the state of an user's conversation with a patient.",
                "operationId": "Conversations_UpdateUserConversationState",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The conversation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConversationUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that sends a message from a user to a patient.",
                "operationId": "Conversations_SendMessageFromUserToPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "messageModel",
                        "in": "body",
                        "description": "The message.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MessageCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NewMessageReturnViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}": {
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that retrieves a patient's conversation with an organization (from the patient's perspective). Optionally,\r\n                it can retrieve only those messages within a specified date range.",
                "operationId": "Conversations_GetPatientConversationWithOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be\r\n                omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that updates the state of a patient's conversation with an organization.",
                "operationId": "Conversations_UpdatePatientConversationWithOrganizationStatus",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The conversation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConversationUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that sends a message from a patient to an organization.",
                "operationId": "Conversations_SendMessageFromPatientToOrganization",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsors identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The org identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "messageModel",
                        "in": "body",
                        "description": "The message.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MessageCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NewMessageReturnViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}": {
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that retrieves a patient's conversation with a user (from the patient's perspective). Optionally,\r\n                it can retrieve only those messages within a specified date range.",
                "operationId": "Conversations_GetPatientConversationWithUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDateTime",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for conversations, inclusive. May be\r\n                omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "toDateTime",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConversationViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that updates the state of a patient's conversation with an user.",
                "operationId": "Conversations_UpdatePatientConversationWithUserStatus",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The conversation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConversationUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "This is a method that sends a message from a patient to an user.",
                "operationId": "Conversations_SendMessageFromPatientToUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsors identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The org identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "messageModel",
                        "in": "body",
                        "description": "The message.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MessageCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NewMessageReturnViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/settings": {
            "put": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that sets the settings for a distributor.",
                "operationId": "Distributors_ChangeDistributorSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DistributorSettingsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/authorizationcodes": {
            "post": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that creates an authorization code. An authorization code can be used to allow a Patient\r\n                to self-register with Patient IO in connection with a sponsor.",
                "operationId": "Distributors_CreateAuthorizationCode",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "authCodeModel",
                        "in": "body",
                        "description": "Describes the sponsor and the authorization code.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthorizationCodeBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/authorizationcodes/{authorizationCode}": {
            "delete": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that removes an authorization code.",
                "operationId": "Distributors_DeleteAuthorizationCode",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "authorizationCode",
                        "in": "path",
                        "description": "The authorization code to remove.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors": {
            "post": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that creates the distributor.",
                "operationId": "Distributors_CreateDistributor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorModel",
                        "in": "body",
                        "description": "Distributor to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DistributorBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdNameModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors": {
            "get": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that retrieves a list of sponsors within a distributor.",
                "operationId": "Distributors_GetSponsorsForDistributor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SponsorIdentityReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that creates a Sponsor within a distributor.",
                "operationId": "Distributors_CreateSponsor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorModel",
                        "in": "body",
                        "description": "The sponsor to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SponsorBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdNameModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/branding": {
            "get": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that gets the branding for the sponsor.",
                "operationId": "Distributors_GetDistributorBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BrandingViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that updates branding within a distributor.",
                "operationId": "Distributors_UpdateDistributorBranding",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The sponsor to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandingBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IdNameModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that deletes Distributor level branding.\r\n                Branding describes how dynamic white labeling\r\n                functionality works at the distributor level.",
                "operationId": "Distributors_DeleteDistributorBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}": {
            "get": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that gets information about a Distributor -\r\n                all the sponsors, categories and other items.",
                "operationId": "Distributors_GetDistributor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DistributorViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/name": {
            "put": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that gives a new name to a sponsor within a distributor.",
                "operationId": "Distributors_RenameSponsor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IdNameModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/branding/emaillogo": {
            "post": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that updates the branding email logo for the distributor.",
                "operationId": "Distributors_UploadDistributorBrandingEmailLogo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/branding/logo": {
            "post": {
                "tags": [
                    "Distributors"
                ],
                "summary": "This is a method that updates the branding logo for the distributor.",
                "operationId": "Distributors_UploadDistributorBrandingLogo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/exportfiles": {
            "post": {
                "tags": [
                    "IntegrationManagement"
                ],
                "summary": "This is a method that adds an export file record for a sponsor.\r\n                This record specifies the exact internal PatientIO components to\r\n                be used to push an automated export of PatientIO data to a\r\n                client system.",
                "operationId": "IntegrationManagement_AddExportFileRecord",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportFileRecordBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "IntegrationManagement"
                ],
                "summary": "This is a method that deletes an export file record.",
                "operationId": "IntegrationManagement_DeleteExportFileRecord",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "Name of the file.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/importfiles": {
            "post": {
                "tags": [
                    "IntegrationManagement"
                ],
                "summary": "This is a method that adds an import file record. The Import\r\n                File Record describes where on a customer's external system\r\n                data to be imported into PatientIO is located, and how that\r\n                data is to be processed within PatientIO.",
                "operationId": "IntegrationManagement_AddImportFileRecord",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImportFileRecordBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "IntegrationManagement"
                ],
                "summary": "This is a method that deletes an import file record.",
                "operationId": "IntegrationManagement_DeleteImportFileRecord",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "Name of the file.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/integration": {
            "get": {
                "tags": [
                    "IntegrationManagement"
                ],
                "summary": "This is a method that retrieves all integration management data for a sponsor.",
                "operationId": "IntegrationManagement_GetIntegrationManagementData",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IntegrationManagementModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "IntegrationManagement"
                ],
                "summary": "This is a method that deletes all integration management data for a sponsor.",
                "operationId": "IntegrationManagement_DeleteIntegrationManagementData",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/credentials": {
            "post": {
                "tags": [
                    "IntegrationManagement"
                ],
                "summary": "This is a method that updates or creates integration management credentials for a sponsor.\r\n                These credentials are used to authenticate Patient IO automated processes with external\r\n                customer systems.",
                "operationId": "IntegrationManagement_UpdateIntegrationManagementCredentials",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The integration management credential model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IntegrationManagementCredentialBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/invitations/{invitationCode}": {
            "get": {
                "tags": [
                    "Invitations"
                ],
                "summary": "This is a method that retrives information about a specific invitation.",
                "operationId": "Invitations_GetInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InvitationViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/invitations/{invitationCode}/activationcode": {
            "post": {
                "tags": [
                    "Invitations"
                ],
                "summary": "This is a method that generates and sends the two factor activation code.",
                "operationId": "Invitations_GenerateActivationCode",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateActivationCodeBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/activate": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that determines whether the patient is deactivated.",
                "operationId": "Patient_IsPatientDeactivated",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorPatientId",
                        "in": "query",
                        "description": "The sponsor patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateOfBirth",
                        "in": "query",
                        "description": "The date of birth.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that activates a patient which is currently in inactive state.",
                "operationId": "Patient_Activate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The activate patient with date of birth and sponsor patient id model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivatePatientDobSponsorPatientIdBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Retrieves all care plans to which a patient has access",
                "operationId": "Patient_GetPatientCarePlans",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CarePlanViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that associates a care plan to a patient. A patient can be\r\n                associated to multiple care plans. A care plan is not owned by a patient\r\n                unless it is a \"personal care plan.\" A patient can have only one personal \r\n                care plan per sponsor.",
                "operationId": "Patient_AddCarePlansToPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of care plans to assign to the patient.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SponsorIdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that clones a care plan to a patient, creating a personal care plan for that patient.\r\n                The personal care plan will be an exact copy of the cloned care plan.",
                "operationId": "Patient_CloneCarePlanToPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Identifies the care plan to be cloned to the patient and how the operation should occur.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloneCarePlanToPatientBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that adds categories to the patient.\r\n                Categories are known as groups within the dashboard UI.",
                "operationId": "Patient_AddCategoriesToPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The categories to assign to the patient.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/organizations": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that affiliates a patient to an organization or\r\n                multiple organizations.",
                "operationId": "Patient_AffiliatePatientFromOrganization",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of organization ids to assign.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/archive": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that archives a patient record, putting it into a state where it\r\n                cannot be authenticated modified or accessed. This takes place in the context of\r\n                a sponsor, so the patient may be active in other sponsors. Patient's cannot be \r\n                archived while they are associated with population level care plans for the sponsor.",
                "operationId": "Patient_ArchivePatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/broadcast": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that gets the list of broadcast to patients short codes.",
                "operationId": "Patient_GetBroadcastToPatientsShortCodes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BroadcastToPatientsBuilderModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that broadcasts a message to a list of patients through\r\n                either push, email, or sms.",
                "operationId": "Patient_BroadcastToPatients",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient broadcast model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientBroadcastModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/bulkUpdate": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that allows a care team member to bulk manage patients. \r\n                The user can specify a collection of patients by ID to be managed. \r\n                Supported operations include adding/removing the care plans, adding/removing\r\n                the categories, and changing the organization of each patient in the collection.",
                "operationId": "Patient_BulkUpdate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The bulk patient update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SponsorEntityIdBulkPatientUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/password": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that allows a patient to change his password.\r\n                This API relies on the call used being authorized in the system\r\n                and knowing the existing password. Higher privilege users may\r\n                reset the password using this API without knowing the\r\n                existing password.",
                "operationId": "Patient_ChangePassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).\r\n                This must match authenticated user, except for those with higher\r\n                privilege levels than the patient.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The old and new passwords.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/roles": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that changes a patient's role.",
                "operationId": "Patient_ChangePatientRole",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient change model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientChangeRoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/settings": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that changes a patient's settings.",
                "operationId": "Patient_ChangePatientSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient settings model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientSettingsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/alerts": {
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that clears all active alerts on the patient.",
                "operationId": "Patient_ClearPatientAlerts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that gets a list of all patients for a particular sponsor.\r\n                Constraints on the list are based on the caller's access permissions.",
                "operationId": "Patient_GetPatientsForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorPatientListViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that creates a new patient record using an authorization code.",
                "operationId": "Patient_CreatePatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model describing the patient record to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientCreateBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/patient": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "Create a Patient care plan for a patient. Only a patient can\r\n            create a Patient care plan.",
                "operationId": "Patient_CreatePatientCarePlan",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that creates a new patient record within the filament distributor\r\n                using an authorization code.",
                "operationId": "Patient_CreatePatientInFilamentDistributor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model describing the patient record to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientCreateBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/personal": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that creates a personal care plan, which will initially have no content.",
                "operationId": "Patient_CreatePersonalCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model describing the personal care plan.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddPersonalCarePlanBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/deactivate": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that deactivates a patient. Deactivating a patient puts them into a state\r\n                where the patient cannot login unless the patient is activated by supplying\r\n                secret properties, by default the SponsorPatientId and patient's recorded date of birth.",
                "operationId": "Patient_Deactivate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/reactivate": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that reactivates a patient.",
                "operationId": "Patient_Reactivate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that retrieves patient data.\r\n                The data is constrained by caller access permissions.",
                "operationId": "Patient_GetPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that updates the patient's information. If user name and email\r\n                address are to be changed, set NewUserName, leaving UserName as the original user name.",
                "operationId": "Patient_UpdatePatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that permanently and finally deletes a patient record.",
                "operationId": "Patient_DeletePatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/photo": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that adds or updates a photo for the patient.\r\n                This endpoint requires use of mime multipart content, not json.",
                "operationId": "Patient_UploadPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that deletes a patient's profile photo.",
                "operationId": "Patient_DeletePhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/alerted": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that gets a list of all alerted patients for a particular organization.\r\n                Constraints on the list are based on the caller's access permissions.",
                "operationId": "Patient_GetAlertedPatientsForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertedPatientViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/alerted": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that gets a list of all alerted patients for a particular sponsor.\r\n                Constraints on the list are based on the caller's access permissions.",
                "operationId": "Patient_GetAlertedPatientsForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertedPatientViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/archived-patients": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that gets a list of all archived patients for a particular sponsor.\r\n                Archived patients may still be active for other sponsors, but are inactive for this sponsor.",
                "operationId": "Patient_GetArchivedPatients",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArchivedPatientViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/tasks": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that retrieves tasks a patient has completed.",
                "operationId": "Patient_GetCompletedTaskReadModels",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedulable": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method to retrives tasks that a patient may assign.",
                "operationId": "Patient_GetPatientSchedulableTasks",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifer.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that gets a list of all patients for a particular sponsor that are\r\n                associated to a particular organization id.",
                "operationId": "Patient_GetPatientsForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientListItemViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/tasks/{taskId}": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that retrieves the patient's task outcomes over time.",
                "operationId": "Patient_GetTaskOutcomesOverTime",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The yyyy-MM-dd format for the start date.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The yyyy-MM-dd format for the end date.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "intervalType",
                        "in": "query",
                        "description": "The period of time the results should be grouped by.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Day",
                            "Month"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskOutcomesOverTime"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/pushscheduleupdate": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that pushes a schedule update to the patient immediately.\r\n                This call is used if a patient's care plan(s) has changed, and we want to update\r\n                today's tasks right away rather than leaving them stable according to the\r\n                previous care plan assignments.",
                "operationId": "Patient_PushScheduleUpdate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/{carePlanId}": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that updates a patient's care plan to another care plan.\r\n                That is, swap one care plan for another. This method does not operate on Patient care plans.",
                "operationId": "Patient_ReplacePatientCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of care plan ids to swap in.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that removes a population or personal care plan from a patient.",
                "operationId": "Patient_RemoveCarePlanFromPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories/{categoryId}": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that updates a patient's category to another category.\r\n                That is, swap one category for another.",
                "operationId": "Patient_ReplacePatientCategory",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of category ids to swap in.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that removes a category from a patient.",
                "operationId": "Patient_RemoveCategoryFromPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/organizations/{organizationId}": {
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that unaffiliates a patient from an organization.",
                "operationId": "Patient_UnaffiliatePatientFromOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization which should be removed from the patient.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/unarchive": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "This is a method that removes a patient from archived state and makes them available for normal operations.",
                "operationId": "Patient_UnarchivePatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/fullname": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "Update the patient's name.",
                "operationId": "Patient_UpdatePatientFullName",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fullName",
                        "in": "body",
                        "description": "The patient full name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullNameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/address": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "Update the patient's address.",
                "operationId": "Patient_UpdatePatientAddress",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient address binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddressBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/timezone": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "Update the patient's time zone.",
                "operationId": "Patient_UpdatePatientTimeZone",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient time zone binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeZoneBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/signaledalerts": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Retrieves signaled alerts for the provided sponsor across a date range.",
                "operationId": "Patient_GetSignaledAlerts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "activeOnly",
                        "in": "query",
                        "description": "True if only active alerts should be returned.  False if all alerts should be returned.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SignaledAlertViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/lastmeasurement": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retreives a list of patients that have recorded a measurement in the given time range.",
                "operationId": "PatientIndex_GetRecentActivityPatientsForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The start date.  Expected format: yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The end date.  Expected format: yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientMostRecentTaskResultViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/population": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retreives a list of patients that belong to one of the given care plans.",
                "operationId": "PatientIndex_GetPopulationCarePlansForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanIds",
                        "in": "query",
                        "description": "The list of care plan identifiers.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientCoreViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/none": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retreives a list of patients that are not assigned a care plan.",
                "operationId": "PatientIndex_GetNoCarePlansForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientCoreViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/personal": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retreives a list of patients that have a personal care plan.",
                "operationId": "PatientIndex_GetPersonalPatientCarePlansForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientCoreViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/patient": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retreives a list of patients that have a patient care plan.",
                "operationId": "PatientIndex_GetPatientCarePlansForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientCoreViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/name": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retreives a list of patients that match a last name.  First name is used for additional filtering.",
                "operationId": "PatientIndex_GetPatientsbyNameForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "The last name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "The first name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientCoreViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/alerted": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "This is a method that gets a list of all alerted patients for a particular sponsor.\r\n                Constraints on the list are based on the caller's access permissions.",
                "operationId": "PatientIndex_GetAlertedPatientsForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlertedPatientViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/createddate": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retrieves a list of patients that were created within the date range provided.",
                "operationId": "PatientIndex_GetNewPatientsForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The start date.  Expected format: yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The end date.  Expected format: yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientCreatedDateViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/appointment": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retrieves a list of patients that have appointments within the specified date range.",
                "operationId": "PatientIndex_GetPatientsByAppointmentDateForSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The start date.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The end date.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientAppointmentDateViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/userlastmeasurement": {
            "get": {
                "tags": [
                    "PatientIndex"
                ],
                "summary": "Retrieves a list of patients that the current user has recorded task for since a previous date.",
                "operationId": "PatientIndex_GetPatientsByUserLastMeasurement",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The start date.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeShareCare",
                        "in": "query",
                        "description": "The optional paramter for include/exclude sharecare only users.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientCoreViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{sponsorName}/activate": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that activates a patient which is currently in inactive state.",
                "operationId": "PatientInternal_ActivateWithSponsorName",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sponsorName",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivatePatientDobSponsorPatientIdBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/patients/activate": {
            "get": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that determines whether the patient is deactivated.",
                "operationId": "PatientInternal_IsPatientDeactivated",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sponsorPatientId",
                        "in": "query",
                        "description": "The sponsor patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateOfBirth",
                        "in": "query",
                        "description": "The date of birth.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that activates a patient which is currently in inactivate state.",
                "operationId": "PatientInternal_Activate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The activate patient with date of birth and sponsor patient id model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivatePatientDobSponsorPatientIdBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/careplans": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that associates a care plan to a patient. A patient can be associated\r\n                to multiple care plans. A care plan is not owned by a patient unless it is a \"personal\r\n                care plan.\" A patient can have only one personal care plan at a time, and may not mix\r\n                a personal care plan with other population level care plans.",
                "operationId": "PatientInternal_AddCarePlansToPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of care plans to assign to the patient.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/categories": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that adds categories to the patient.\r\n                Categories are known as groups within the dashboard UI.",
                "operationId": "PatientInternal_AddCategoriesToPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The categories to assign to the patient.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/organizations": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that affiliates a patient to an organization or organizations.",
                "operationId": "PatientInternal_AffiliatePatientFromOrganization",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of organization ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/password": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that allows a patient to change his password. This API relies\r\n                on the calling used being authorized in the system and knowing the existing password.\r\n                Higher privilege users may reset the password using this API without knowing the\r\n                existing password.",
                "operationId": "PatientInternal_ChangePassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The old and new passwords.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/roles": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that changes patient's role.",
                "operationId": "PatientInternal_ChangePatientRoleInternal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient role change model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientChangeRoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "Adds roles to a patient.",
                "operationId": "PatientInternal_AddRoles",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The roles to add.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/settings": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that changes patient settings.",
                "operationId": "PatientInternal_ChangePatientSettingsInternal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientSettingsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/alerts": {
            "delete": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that clears all active alerts on the patient.",
                "operationId": "PatientInternal_ClearPatientAlerts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/photo": {
            "post": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that adds or updates a photo for the patient.\r\n                This endpoint requires use of mime multipart content, not json.",
                "operationId": "PatientInternal_UploadPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that deletes a patient's profile photo.",
                "operationId": "PatientInternal_DeletePhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/tasks": {
            "get": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that retrieves tasks a patient has completed.",
                "operationId": "PatientInternal_GetCompletedTaskReadModels",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/tasks/{taskId}": {
            "get": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that retrieves the patients task outcomes over time.",
                "operationId": "PatientInternal_GetTaskOutcomesOverTime",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "intervalType",
                        "in": "query",
                        "description": "The period of time the results should be grouped by.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Day",
                            "Month"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskOutcomesOverTime"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/pushscheduleupdate": {
            "post": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that pushes a schedule update to the patient immediately.\r\n                This call is used if a patient's care plan(s) has changed, and we want to\r\n                update today's tasks right away rather than leaving them stable according \r\n                to the previous care plan assignments.",
                "operationId": "PatientInternal_PushScheduleUpdate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/careplans/{carePlanId}": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that updates a patient's care plan to another care plan.\r\n                That is, swap one care plan for another. This method works on Personal and Population\r\n                Care Plans, but not on Patient care plans, which cannot be removed.",
                "operationId": "PatientInternal_ReplacePatientCarePlan",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of care plan ids to swap in.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that removes a population or personal care plan from a patient.\r\n                This method does not operate on Patient care plans.",
                "operationId": "PatientInternal_RemoveCarePlanFromPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/categories/{categoryId}": {
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that updates a patient's category to another category.\r\n                That is, swap one category for another.",
                "operationId": "PatientInternal_ReplacePatientCategory",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of category ids to swap in.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that removes a category from a patient.",
                "operationId": "PatientInternal_RemoveCategoryFromPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/organizations/{organizationId}": {
            "delete": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that unaffiliates a patient from an organization.",
                "operationId": "PatientInternal_UnaffiliatePatientFromOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization which should be removed from the patient.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/signaledalerts": {
            "get": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "Retrieves signaled alerts for the provided sponsor across a date range.",
                "operationId": "PatientInternal_GetSignaledAlerts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "query",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "query",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "activeOnly",
                        "in": "query",
                        "description": "True if only active alerts should be returned.  False if all alerts should be returned.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SignaledAlertViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}": {
            "get": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that retrieves patient data.\r\n                The data is constrained by caller access permissions.",
                "operationId": "PatientInternal_GetPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that updates the patient's information.\r\n                If user name and email address are to be changed: set NewUserName,\r\n                leaving UserName as the original user name.",
                "operationId": "PatientInternal_UpdatePatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "This is a method that permanently and finally deletes a patient record.",
                "operationId": "PatientInternal_DeletePatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The internal Patient IO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/bulkUpdate": {
            "post": {
                "tags": [
                    "PatientInternal"
                ],
                "summary": "Allows a care team member to bulk manage patients. \r\n                The user can specify a collection of patients by ID to be managed. \r\n                Supported operations include adding/removing the care plans, adding/removing\r\n                the categories, and changing the organization of each patient in the collection.",
                "operationId": "PatientInternal_BulkPatientUpdate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The bulk patient update model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InternalBulkPatientUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/{invitationCode}/acceptance": {
            "put": {
                "tags": [
                    "PatientInvitations"
                ],
                "summary": "This is a method that accepts an invitation for a patient.\r\n                Accepting the invitation creates an actual Patient record within Patient IO,\r\n                using the data in the invitation.",
                "operationId": "PatientInvitations_AcceptPatientInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The invitation acceptance model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AcceptInvitationBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations": {
            "get": {
                "tags": [
                    "PatientInvitations"
                ],
                "summary": "This is a method that retrieves patient invitations for a sponsor.",
                "operationId": "PatientInvitations_GetPatientInvitations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "accepted",
                        "in": "query",
                        "description": "If set to true retrieve accepted. false retrieves unaccepted. If ommitted\r\n                retrieves both.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatientInvitation"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PatientInvitations"
                ],
                "summary": "This is a method that creates a patient invitation and sends a notice to the invited patient.",
                "operationId": "PatientInvitations_CreatePatientInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient invitation creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientInvitationCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InvitationCodeViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/authorizationcodes/{authorizationCode}/invitations": {
            "post": {
                "tags": [
                    "PatientInvitations"
                ],
                "summary": "This is a method creates an invitation and sends a notice to the patient. \r\n                This method allows the creation of a patient invitation for a\r\n                sponsor based on an authorization code. This allows a client that only knows\r\n                the authorization code for a sponsor to create and send an invitation to a\r\n                sponsor to a patient without authenticating (supports the Kiosk application.)",
                "operationId": "PatientInvitations_CreatePatientInvitationWithAuthCode",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "authorizationCode",
                        "in": "path",
                        "description": "The authorization code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The kiosk patient invitation creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/KioskPatientInvitationCreateBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InvitationCodeViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/{invitationCode}": {
            "delete": {
                "tags": [
                    "PatientInvitations"
                ],
                "summary": "This is a method that deletes an invitation for a patient.",
                "operationId": "PatientInvitations_DeletePatientInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/resend": {
            "post": {
                "tags": [
                    "PatientInvitations"
                ],
                "summary": "This is a method that resends unsent invitations given a list of invitation codes, \r\n                or invitations created within a certain date range.",
                "operationId": "PatientInvitations_ResendPatientInvitations",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The resend invitations model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResendInvitationsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions": {
            "post": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that creates a patient profile definition within a distributor.",
                "operationId": "PatientProfileDefinitions_AddPatientProfileDefinition",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The patient profile definition model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientProfileDefinitionCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientProfileDefinitionCreateBindingModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/sponsors": {
            "post": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that provisions a patient profile definition from a distributor to a sponsor.",
                "operationId": "PatientProfileDefinitions_AffiliatePatientProfileDefinitionToSponsor",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of sponsor identifiers.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/codeCollections": {
            "post": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that creates a CodeCollection within a patient profile definition.",
                "operationId": "PatientProfileDefinitions_CreatePatientProfileDefinitionCodeCollection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The profile definition element model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileDefinitionElementCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/tagelements": {
            "post": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that creates a TagElement within a patient profile definition",
                "operationId": "PatientProfileDefinitions_CreatePatientProfileDefinitionTagElement",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The profile definition element model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileDefinitionElementCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/textelements": {
            "post": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that creates a TextElement within a patient profile definition",
                "operationId": "PatientProfileDefinitions_CreatePatientProfileDefinitionTextElement",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The profile definition element model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileDefinitionElementCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}": {
            "get": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that retrieves a patient profile definition.",
                "operationId": "PatientProfileDefinitions_GetPatientProfileDefinition",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientProfileDefinitionEnhancedReadModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/codeCollections/{elementId}": {
            "delete": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that removes a CodeableElement with a patient profile definition.",
                "operationId": "PatientProfileDefinitions_RemovePatientProfileDefinitionCodeCollection",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The patient profile definition code element identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/tagelements/{patientProfileDefinitionTagElementId}": {
            "delete": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that removes a TagElement within a patient profile definition",
                "operationId": "PatientProfileDefinitions_RemovePatientProfileDefinitionTagElement",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionTagElementId",
                        "in": "path",
                        "description": "The patient profile definition tag element identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/textelements/{patientProfileDefinitionTextElementId}": {
            "delete": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that removes a TextElement within a patient profile definition",
                "operationId": "PatientProfileDefinitions_RemovePatientProfileDefinitionTextElement",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionTextElementId",
                        "in": "path",
                        "description": "The patient profile definition text element identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/category": {
            "put": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that sets the category on any PatientProfileDefinition.",
                "operationId": "PatientProfileDefinitions_SetPatientProfileDefinitionCategory",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "PaitnetProfileDefinition information to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientProfileDefinitionElementCategoryBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/elements/{elementId}/category": {
            "put": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that sets the category on any PatientProfileDefinition element.",
                "operationId": "PatientProfileDefinitions_SetPatientProfileDefinitionElementCategory",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The element identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "PatientProfileDefinition information to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientProfileDefinitionElementCategoryBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/elements/names/{elementName}/category": {
            "put": {
                "tags": [
                    "PatientProfileDefinitions"
                ],
                "summary": "This is a method that sets the category on any PatientProfileDefinition element by looking up the element by name.",
                "operationId": "PatientProfileDefinitions_SetPatientProfileDefinitionElementCategoryByName",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "elementName",
                        "in": "path",
                        "description": "Name of the element.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "PatientProfileDefinition information to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatientProfileDefinitionElementCategoryBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/codeCollections/{elementId}": {
            "post": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that adds or replaces codes on a profile code collection.",
                "operationId": "PatientProfiles_AddCodesToCodeCollectionOnSponsorPatientProfile",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The code collection identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The code collection model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodeCollectionBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/codeCollections/{elementId}": {
            "post": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that adds or replaces codes on a profile code collection.",
                "operationId": "PatientProfiles_AddCodesToCodeCollectionOnSponsorPatientProfileWithInstanceKey",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The code collection identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The instance of the patient profile definition to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The code collection model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodeCollectionBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/tagelements/{patientProfileDefinitionTagElementId}": {
            "post": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that adds a tag to a tag element in the patients profile.",
                "operationId": "PatientProfiles_AddElementTagsToSponsorPatientProfile",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionTagElementId",
                        "in": "path",
                        "description": "The patient profile definition tag element identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The profile tag element model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SetProfileTagElementBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/tagelements/{patientProfileDefinitionTagElementId}": {
            "post": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that adds a tag to a tag element in the patients profile.",
                "operationId": "PatientProfiles_AddElementTagsToSponsorPatientProfileInstance",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientProfileDefinitionTagElementId",
                        "in": "path",
                        "description": "The patient profile definition tag element identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The instance of the profile definition to retrieve.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The profile tage element model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SetProfileTagElementBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles": {
            "get": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that retrieves all instances of the patient profile within\r\n                the context of a particular sponsor. That is - retrieves the patient's profile record.",
                "operationId": "PatientProfiles_GetAllSponsorPatientProfiles",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FullPatientProfileViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances": {
            "get": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that retrieves all instances of the patient profile of\r\n                a particular patient profile definition, within the context of a particular\r\n                sponsor. That is - retrieves the patient's profile record.",
                "operationId": "PatientProfiles_GetAllSponsorPatientProfilesForProfileDefinition",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/PatientProfileCollectionEnhancedReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}": {
            "get": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that retrieves the default instance of a patient profile for a\r\n                particular patient profile definition, within  the context of a particular sponsor.\r\n                That is - retrieves the patient's profile record. This is the API to call for profiles\r\n                that are not instance based.",
                "operationId": "PatientProfiles_GetSponsorPatientProfile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientProfileEnhancedReadModel"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that supports updating multiple text and tag elements\r\n                within a patient's profile as a single operation.",
                "operationId": "PatientProfiles_UpdateSponsorPatientProfile",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The sponsor patient profile update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSponsorPatientProfileBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}": {
            "get": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that retrieves the patient profile for a particular instance of a particular patient\r\n                profile definition, within the context of a particular sponsor. That is - retrieves\r\n                the patient's profile record.",
                "operationId": "PatientProfiles_GetSponsorPatientProfileInstance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The instance of the profile definition to retrieve.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientProfileEnhancedReadModel"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that supports updating multiple text and tag elements\r\n                within a patient's profile as a single operation.",
                "operationId": "PatientProfiles_UpdateSponsorPatientProfileInstance",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The instance of the profile definition to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The sponsor patient profile update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSponsorPatientProfileBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that deletes a specific instance of a patient profile for a particular patient\r\n                profile definition, within  the context of a particular sponsor.",
                "operationId": "PatientProfiles_RemoveInstanceFromSponsorPatientProfile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The instance of the profile definition to delete.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/linkText": {
            "post": {
                "tags": [
                    "PatientProfiles"
                ],
                "summary": "This is a method that sets the link text of a particular instance of a sponsor patient profile.",
                "operationId": "PatientProfiles_SetLinkText",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientProfileDefinitionId",
                        "in": "path",
                        "description": "The patient profile definition identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "The instance of the patient profile definition to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The sponsor patient profile instance link text update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSponsorPatientProfileInstanceLinkText"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments": {
            "put": {
                "tags": [
                    "PatientSchedules"
                ],
                "summary": "This is a method that updates a patient appointment.",
                "operationId": "PatientSchedules_UpdateAppointment",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PatientSchedules"
                ],
                "summary": "This is a method that creates a new appointment for a patient.",
                "operationId": "PatientSchedules_CreateAppointment",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The appointment creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PatientSchedules"
                ],
                "summary": "This is a method that cancels a Patient appointment.",
                "operationId": "PatientSchedules_CancelAppointment",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The appointment cancellation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentCancelBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments/date": {
            "delete": {
                "tags": [
                    "PatientSchedules"
                ],
                "summary": "This is a method that deletes a Patient appointment by taking a\r\n                specific appointment date time.",
                "operationId": "PatientSchedules_CancelAppointmentByDate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appointmentDateTime",
                        "in": "query",
                        "description": "The appointment date time.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/days/{dayOfCare}/scheduledtasks/{scheduledTaskId}": {
            "post": {
                "tags": [
                    "PatientSchedules"
                ],
                "summary": "This is a method that records a measurement associated to a particular scheduled task.",
                "operationId": "PatientSchedules_RecordScheduledTaskOutcome",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor)\r\n                who owns the scheduled task",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dayOfCare",
                        "in": "path",
                        "description": "The day of care to which the scheduled task was assigned\r\n                in the format yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scheduledTaskId",
                        "in": "path",
                        "description": "The identifier of the scheduled task",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The measurement model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MeasurementBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RecordedMeasurementData"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule": {
            "get": {
                "tags": [
                    "PatientSchedules"
                ],
                "summary": "This is a method that retrieves the schedule for a given patient within a date range.",
                "operationId": "PatientSchedules_GetScheduleWithDateRange",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientScheduleViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/days/{dayOfCare}": {
            "get": {
                "tags": [
                    "PatientSchedules"
                ],
                "summary": "This is a method that retrieves the schedule for a patient for a particular day.",
                "operationId": "PatientSchedules_GetScheduleForDayOfCare",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dayOfCare",
                        "in": "path",
                        "description": "The day of care to which the scheduled task was assigned\r\n                in the format yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientScheduleViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/schedule/appointments": {
            "put": {
                "tags": [
                    "PatientSchedulesInternal"
                ],
                "summary": "This is a method that updates a patient appointment.",
                "operationId": "PatientSchedulesInternal_UpdateAppointment",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The Internal PatientIO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The appointment update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PatientSchedulesInternal"
                ],
                "summary": "This is a method that creates a new Appointment for a patient.",
                "operationId": "PatientSchedulesInternal_CreateAppointment",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The Internal PatientIO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The appointment creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PatientSchedulesInternal"
                ],
                "summary": "This is a method that deletes a Patient appointment.",
                "operationId": "PatientSchedulesInternal_CancelAppointment",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The Internal PatientIO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The appointment cancellation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentCancelBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sponsors/{sponsorId}/schedule/appointments": {
            "delete": {
                "tags": [
                    "PatientSchedulesInternal"
                ],
                "summary": "This is a method that deletes a Patient appointment.",
                "operationId": "PatientSchedulesInternal_CancelAppointmentByDate",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The Internal PatientIO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "appointmentDateTime",
                        "in": "query",
                        "description": "The appointment date time.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/schedule": {
            "get": {
                "tags": [
                    "PatientSchedulesInternal"
                ],
                "summary": "This is a method that retrieves the Schedule for a given patient within a date range.",
                "operationId": "PatientSchedulesInternal_GetScheduleWithDateRange",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The Internal PatientIO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientScheduleViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/schedule/days/{dayOfCare}": {
            "get": {
                "tags": [
                    "PatientSchedulesInternal"
                ],
                "summary": "This is a method that retrieves the schedule for a patient for a particular day.",
                "operationId": "PatientSchedulesInternal_GetScheduleForDayOfCare",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The Internal PatientIO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dayOfCare",
                        "in": "path",
                        "description": "The day of care to which the scheduled task was assigned\r\n                in the format yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientScheduleViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/schedule/days/{dayOfCare}/scheduledtasks/{scheduledTaskId}": {
            "post": {
                "tags": [
                    "PatientSchedulesInternal"
                ],
                "summary": "This is a method that records a measurement associated to a particular scheduled task.",
                "operationId": "PatientSchedulesInternal_RecordScheduledTaskOutcome",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The Internal PatientIO patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dayOfCare",
                        "in": "path",
                        "description": "The day of care to which the scheduled task was assigned\r\n                in the format yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scheduledTaskId",
                        "in": "path",
                        "description": "The scheduled task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The measurement model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MeasurementBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RecordedMeasurementData"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-plans/adherence": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient adherence percentage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateCarePlanAdherenceReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorEngagementOrAdherenceWithCarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/care-plans/adherence": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient adherence percentage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateCarePlanAdherenceReportForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorEngagementOrAdherenceWithCarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-plans/engagement": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient engagement percentage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateCarePlanEngagementReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorEngagementOrAdherenceWithCarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/care-plans/engagement": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient engagement percentage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateCarePlanEngagementReportForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorEngagementOrAdherenceWithCarePlanViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-team/engagement": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets the organization engagement reports\r\n                for the given spondor identifier and date range.",
                "operationId": "Reports_CreateCareTeamOrganizationEngagementReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/OrganizationEngagementRatioViewModel"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-team/sessions": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets the organization session reports\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateCareTeamOrganizationSessionReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/OrganizationSessionRatioViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/care-team/engagement": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a sponsor engagement reports\r\n                for the given distributor and date range.",
                "operationId": "Reports_CreateCareTeamSponsorEngagementReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/SponsorEngagementRatioViewModel"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/care-team/sessions": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets the sponsor session reports\r\n                for the given distributor identifier and date range.",
                "operationId": "Reports_CreateCareTeamSponsorSessionReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/SponsorSessionRatioViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/patients/channels": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient channel percent usage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreatePatientChannelReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientChannelPercentagesViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/channels": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient channel percent usage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreatePatientChannelReportForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientChannelPercentagesViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/patients/demographics": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient demographic report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreatePatientDemographicReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientDemographicsReport"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/demographics": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient demographic report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreatePatientDemographicReportForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientDemographicsReport"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/invitations/report": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient invitation report\r\n                for the given sponsor identifier and date range within\r\n                all organizations in the sponsor.",
                "operationId": "Reports_CreatePatientInvitationReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientInvitationReport"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/invitations/report": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient invitation report within a specific organization\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreatePatientInvitationReportForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientInvitationReport"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/engagement-adherence": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient engagement and adherence percentage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateSponsorEngagementAndAdherenceReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorEngagementOrAdherenceViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/engagement-adherence": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient engagement and adherence percentage report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateSponsorEngagementAndAdherenceReportForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorEngagementOrAdherenceViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/onboarding": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient invitations sent, activated, and pending report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateSponsorOnboardingReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientOnboardingCountsReport"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/onboarding": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "This is a method that gets a patient invitations sent, activated, and pending report\r\n                for the given sponsor identifier and date range.",
                "operationId": "Reports_CreateSponsorOnboardingReportForOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientOnboardingCountsReport"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/sharedCare": {
            "get": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "Retrieves a list of shared care users and who invited them.",
                "operationId": "SharedCare_GetSharedCareUsersReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SharedCareListItemViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/sharedcare/incoming/invitations/{invitationCode}/acceptance": {
            "put": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that allows new users to accept a shared care invitation they've received.",
                "operationId": "SharedCare_AcceptSharedCareInvitationForNewPatient",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The shared care invitation acceptance model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationAcceptBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PatientCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/sharedcare/invitations/{invitationCode}": {
            "get": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that retrieves the specified shared care invitation.",
                "operationId": "SharedCare_GetSharedCareInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/acceptance": {
            "put": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that allows existing Patient IO Patients\r\n                to accept a shared care invitation they've received.",
                "operationId": "SharedCare_AcceptSharedCareInvitationForExistingPatient",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The invited's patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SharedCarePatientViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}": {
            "put": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that changes the shared care patient permissions.",
                "operationId": "SharedCare_ChangeOutgoingSharedCareMemberPermissions",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sharedCarePatientId",
                        "in": "path",
                        "description": "The shared care patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The shared care permissions model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SharedCarePermissionsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that removes shared care rights from a patient, for a relation.",
                "operationId": "SharedCare_RemoveOutgoingSharedCareMember",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sharedCarePatientId",
                        "in": "path",
                        "description": "The shared care patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/decline": {
            "put": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that declines a shared care invitation.",
                "operationId": "SharedCare_DeclineSharedCareInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SharedCareInvitation"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations": {
            "get": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that retrieves a patient's received shared care invitations.",
                "operationId": "SharedCare_GetPendingReceivedSharedCareInvitations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SharedCareInvitationViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/{sharedCarePatientId}": {
            "delete": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that removes a patient from the incoming shared care of the specified patient.",
                "operationId": "SharedCare_RemovePatientFromIncomingSharedCare",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sharedCarePatientId",
                        "in": "path",
                        "description": "The incoming shared care patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/revoke": {
            "put": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that revokes a shared care invitation.",
                "operationId": "SharedCare_RevokeSharedCareInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations": {
            "post": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that creates a patient invitation, and sends a notice to the invited patient.",
                "operationId": "SharedCare_SendSharedCareInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The shared care invitation creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationCodeViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/sendemail": {
            "post": {
                "tags": [
                    "SharedCare"
                ],
                "summary": "This is a method that sends the shared care invitation email.",
                "operationId": "SharedCare_SendSharedCareInvitationEmail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationCodeViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/acceptance": {
            "put": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that allows existing Patient IO Patients\r\n                to accept a shared care invitation they've received.",
                "operationId": "SharedCareInternal_AcceptSharedCareInvitationForExistingPatientInternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The invited's patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SharedCarePatientViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}": {
            "put": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that changes the shared care patient permissions.",
                "operationId": "SharedCareInternal_ChangeOutgoingSharedCareMemberPermissionsInternal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sharedCarePatientId",
                        "in": "path",
                        "description": "The shared care patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The shared care permissions model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SharedCarePermissionsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that removes shared care rights from a patient, for a relation.",
                "operationId": "SharedCareInternal_RemoveOutgoingSharedCareMemberInternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sharedCarePatientId",
                        "in": "path",
                        "description": "The shared care patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/decline": {
            "put": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that declines a shared care invitation.",
                "operationId": "SharedCareInternal_DeclineSharedCareInvitationInternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SharedCareInvitation"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/incoming/invitations": {
            "get": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that retrieves a patient's received shared care invitations.",
                "operationId": "SharedCareInternal_GetPendingReceivedSharedCareInvitationsInternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SharedCareInvitationViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/incoming/{sharedCarePatientId}": {
            "delete": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that removes a patient from the incoming shared care of the specified patient.",
                "operationId": "SharedCareInternal_RemovePatientFromIncomingSharedCareInternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sharedCarePatientId",
                        "in": "path",
                        "description": "The incoming shared care patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/revoke": {
            "put": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that revokes a shared care invitation.",
                "operationId": "SharedCareInternal_RevokeSharedCareInvitationInternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/outgoing/invitations": {
            "post": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that creates a patient invitation, and sends a notice to the invited patient.",
                "operationId": "SharedCareInternal_SendSharedCareInvitationInternal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The shared care invitation creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationCodeViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/sendemail": {
            "post": {
                "tags": [
                    "SharedCareInternal"
                ],
                "summary": "This is a method that sends the shared care invitation email.",
                "operationId": "SharedCareInternal_SendSharedCareInvitationEmailInternal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "The patient identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SharedCareInvitationCodeViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/settings": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that modifies organization settings.",
                "operationId": "Sponsors_ChangeOrganizationSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The organization settings model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationSettingsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/sponsorOrganizationId": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that changes the SponsorOrganizationId of an organization.\r\n                The SponsorOrganizationId is an identifier, meaningful to a client, which\r\n                describes an Organization (e.g. an id number.)",
                "operationId": "Sponsors_ChangeSponsorOrganizationId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The sponsor organization identifier model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SponsorOrganizationIdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/settings": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that changes sponsor settings.",
                "operationId": "Sponsors_ChangeSponsorSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The sponsor settings model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SponsorSettingsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that gets sponsor secrets.",
                "operationId": "Sponsors_GetSponsorSecrets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorSecretsViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that changes sponsor secrets.",
                "operationId": "Sponsors_ChangeSponsorSecrets",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The sponsor secrets model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SponsorSecretsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that retrieves information about every organization within a sponsor.",
                "operationId": "Sponsors_GetOrganizations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that creates an Organization within a sponsor.\r\n                An Organization is meant to be any organizational unit,\r\n                like a physical location or region.",
                "operationId": "Sponsors_CreateOrganization",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The organization creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that retrieves information about a single organization within a Sponsor.",
                "operationId": "Sponsors_GetOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationReadModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that deletes an Organization within a sponsor.",
                "operationId": "Sponsors_DeleteOrganization",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that retrieves the branding information for an organization.",
                "operationId": "Sponsors_GetOrganizationBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BrandingViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the branding for the organization.",
                "operationId": "Sponsors_UpdateOrganizationBranding",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The branding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandingBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that deletes Organization level branding.\r\n                Branding describes how dynamic white labeling\r\n                functionality works at the organization level.",
                "operationId": "Sponsors_DeleteOrganizationBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/photo": {
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates a photo for the organization.",
                "operationId": "Sponsors_UploadOrganizationPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that deletes the photo for an organization,\r\n                which is used an Organization identification pages.",
                "operationId": "Sponsors_DeleteOrganizationPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that retrieves information about a sponsor.\r\n                Different role types may receive a more limited view of Sponsor information.",
                "operationId": "Sponsors_GetSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that deletes a Sponsor within a distributor - also all\r\n                care plans, patients, users, content and related data.\r\n                Cannot be reversed or recovered.",
                "operationId": "Sponsors_DeleteSponsor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor to be delete.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/branding": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that gets the branding for the sponsor.",
                "operationId": "Sponsors_GetSponsorBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BrandingViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the branding for the sponsor.",
                "operationId": "Sponsors_UpdateSponsorBranding",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The branding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandingBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that deletes the branding for a Sponsor,\r\n                which causes the Sponsor and any Organizations that do not have\r\n                their own branding, to revert to default Patient IO branding.",
                "operationId": "Sponsors_DeleteSponsorBranding",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets/{secretKey}": {
            "delete": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "Deletes a sponsor secret from the sponsor secrets object.",
                "operationId": "Sponsors_DeleteSponsorSecret",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "the sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "secretKey",
                        "in": "path",
                        "description": "The name of the secret to delete.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/authorizationcodes": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that retrieves all assigned authorization codes for a sponsor.",
                "operationId": "Sponsors_GetSponsorAuthorizationCodes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/counts": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that gets the counts for the sponsor for the specified date range.",
                "operationId": "Sponsors_GetSponsorCountsForDateRange",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorCounterViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/names/{sponsorName}": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that retrieves a limited subset of information about a sponsor,\r\n                given a sponsor name. Primarily omits sponsor tasks, care plans, organization\r\n                population count information.",
                "operationId": "Sponsors_GetSponsorDataByName",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorName",
                        "in": "path",
                        "description": "Name of the sponsor.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/authorizationcodes/{id}": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that gets data for a sponsor, within a distributor, with a given registration",
                "operationId": "Sponsors_GetSponsorDataByRegistrationCode",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The identifier.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/address": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the organization address.",
                "operationId": "Sponsors_UpdateOrganizationAddress",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The address model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddressBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/description": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the name of the organization.",
                "operationId": "Sponsors_UpdateOrganizationDescription",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The for updating the description.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationDescriptionBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/digitalcontact": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the organization digital contact information for an organization.",
                "operationId": "Sponsors_UpdateOrganizationDigitalContract",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The digital contact information model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DigitalContactInformationBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/name": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the name of an organization.",
                "operationId": "Sponsors_UpdateOrganizationName",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The organization name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationNameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/phonenumber": {
            "put": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates an organization phone number.",
                "operationId": "Sponsors_UpdateOrganizationPhoneNumber",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The telephone model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TelephoneBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding/logo": {
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the branding logo for the organization.",
                "operationId": "Sponsors_UploadOrganizationBrandingLogo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding/emaillogo": {
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the branding email logo for the organization.",
                "operationId": "Sponsors_UploadOrganizationBrandingEmailLogo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "The organization identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/branding/logo": {
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This is a method that updates the branding logo for a sponsor.",
                "operationId": "Sponsors_UploadSponsorBrandingLogo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/branding/emaillogo": {
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "THis is a method that update the branding email logo for a sponsor.",
                "operationId": "Sponsors_UploadSponsorBrandingEmailLogo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/signaledalerts": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "Retrieves signaled alerts for the provided sponsor across a date range.",
                "operationId": "Sponsors_GetSignaledAlerts",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date (inclusive).",
                        "required": true,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "activeOnly",
                        "in": "query",
                        "description": "True if only active alerts should be returned.  False if all alerts should be returned.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SignaledAlertViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/testsms": {
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "This method sends a test SMS message to a specified number.  This exists\r\n                for the purpose of verifying that a sponsor has SMS configured properly.",
                "operationId": "Sponsors_TestSms",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The PhoneBindingModel.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PhoneBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks": {
            "get": {
                "tags": [
                    "SponsorWebHook"
                ],
                "summary": "This is a method that retrieves the current web hooks for the sponsor.",
                "operationId": "SponsorWebHook_GetWebHooks",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WebHookViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "SponsorWebHook"
                ],
                "summary": "This is a method that creates a web hook for the sponsor.",
                "operationId": "SponsorWebHook_CreateWebHook",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The web hook model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebHookCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/{webHookId}": {
            "put": {
                "tags": [
                    "SponsorWebHook"
                ],
                "summary": "This is a method that updates a particular web hook for a sponsor.",
                "operationId": "SponsorWebHook_UpdateWebHook",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier,",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "webHookId",
                        "in": "path",
                        "description": "The web hook identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The web hook model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebHookUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "SponsorWebHook"
                ],
                "summary": "This is a method that delete's a particular web hook for a sponsor.",
                "operationId": "SponsorWebHook_DeleteWebHook",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier,",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "webHookId",
                        "in": "path",
                        "description": "The web hook identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/bulkupdate/{payloadType}": {
            "put": {
                "tags": [
                    "SponsorWebHook"
                ],
                "summary": "This is a method that updates multiple web hooks with a new payload type",
                "operationId": "SponsorWebHook_BulkUpdateWebHookPayloadTypes",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "payloadType",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "PatientIo",
                            "Fhir"
                        ]
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of web hook ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/authorization": {
            "put": {
                "tags": [
                    "SponsorWebHook"
                ],
                "summary": "This is a method that updates a particular web hook's authorization for a sponsor.",
                "operationId": "SponsorWebHook_UpdateWebHookAuthorization",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier,",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The web hook model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebHookAuthorizationUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys": {
            "get": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that retrieves a collection of surveys for a sponsor.",
                "operationId": "Surveys_GetSurveys",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SurveyReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that creates a new survey.",
                "operationId": "Surveys_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The survey creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SurveyCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/surveys": {
            "get": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that retrieves a collection of surveys for a distributor.",
                "operationId": "Surveys_GetDistributorSurveys",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SurveyReadModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that creates a new survey.",
                "operationId": "Surveys_CreateDistributorSurvey",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The survey creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SurveyCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/surveys/{surveyId}": {
            "get": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that retrieves a survey.",
                "operationId": "Surveys_GetSurvey",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SurveyReadModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/surveys/{surveyId}": {
            "get": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that retrieves a survey.",
                "operationId": "Surveys_GetDistributorSurvey",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SurveyReadModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}": {
            "get": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that retrieves a survey.",
                "operationId": "Surveys_GetSponsorSurvey",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SurveyReadModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/name": {
            "put": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that renames a survey.",
                "operationId": "Surveys_Rename",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/surveys/{surveyId}/name": {
            "put": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that renames a survey.",
                "operationId": "Surveys_RenameDistributorSurvey",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/branches": {
            "put": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that updates the branches of an existing survey.",
                "operationId": "Surveys_UpdateBranches",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The survey's branches.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SurveyBranchesBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/surveys/{surveyId}/branches": {
            "put": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that updates the branches of an existing survey.",
                "operationId": "Surveys_UpdateDistributorBranches",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The survey's branches.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SurveyBranchesBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/surveys/{surveyId}/state": {
            "put": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that activates an existing survey.",
                "operationId": "Surveys_UpdateDistributorState",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The survey state model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SurveyStateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/state": {
            "put": {
                "tags": [
                    "Surveys"
                ],
                "summary": "This is a method that activates an existing survey.",
                "operationId": "Surveys_UpdateState",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The survey state model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SurveyStateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/sponsorsurveyid": {
            "put": {
                "tags": [
                    "Surveys"
                ],
                "summary": "Responsible for updating the survey's sponsor survey id",
                "operationId": "Surveys_UpdateSponsorSurveyId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "surveyId",
                        "in": "path",
                        "description": "The survey identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The survey sponsor survey id model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SurveySponsorSurveyIdBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}/tags": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that adds tags to a Distributor owned task. Tags are used to facilitate grouping\r\n                and filtering Tasks.",
                "operationId": "Tasks_AddTagsToDistributorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The tag list model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TagListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/tags": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that adds tags to a Sponsor owned Task.\r\n                Tags are used to facilitate grouping and filtering Tasks.",
                "operationId": "Tasks_AddTagsToSponsorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The tag list model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TagListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that removes tags from a distributor task.",
                "operationId": "Tasks_RemoveTagsFromDistributorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The tag list model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TagListBindingModel"
                        }
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}/content": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the content URI assigned to a distributor task",
                "operationId": "Tasks_ChangeDistributorTaskContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task content model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskContentBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}/deactivated": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that activates or Deactivates a Distributor Task.\r\n                A deactivated Task can no longer be assigned to a Patient.",
                "operationId": "Tasks_ChangeDistributorTaskDeactivatedState",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task deactivated state model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskDeactivatedStateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}/description": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the description for a Distributor Task",
                "operationId": "Tasks_ChangeDistributorTaskDescription",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task description model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskDescriptionBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}/measurement": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the Measurement information for a Distributor Task.",
                "operationId": "Tasks_ChangeDistributorTaskMeasurement",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task measurement model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskMeasurementBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}/codes": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the MedicalCodes of a distributor \r\n            task. Any existing codes are replaced.",
                "operationId": "Tasks_ChangeDistributorTaskCodes",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "&gt;The MedicalCodes model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskCodesBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/codes": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the MedicalCodes of a task. \r\n            Any existing codes are replaced.",
                "operationId": "Tasks_ChangeSponsorTaskCodes",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The MedicalCodes model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskCodesBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/content": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the content URI of the sponsor task.",
                "operationId": "Tasks_ChangeSponsorTaskContent",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task content model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskContentBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/deactivated": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that activates or deactivates a Sponsor Task.\r\n                A deactivated task can no longer be assigned to Care Plans.",
                "operationId": "Tasks_ChangeSponsorTaskDeactivatedState",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task deactivated state model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskDeactivatedStateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/description": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the description for a sponsor task.",
                "operationId": "Tasks_ChangeSponsorTaskDescription",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskDescriptionBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/sponsortaskid": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that changes the sponsor task identifier for a sponsor task.",
                "operationId": "Tasks_ChangeSponsorTaskId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SponsorTaskIdBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that gets all Distributor tasks.",
                "operationId": "Tasks_GetDistributorTasks",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that creates a distributor level task.",
                "operationId": "Tasks_CreateDistributorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasktags": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that replaces a TaskTag for a Distributor.",
                "operationId": "Tasks_ReplaceDistributorTaskTag",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tagName",
                        "in": "query",
                        "description": "The name of the tag to replace.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model for the name of the tag to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that creates a TaskTag for a Distributor",
                "operationId": "Tasks_CreateDistributorTaskTag",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model for the name of the tag to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that delete a TaskTag for a distributor.",
                "operationId": "Tasks_DeleteDistributorTaskTag",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tagName",
                        "in": "query",
                        "description": "The tag name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that gets the sponsor tasks.",
                "operationId": "Tasks_GetSponsorTasks",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that creates a task for a Sponsor.",
                "operationId": "Tasks_CreateSponsorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that creates the task alert for a Task.",
                "operationId": "Tasks_CreateSponsorTaskAlert",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTaskAlertBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasktags": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that replaces a TaskTag for a Distributor.",
                "operationId": "Tasks_ReplaceSponsorTaskTag",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tagName",
                        "in": "query",
                        "description": "The name of the tag to replace.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model for the name of the tag to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that creates a TaskTag for a Sponsor",
                "operationId": "Tasks_CreateSponsorTaskTag",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model for the name of the tag to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that deletes a TaskTag from a Sponsor.",
                "operationId": "Tasks_DeleteSponsorTaskTag",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tagName",
                        "in": "query",
                        "description": "The name of the tag to delete.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that gets a Distributor task.",
                "operationId": "Tasks_GetDistributorTask",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The Distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that updates a task for a sponsor.",
                "operationId": "Tasks_UpdateDistributorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that gets the sponsor task.",
                "operationId": "Tasks_GetSponsorTask",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that updates a task for a sponsor.",
                "operationId": "Tasks_UpdateSponsorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts/{alertId}": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that updates a task alert for a Task.",
                "operationId": "Tasks_UpdateSponsorTaskAlert",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "The alert identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The task alert update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTaskAlertBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that deletes the task alert for a Task.",
                "operationId": "Tasks_RemoveSponsorTaskAlert",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "The alert identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/tasks/{taskId}/name": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that renames a task for a distributor.",
                "operationId": "Tasks_RenameDistributorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/name": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "This is a method that renames a task for a sponsor.",
                "operationId": "Tasks_RenameSponsorTask",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "The task identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The name model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems": {
            "post": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that creates one or more TreatmentTaskScheduleItems within a TaskSchedule.",
                "operationId": "TaskScheduleItems_CreateDistributorTreatmentTaskScheduleItems",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The treatment task schedule items list.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TreatmentTaskScheduleItemBindingModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TreatmentTaskScheduleItemViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes TreatmentTaskScheduleItems from a distributor care plan.",
                "operationId": "TaskScheduleItems_DeleteDistributorTreatmentTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemIds",
                        "in": "query",
                        "description": "The task schedule item ids.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that makes common changes to all elements of a\r\n                TaskSchedule which are TreatmentTaskScheduleItems",
                "operationId": "TaskScheduleItems_PatchDistributorTreatmentTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems": {
            "post": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that creates one or more TreatmentTaskScheduleItems within a TaskSchedule.",
                "operationId": "TaskScheduleItems_CreateTreatmentTaskScheduleItems",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The treatment task schedule items list.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TreatmentTaskScheduleItemBindingModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TreatmentTaskScheduleItemViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes TreatmentTaskScheduleItems",
                "operationId": "TaskScheduleItems_DeleteTreatmentTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemIds",
                        "in": "query",
                        "description": "The task schedule item ids.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that makes common changes to all elements of a\r\n                TaskSchedule which are TreatmentTaskScheduleItems",
                "operationId": "TaskScheduleItems_PatchTreatmentTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitem": {
            "post": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that creates an until complete task schedule item.\r\n                These items are intended to cause a given task to appear in a patient's\r\n                schedule under a particular circumstance, generally related to time,\r\n                and be scheduled continuously in a patient's schedule until the task is\r\n                completed. The item can then appear again, according to a plan for repetition\r\n                that can be specified in the UntilCompleteTaskScheduleItem",
                "operationId": "TaskScheduleItems_CreateDistributorUntilCompleteTaskScheduleItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The until complete task schedule item model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UntilCompleteTaskScheduleItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UntilCompleteTaskScheduleItemViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitem": {
            "post": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that creates an until complete task schedule item.\r\n                These items are intended to cause a given task to appear in a patient's\r\n                schedule under a particular circumstance, generally related to time,\r\n                and be scheduled continuously in a patient's schedule until the task is\r\n                completed. The item can then appear again, according to a plan for repetition\r\n                that can be specified in the UntilCompleteTaskScheduleItem",
                "operationId": "TaskScheduleItems_CreateUntilCompleteTaskScheduleItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The until complete task schedule item model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UntilCompleteTaskScheduleItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UntilCompleteTaskScheduleItemViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems": {
            "post": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that creates one or more WeeklyTaskScheduleItems within a TaskSchedule",
                "operationId": "TaskScheduleItems_CreateDistributorWeeklyTaskScheduleItems",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The weekly task schedule item list.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WeeklyTaskScheduleItemBindingModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WeeklyTaskScheduleItemViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes one or more WeeklyTaskScheduleItems for a distributor care plan.",
                "operationId": "TaskScheduleItems_DeleteDistributorWeeklyTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemIds",
                        "in": "query",
                        "description": "The task schedule item ids.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that makes common changes to all elements of a TaskSchedule which are\r\n                WeeklyTaskScheduleItems",
                "operationId": "TaskScheduleItems_PatchDistributorWeeklyTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems": {
            "post": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that creates one or more WeeklyTaskScheduleItems within a TaskSchedule",
                "operationId": "TaskScheduleItems_CreateWeeklyTaskScheduleItems",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The weekly task schedule item list.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WeeklyTaskScheduleItemBindingModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WeeklyTaskScheduleItemViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes one or more WeeklyTaskScheduleItems",
                "operationId": "TaskScheduleItems_DeleteWeeklyTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemIds",
                        "in": "query",
                        "description": "The task schedule item ids.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that makes common changes to all elements of a TaskSchedule which are\r\n                WeeklyTaskScheduleItems",
                "operationId": "TaskScheduleItems_PatchWeeklyTaskScheduleItems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}": {
            "get": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that gets a TreatmentTaskScheduleItem",
                "operationId": "TaskScheduleItems_GetDistributorTreatmentTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TreatmentTaskScheduleItemViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that updates a TreatmentTaskScheduleItem's properties for which updates are allowed.",
                "operationId": "TaskScheduleItems_UpdateDistributorTreatmentTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes a TreatmentTaskScheduleItem",
                "operationId": "TaskScheduleItems_DeleteDistributorTreatmentTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}": {
            "get": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that gets a TreatmentTaskScheduleItem",
                "operationId": "TaskScheduleItems_GetTreatmentTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TreatmentTaskScheduleItemViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that updates a TreatmentTaskScheduleItem's properties for which updates are allowed.",
                "operationId": "TaskScheduleItems_UpdateTreatmentTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes a TreatmentTaskScheduleItem",
                "operationId": "TaskScheduleItems_DeleteTreatmentTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems/{taskScheduleItemId}": {
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes an UntilCompleteTaskScheduleItem",
                "operationId": "TaskScheduleItems_DeleteDistributorUntilCompleteTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems/{taskScheduleItemId}": {
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes an UntilCompleteTaskScheduleItem",
                "operationId": "TaskScheduleItems_DeleteUntilCompleteTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}": {
            "get": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that gets a WeeklyTaskScheduleItem",
                "operationId": "TaskScheduleItems_GetDistributorWeeklyTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WeeklyTaskScheduleItemViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that updates a WeeklyTaskScheduleItem's properties for which updates are allowed.",
                "operationId": "TaskScheduleItems_UpdateDistributorWeeklyTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes a WeeklyTaskScheduleItem",
                "operationId": "TaskScheduleItems_DeleteDistributorWeeklyTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}": {
            "get": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that gets a WeeklyTaskScheduleItem",
                "operationId": "TaskScheduleItems_GetWeeklyTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WeeklyTaskScheduleItemViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that updates a WeeklyTaskScheduleItem's properties for which updates are allowed.",
                "operationId": "TaskScheduleItems_UpdateWeeklyTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model.scheduledTime",
                        "in": "query",
                        "description": "Gets or sets the scheduled time of the task",
                        "required": false,
                        "type": "string",
                        "format": "HH':'mm':'ss;FFFFFFFFF"
                    },
                    {
                        "name": "model.scheduledTimePeriod",
                        "in": "query",
                        "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that deletes a WeeklyTaskScheduleItem",
                "operationId": "TaskScheduleItems_DeleteWeeklyTaskScheduleItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "path",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems": {
            "put": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that updates an UntilCompleteTaskScheduleItem",
                "operationId": "TaskScheduleItems_UpdateDistributorUntilCompleteTaskScheduleItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "query",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The until complete task schedule item model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UntilCompleteTaskScheduleItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems": {
            "put": {
                "tags": [
                    "TaskScheduleItems"
                ],
                "summary": "This is a method that updates an UntilCompleteTaskScheduleItem",
                "operationId": "TaskScheduleItems_UpdateUntilCompleteTaskScheduleItem",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleItemId",
                        "in": "query",
                        "description": "The task schedule item identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The until complete task schedule item model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UntilCompleteTaskScheduleItemBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules": {
            "post": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that creates one or more task schedules within a Care Plan. \r\n                This API also allows the creation of\r\n                TaskScheduleItems at the same time that the TaskSchedule or schedules are\r\n                created.",
                "operationId": "TaskSchedules_CreateDistributorTaskSchedule",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The information to be used in creating the TaskSchedule.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskScheduleBindingModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskScheduleViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules": {
            "post": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that creates one or more task schedules within a Care Plan. \r\n                This API also allows the creation of\r\n                TaskScheduleItems at the same time that the TaskSchedule or schedules are\r\n                created.",
                "operationId": "TaskSchedules_CreateTaskSchedule",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The information to be used in creating the TaskSchedule.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskScheduleBindingModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskScheduleViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "Clears the task schedules from a patient or personalized care plan.",
                "operationId": "TaskSchedules_ClearTaskSchedules",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The careplan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}": {
            "get": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that retrieves a TaskSchedule for a CarePlan.",
                "operationId": "TaskSchedules_GetDistributorTaskSchedule",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "Remove task schedule froma  distributor.",
                "operationId": "TaskSchedules_RemoveDistributorTaskSchedule",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}": {
            "get": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that retrieves a TaskSchedule for a CarePlan.",
                "operationId": "TaskSchedules_GetTaskSchedule",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that removes a TaskSchedule from a CarePlan",
                "operationId": "TaskSchedules_RemoveTaskSchedule",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/note": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates a note on a TaskSchedule",
                "operationId": "TaskSchedules_UpdateTaskScheduleNote",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The for updating the note",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/note": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates a note on a distributor TaskSchedule",
                "operationId": "TaskSchedules_UpdateDistributorTaskScheduleNote",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The for updating the note",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/target": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates the target on a Distributor TaskSchedule",
                "operationId": "TaskSchedules_UpdateDistributorTaskScheduleTarget",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The for updating the note",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleTargetUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/target": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates the target on a TaskSchedule",
                "operationId": "TaskSchedules_UpdateTaskScheduleTarget",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The for updating the note",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleTargetUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/rolesallowedtorecordoutcome": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates the RolesAllowedToRecordOutcome attribute of a Distributor TaskSchedule",
                "operationId": "TaskSchedules_UpdateDistributorTaskScheduleRolesAllowedToRecordOutcome",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The for updating the note",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleRolesAllowedToRecordOutcomeUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/rolesallowedtorecordoutcome": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates the RolesAllowedToRecordOutcome attribute of a TaskSchedule",
                "operationId": "TaskSchedules_UpdateTaskScheduleRolesAllowedToRecordOutcome",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The for updating the note",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleRolesAllowedToRecordOutcomeUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/isdeactivated": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates the IsDeactivated attribute of a TaskSchedule.",
                "operationId": "TaskSchedules_UpdateDistributorTaskScheduleIsDeactivated",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleIsDeactivatedBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/isdeactivated": {
            "put": {
                "tags": [
                    "TaskSchedules"
                ],
                "summary": "This is a method that updates the IsDeactivated attribute of a TaskSchedule.",
                "operationId": "TaskSchedules_UpdateTaskScheduleIsDeactivated",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carePlanId",
                        "in": "path",
                        "description": "The care plan identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "taskScheduleId",
                        "in": "path",
                        "description": "The task schedule identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskScheduleIsDeactivatedBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/timezones/{countryCode}": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "This is a method that gets the time zones.",
                "operationId": "Time_GetTimeZones",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "path",
                        "description": "The country code.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records": {
            "post": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that creates time card entries. Requires a checkin record,\r\n                may optionally include a checkout record.",
                "operationId": "TimeCard_CreateTimeCardRecord",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The time card record to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeCardRecordCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeCardUpdateResponse"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/current": {
            "get": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that retrieves the current time card for a user (if a time card exists)\r\n                for a patient.",
                "operationId": "TimeCard_GetCurrentTimeCard",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientId",
                        "in": "query",
                        "description": "Required - the  patient id must be specified",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TimeCardRecordViewModel"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/TimeCardRecordViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that makes an update to the user's current time card entry for a patient.\r\n                If the user has no current time card entry for the patient, one is\r\n                created.",
                "description": "If the user has an existing time",
                "operationId": "TimeCard_UpdateCurrentTimeCard",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Requested update to the current time card.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CurrentTimeCardActionBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TimeCardUpdateResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/timecards": {
            "get": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that retrieves the time card for a patient, showing all of a given sponsor's\r\n                user  interactions with that patient.",
                "operationId": "TimeCard_GetPatientTimeCard",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patientId",
                        "in": "query",
                        "description": "Filter to a single patient",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "The beginning point, in UTC, from which to search for time cards, inclusive. May be omitted",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "The endpoints point, in UTC, to which to search for time cards, inclusive. May be omitted",
                        "required": false,
                        "type": "string",
                        "format": "uuuu'-'MM'-'dd"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeCardRecordViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/recent": {
            "get": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that retrieves recent time card records for a user/patient. Generally, that\r\n                means records during the 24 hours prior to the most recent time card entry",
                "operationId": "TimeCard_GetRecentTimeCards",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientId",
                        "in": "query",
                        "description": "Required - the  patient id must be specified",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeCardRecordViewModel"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeCardRecordViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/{timeCardRecordId}": {
            "get": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that retrieves the time card record corresponding to a particular id.",
                "operationId": "TimeCard_GetTimeCardRecord",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "timeCardRecordId",
                        "in": "path",
                        "description": "The time card record identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TimeCardRecordViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that updates time card record actions given a time card id.\r\n                All values for the action must be supplied, or existing data will be\r\n                blanked.",
                "operationId": "TimeCard_UpdateTimeCardRecord",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "timeCardRecordId",
                        "in": "path",
                        "description": "The time card record identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The time card record update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeCardRecordUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards": {
            "get": {
                "tags": [
                    "TimeCard"
                ],
                "summary": "This is a method that retrieves the time card for a user's interactions with a patient",
                "operationId": "TimeCard_GetUserPatientTimeCard",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "patientId",
                        "in": "query",
                        "description": "Optional - if not specified retrieves all timecards for all patients",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeCardRecordViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/roles": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that assigns roles to a user scoped to a specific sponsor.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "User_AddRolesToSponsorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "List of roles to assign.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that deletes the roles from a sponsor user.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "User_DeleteRolesFromSponsorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "List of roles to remove.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/organizations": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that affiliates a user to organizations.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "User_AffiliateUserToOrganizations",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The list of organization ids to assign.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that removes a user's affiliation to organizations.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "User_RemoveUserAffiliationToOrganizations",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The organization(s) to disaffiliate  from a user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdListBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/archive": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that archives the specified sponsor user.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "User_ArchiveSponsorUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that changes the password for a user. This API relies\r\n                on the call used being authorized in the system and knowing the existing password.\r\n                Higher privilege users may reset the password using this API without knowing the\r\n                existing password.",
                "operationId": "User_ChangePassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The change password binding model which contains the current password and the new one.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/settings": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that changes the settings of a sponsor user.\r\n                This method requires the call to the user or sponsor admin level.",
                "operationId": "User_ChangeSponsorUserSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The user settings model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSettingsBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that gets a list of distributor users.\r\n                This method requires distributor admin level rights or higher.",
                "operationId": "User_GetDistributorUserList",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DistributorUserListViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that creates a new user record within a distributor.\r\n                This method requires distributor admin level rights or higher.",
                "operationId": "User_CreateDistributorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The user creatioin model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Gets the sponsor user list for each the current user.\r\n                Depending on their role, they will see different users.",
                "operationId": "User_GetSponsorUserList",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "The optional organization identifier array.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "The optional archive flag.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that creates a new user record within a sponsor.\r\n                This method requires care plan manager level rights or higher.",
                "operationId": "User_CreateSponsorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The user creation model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserCreatedViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/photo": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that updates a photo for the user.\r\n                This method requires nurse level rights or higher.",
                "operationId": "User_UploadSponsorUserPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that deletes a photo for a user.\r\n                This method requires the call to be the user or a sponsor admin.",
                "operationId": "User_DeleteSponsorUserPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that gets a sponsor user.\r\n                This method requires nurse level rights or higher.",
                "operationId": "User_GetSponsorUserAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that updates information for a sponsor user.\r\n                This method requires nurse level rights or higher.",
                "operationId": "User_UpdateSponsorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The user update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/sponsors/{sponsorId}/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that gets all sponsor users.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "User_GetSponsorUserListWithoutDistributor",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "The organization identifier array.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "The optional archive flag.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SponsorUserListViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/unarchive": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that reverts an archived sponsor user to their previous state.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "User_UnarchiveSponsorUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/fullname": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the user name information",
                "operationId": "User_UpdateUserFullName",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The name update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullNameBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/address": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the user address information",
                "operationId": "User_UpdateUserAddress",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The address model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddressBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timezone": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the user time zone",
                "operationId": "User_UpdateUserTimeZone",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user identifier (can be, either, unique to PatientIO or to the sponsor).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The time zone model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeZoneBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations/{invitationCode}/acceptance": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that accepts an invitation for a user in the invited status.",
                "operationId": "User_AcceptUserInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserAcceptInvitationBindingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that gets a list of invited patients.",
                "operationId": "User_GetUserInvitations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "This distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserStatusViewModel"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that creates a new user in the invited state.",
                "operationId": "User_CreateUserInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreateInvitationBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserInvitationCreateViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations/{invitationCode}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method that deletes an unaccepted user invitation.",
                "operationId": "User_DeleteUserInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "invitationCode",
                        "in": "path",
                        "description": "The invitation code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/user/invitations/coderesend": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method for resending invitation emails by invitation codes.",
                "operationId": "User_ResendInvitationsByCode",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResendUserInvitationsByInvitationCodeBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/user/invitations/dateresend": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "This is a method to resend invitation by a date range.",
                "operationId": "User_ResendInvitationsByDate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResendUserInvitationsByDateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/users/{userId}/roles": {
            "put": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "The is a method that assigns roles to a distributor user.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "UserInternal_AddRolesToDistributorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor id that owns the user.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "List of roles to assign.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that removes a distributor user from roles.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "UserInternal_DeleteRolesFromDistributorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "List of roles to remove.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/sponsors/{sponsorId}/users/{userId}/roles": {
            "put": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that assigns roles to a user scoped to a specific sponsor.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "UserInternal_AddRolesToSponsorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Lists of roles to assign.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that deletes the roles from sponsor user.\r\n                This method requires sponsor admin level rights or higher.",
                "operationId": "UserInternal_DeleteRolesFromSponsorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "List of roles to delete.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/users/{userId}/password": {
            "put": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that changes the password for a user. This API relies\r\n                on the calling used being authorized in the system and knowing the existing password.\r\n                Higher privilege users may reset the password using this API without knowing the\r\n                existing password.",
                "operationId": "UserInternal_ChangePasswordInternal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model containing the current password as well as the new password.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/users/{userId}/photo": {
            "post": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that updates a photo for the given user.\r\n                This method requires distributor admin level rights or higher.",
                "operationId": "UserInternal_UploadDistributorUserPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that deletes a photo for a distributor user.\r\n                This method requires distributor admin level rights or higher.",
                "operationId": "UserInternal_DeleteDistributorUserPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/users/{userId}": {
            "get": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that gets a distributor user.\r\n                This method requires distributor admin level rights or higher.",
                "operationId": "UserInternal_GetDistributorUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserViewModel"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that updates information for a distributor user.\r\n                This method requires distributor admin level rights or higher.",
                "operationId": "UserInternal_UpdateDistributorUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The user update model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdateBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/sponsors/{sponsorId}/users/{userId}": {
            "get": {
                "tags": [
                    "UserInternal"
                ],
                "summary": "This is a method that gets a sponsor user.\r\n                This method requires nurse level rights or higher.",
                "operationId": "UserInternal_GetSponsorUserAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The internal PatientIO user identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall": {
            "post": {
                "tags": [
                    "VideoCall"
                ],
                "summary": "This is a method for a caregiver to request a video call with a patient.",
                "operationId": "VideoCall_CreateVideoCall",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The binding model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VideoCallBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VideoCallCreateViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}": {
            "get": {
                "tags": [
                    "VideoCall"
                ],
                "summary": "This is a method to get information about an existing video call.",
                "operationId": "VideoCall_GetVideoCall",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "The room identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VideoCallViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}/accept": {
            "post": {
                "tags": [
                    "VideoCall"
                ],
                "summary": "This is a method for a patient to accept a video call.",
                "operationId": "VideoCall_AcceptVideoCall",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "The room identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VideoCallTokenViewModel"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}/end": {
            "post": {
                "tags": [
                    "VideoCall"
                ],
                "summary": "This is a method to end a video call.",
                "operationId": "VideoCall_EndVideoCall",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "distributorId",
                        "in": "path",
                        "description": "The distributor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sponsorId",
                        "in": "path",
                        "description": "The sponsor identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "The room identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VideoCallEndBindingModel"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "access token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "PasswordResetViewModel": {
            "description": "The model that represents the PasswordReset api call.",
            "required": [
                "Email"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Gets or sets the email.",
                    "type": "string"
                }
            }
        },
        "ResetPasswordByCodeBindingModel": {
            "description": "Encapsulates data needed to reset a password.",
            "required": [
                "Email",
                "Password"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "description": "The account name/email address for which the password is to\r\n            be reset.",
                    "type": "string"
                },
                "Password": {
                    "description": "The new password for the account",
                    "maxLength": 100,
                    "minLength": 6,
                    "type": "string"
                },
                "Code": {
                    "description": "The reset code/token required to change the password",
                    "type": "string"
                }
            }
        },
        "AuditEntityViewModel": {
            "description": "An audit entry for an API invocation",
            "type": "object",
            "properties": {
                "AggregateId": {
                    "format": "uuid",
                    "description": "The identifier of the aggregate that was read or operated on.",
                    "type": "string"
                },
                "AggregateType": {
                    "description": "The type of aggregate on which the operation was performed.",
                    "type": "string"
                },
                "Uri": {
                    "description": "The complete API invocation.",
                    "type": "string"
                },
                "UserName": {
                    "description": "Gets or sets he name of the user active when the endpoint was invoked",
                    "type": "string"
                },
                "HttpMethod": {
                    "description": "The HTTP method called on the URI",
                    "type": "string"
                },
                "RecordedTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time at which the action was recorded.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                }
            }
        },
        "RecordBeaconBindingModel": {
            "description": "Describes the beacon.",
            "required": [
                "BeaconType"
            ],
            "type": "object",
            "properties": {
                "BeaconType": {
                    "description": "The Beacon type.",
                    "enum": [
                        "Login",
                        "SessionStarted",
                        "InvitationOpened",
                        "SessionFinished"
                    ],
                    "type": "string"
                }
            }
        },
        "RecordInvitationBeaconBindingModel": {
            "description": "Describes the beacon.",
            "required": [
                "BeaconType",
                "InvitationCode"
            ],
            "type": "object",
            "properties": {
                "BeaconType": {
                    "description": "The Beacon type.",
                    "enum": [
                        "Login",
                        "SessionStarted",
                        "InvitationOpened",
                        "SessionFinished"
                    ],
                    "type": "string"
                },
                "InvitationCode": {
                    "description": "The invitation code.",
                    "type": "string"
                }
            }
        },
        "BrandingViewModel": {
            "description": "Branding read model for Sponsors and Organizations",
            "type": "object",
            "properties": {
                "Logo": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or sets the Branding logo."
                },
                "EmailLogo": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Get or sets the Branding Email logo."
                },
                "PrimaryColor": {
                    "description": "Gets or sets the color of the primary.",
                    "type": "string"
                },
                "SecondaryColor": {
                    "description": "Gets or sets the color of the secondary.",
                    "type": "string"
                },
                "TertiaryColor": {
                    "description": "Gets or sets the color of the tertiary.",
                    "type": "string"
                },
                "GooglePlayStoreUrl": {
                    "description": "Gets or sets the google play store URL.",
                    "type": "string"
                },
                "AppleAppStoreUrl": {
                    "description": "Gets or sets the apple application store URL.",
                    "type": "string"
                },
                "DistributorName": {
                    "description": "The name of the distributor.",
                    "type": "string"
                },
                "SponsorName": {
                    "description": "The name of the sponsor.",
                    "type": "string"
                }
            }
        },
        "ImageReadModel": {
            "description": "Encapsulates an image.",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name of the phone",
                    "type": "string"
                },
                "Description": {
                    "description": "A photo description, if available.",
                    "type": "string"
                },
                "WebImageUrl": {
                    "description": "Gets or sets the web image URL - a web friendly version of the image.",
                    "type": "string"
                },
                "MobileImageUrl": {
                    "description": "Gets or sets the mobile image URL - a mobile friendly version of the image.",
                    "type": "string"
                },
                "ThumbNailUrl": {
                    "description": "Gets or sets the thumb nail URL - a thumbnail image.",
                    "type": "string"
                },
                "Id": {
                    "description": "Gets or sets the identifier of the photo.",
                    "type": "string"
                }
            }
        },
        "CampaignMonitorSmartEmailListing": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "SubscriberListDetail": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CareCenterContentCreateBindingModel": {
            "description": "Model for creating of a new care center content item",
            "required": [
                "Title",
                "Content",
                "ContentType"
            ],
            "type": "object",
            "properties": {
                "Title": {
                    "description": "Title of content (for display)",
                    "type": "string"
                },
                "Content": {
                    "description": "HTML content or the Url to the content.",
                    "type": "string"
                },
                "ContentType": {
                    "description": "Gets or sets the type of the content.",
                    "enum": [
                        "Html",
                        "Url",
                        "Converted"
                    ],
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Category ids realted to this content",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanIds": {
                    "description": "Care Plan Ids related to this content",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "RequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether [requires authentication].",
                    "type": "boolean"
                },
                "SortOrder": {
                    "format": "int32",
                    "description": "The sort order for the content display",
                    "type": "integer"
                }
            }
        },
        "IdViewModel": {
            "description": "An Id for an entity. Generally used to contain Id of a newly created entity.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The Id of the created object. Required for future operations.",
                    "type": "string"
                }
            }
        },
        "CareCenterContentViewModel": {
            "description": "The care center content view model.",
            "type": "object",
            "properties": {
                "OwningAggregateType": {
                    "description": "The type of the aggregate that owns the content.",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient"
                    ],
                    "type": "string"
                },
                "OwningAggregateId": {
                    "format": "uuid",
                    "description": "The owning aggregate identifier.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "SponsorId who owns the contentItem",
                    "type": "string"
                },
                "ContentId": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Title": {
                    "description": "Title of contentItem (for display)",
                    "type": "string"
                },
                "Content": {
                    "description": "HTML or URL contentItem.",
                    "type": "string"
                },
                "ContentStreamId": {
                    "description": "Gets or sets the content stream identifier.",
                    "type": "string"
                },
                "ContentType": {
                    "description": "Gets or sets the type of the content.",
                    "enum": [
                        "Html",
                        "Url",
                        "Converted"
                    ],
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Related category ids",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanIds": {
                    "description": "related care plan ids",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "ImageUrl": {
                    "description": "Gets or sets the image URL.",
                    "type": "string"
                },
                "RequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether the piece of content requires that the \r\n            requestor be authenticated on the Patient IO platform (otherwise, anonymous access \r\n            is allowed.) Generally leveraged as part of SSO scenarios.",
                    "type": "boolean"
                },
                "LastModified": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time the content was last modified",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Uri": {
                    "description": "The URI to the content.",
                    "type": "string"
                },
                "SortOrder": {
                    "format": "int32",
                    "description": "The sort order for the education content.",
                    "type": "integer"
                }
            }
        },
        "CareCenterContentUpdateBindingModel": {
            "description": "View for a single care center piece of content for editing purposes",
            "required": [
                "Title",
                "Content"
            ],
            "type": "object",
            "properties": {
                "Title": {
                    "description": "Title of content (for display)",
                    "type": "string"
                },
                "Content": {
                    "description": "HTML content.",
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Related category ids",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanIds": {
                    "description": "related care plan ids",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "RequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether [requires authentication].",
                    "type": "boolean"
                },
                "SortOrder": {
                    "format": "int32",
                    "description": "The sort order for the content display",
                    "type": "integer"
                }
            }
        },
        "CareTeamMemberViewModel": {
            "description": "Care team view model",
            "type": "object",
            "properties": {
                "Biography": {
                    "description": "Gets or sets the biography.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "UserPhoto": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or sets the user photo."
                },
                "Uri": {
                    "description": "Gets or sets the URI to the content.",
                    "type": "string"
                }
            }
        },
        "CareCenterContentUploadBindingModel": {
            "description": "The care center content upload binding model",
            "required": [
                "Title",
                "ContentStream"
            ],
            "type": "object",
            "properties": {
                "Title": {
                    "description": "Title of content (for display)",
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Category ids realted to this content",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanIds": {
                    "description": "Care Plan Ids related to this content",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "RequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether [requires authentication].",
                    "type": "boolean"
                },
                "SortOrder": {
                    "format": "int32",
                    "description": "The sort order for the content display",
                    "type": "integer"
                },
                "ContentStream": {
                    "$ref": "#/definitions/Stream",
                    "description": "The file stream for the content."
                }
            }
        },
        "Stream": {
            "type": "object",
            "properties": {
                "__identity": {
                    "type": "object"
                }
            }
        },
        "SectionReadModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "ImageName": {
                    "type": "string"
                },
                "ImageUrl": {
                    "type": "string"
                },
                "Nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NodeReadModel"
                    }
                },
                "Sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SectionReadModel"
                    }
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "NodeReadModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "ImageName": {
                    "type": "string"
                },
                "ImageUri": {
                    "type": "string"
                },
                "Uri": {
                    "type": "string"
                },
                "Sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SectionReadModel"
                    }
                },
                "RequiresAuthorization": {
                    "type": "boolean"
                }
            }
        },
        "IdListBindingModel": {
            "description": "A collection of Ids",
            "required": [
                "Ids"
            ],
            "type": "object",
            "properties": {
                "Ids": {
                    "description": "Gets or sets the ids.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            }
        },
        "ValueBindingModel": {
            "description": "Used for setting a value",
            "type": "object",
            "properties": {
                "Value": {
                    "description": "The resource's value",
                    "type": "string"
                }
            }
        },
        "CloneCarePlanBindingModel": {
            "description": "Model employed in the process of cloning a care plan within a sponsor",
            "type": "object",
            "properties": {
                "NewCarePlanName": {
                    "description": "Gets or sets the new name of the care plan.",
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Gets or sets the category identifier.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "NewSponsorCarePlanId": {
                    "description": "Gets or sets the new sponsor care plan identifier.",
                    "type": "string"
                }
            }
        },
        "CarePlanViewModel": {
            "description": "View Model for Care Plans",
            "type": "object",
            "properties": {
                "Schedules": {
                    "description": "Gets or sets the schedules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskScheduleViewModel"
                    }
                },
                "SponsorCarePlanId": {
                    "description": "A sponsor specific id for a Care Plan",
                    "type": "string"
                },
                "SupervisorApprovalSignatureUri": {
                    "description": "The signature of the supervisor that approved the careplan",
                    "type": "string"
                },
                "SupervisorApprovalSignatureTs": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                    "description": "Timestamp representing the last time the care plan was approved by a supervisor",
                    "type": "string",
                    "example": "1986-07-19T11:53:00"
                },
                "HasUnapprovedChanges": {
                    "description": "Indicates the presence of unapproved changes",
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Categories": {
                    "description": "Gets or sets the categories.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryViewModel"
                    }
                },
                "OwnerId": {
                    "format": "uuid",
                    "description": "The care plan owner id will be the Id of the aggregate owning the\r\n            care plan.",
                    "type": "string"
                },
                "OwningAggregateType": {
                    "description": "",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient"
                    ],
                    "type": "string"
                }
            }
        },
        "TaskScheduleViewModel": {
            "description": "View Model for task schedules",
            "type": "object",
            "properties": {
                "AssignedSurvey": {
                    "$ref": "#/definitions/AssignedSurveyReadModel",
                    "description": "If this schedule assigns a Survey, contains information about the Survey."
                },
                "AssignedTask": {
                    "$ref": "#/definitions/TaskViewModel",
                    "description": "If this schedule assigns a Task, contains information about a Task."
                },
                "AssignedTaskClass": {
                    "description": "Indicates what class of thing this schedule assigns - could be Task, Survey\r\n            or another entity.",
                    "enum": [
                        "Standard",
                        "Survey"
                    ],
                    "type": "string"
                },
                "HasHadTreatmentTaskScheduleItems": {
                    "description": "Gets or sets a value indicating whether this instance has had treatment task schedule items.",
                    "type": "boolean"
                },
                "HasHadWeeklyTaskScheduleItems": {
                    "description": "Gets or sets a value indicating whether this instance has had weekly task schedule items.",
                    "type": "boolean"
                },
                "HashHadUntilCompleteTaskScheduleItems": {
                    "description": "Gets or sets a value indicating whether [hash had until complete task schedule items].",
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The Id of the TaskSchedule",
                    "type": "string"
                },
                "Note": {
                    "description": "Any note attached to the TaskSchedule",
                    "type": "string"
                },
                "TaskId": {
                    "format": "uuid",
                    "description": "The Id of the task assigned. Depending on the AssignedTaskClass, this may represent\r\n            a SurveyId or a TaskId (id of a Task)",
                    "type": "string"
                },
                "Target": {
                    "format": "double",
                    "description": "The target for the task.",
                    "type": "number"
                },
                "RolesAllowedToRecordOutcome": {
                    "description": "The roles allowed to record outcomes for the task.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "IsDeactivated": {
                    "description": "Gets or sets a value indicating whether the task schedule is deactivated.",
                    "type": "boolean"
                },
                "ActivationChangeTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Gets or sets the time when the IsDeactivated flag is changed.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "TreatmentScheduleItems": {
                    "description": "Collection of individual schedule items. Only one of Treatment, Weekly, or UntilCompleteScheduleItems \r\n            is allowed to be populated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreatmentTaskScheduleItemViewModel"
                    }
                },
                "UntilCompleteTaskScheduleItems": {
                    "description": "Collection of individual schedule items. Only one of Treatment, Weekly, or UntilCompleteScheduleItems \r\n            is allowed to be populated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UntilCompleteTaskScheduleItemViewModel"
                    }
                },
                "WeeklyScheduleItems": {
                    "description": "Collection of individual schedule items. Only one of Treatment, Weekly, or UntilCompleteScheduleItems \r\n            is allowed to be populated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WeeklyTaskScheduleItemViewModel"
                    }
                }
            }
        },
        "CategoryViewModel": {
            "description": "Model for viewing Categories",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                }
            }
        },
        "AssignedSurveyReadModel": {
            "description": "If a survey is assigned to a CarePlan, this encapsulates the name\r\n            and Id of the survey",
            "type": "object",
            "properties": {
                "SurveyId": {
                    "format": "uuid",
                    "description": "The survey's identifying id",
                    "type": "string"
                },
                "SurveyName": {
                    "description": "The name of the survey.",
                    "type": "string"
                }
            }
        },
        "TaskViewModel": {
            "description": "ase view for a Task",
            "type": "object",
            "properties": {
                "OwningAggregateType": {
                    "description": "The type of the aggregate that owns the content.",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient"
                    ],
                    "type": "string"
                },
                "OwningAggregateId": {
                    "format": "uuid",
                    "description": "The owning aggregate identifier.",
                    "type": "string"
                },
                "Cost": {
                    "format": "double",
                    "description": "Gets or sets the cost.",
                    "type": "number"
                },
                "Deactivated": {
                    "description": "Gets or sets a value indicating whether this {Filament.API.Models.Entities.TaskViewModel} is deactivated. \r\n            When deactivated a Task will never be assigned to a patient.",
                    "type": "boolean"
                },
                "Duration": {
                    "format": "int32",
                    "description": "A Sponsor assigned duration for the Task",
                    "type": "integer"
                },
                "GoalNumber": {
                    "format": "double",
                    "description": "Gets or sets the goal number.",
                    "type": "number"
                },
                "PatientAssignable": {
                    "description": "Gets or sets patient assignable for the Task.",
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "MeasurementDomain": {
                    "description": "Gets or sets the measurement domain.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MeasurementType": {
                    "description": "Gets or sets the type of the measurement.",
                    "enum": [
                        "Boolean",
                        "String",
                        "Date",
                        "DateTime",
                        "MultipleChoiceSingle",
                        "MultipleChoiceMultiple",
                        "Numeric",
                        "NumericWithGoal",
                        "Appointment",
                        "Checklist",
                        "Signature",
                        "Interval",
                        "Photo"
                    ],
                    "type": "string"
                },
                "MeasurementUnits": {
                    "description": "Gets or sets the measurement units.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "SponsorTaskId": {
                    "description": "A Sponsor assigned identifier for the Task.",
                    "type": "string"
                },
                "Tags": {
                    "description": "Tags assigned to the task.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TaskContentUri": {
                    "description": "Gets or sets the task content URI.",
                    "type": "string"
                },
                "TaskContentUriRequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether task content URI requires authentication,\r\n            meaning that calling this URI requires inclusion of the Patient IO auth token.",
                    "type": "boolean"
                },
                "TaskDescription": {
                    "description": "A string that can be used to describe or \"description\" how to do the Task, provide\r\n            additional information, etc.",
                    "type": "string"
                },
                "Codes": {
                    "description": "A collection of codes that describes the task.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MedicalCode"
                    }
                }
            }
        },
        "TreatmentTaskScheduleItemViewModel": {
            "description": "A TreatmentTaskScheduleItem is a schedule item that appears relative to the patients\r\n            closest appointment, whether that appointment is now or in the feature.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The id of the item.",
                    "type": "string"
                },
                "DaysRelativeToNextTreatment": {
                    "format": "int32",
                    "description": "The number of days relative to the next treatment. Slightly mis-named, this \r\n            is really about the closest treatment, and the value can be negative.",
                    "type": "integer"
                },
                "ScheduledTime": {
                    "format": "HH':'mm':'ss;FFFFFFFFF",
                    "description": "The time at which the patient should perform the task \r\n            in the patients local time.",
                    "type": "string",
                    "example": "11:53:00"
                },
                "ScheduledTimePeriod": {
                    "description": "The time period during which the task should be performed, e.g. \"Morning\".",
                    "type": "string"
                }
            }
        },
        "UntilCompleteTaskScheduleItemViewModel": {
            "description": "ViewModel for Until Complete Task Schedule Items",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Expires": {
                    "$ref": "#/definitions/IExpirationType",
                    "description": "Gets or sets the expires."
                },
                "ExpirationType": {
                    "description": "Gets the type of the expiration.",
                    "type": "string",
                    "readOnly": true
                },
                "Starts": {
                    "$ref": "#/definitions/IStartType",
                    "description": "Gets or sets the starts."
                },
                "StartType": {
                    "description": "Gets the start type.",
                    "type": "string",
                    "readOnly": true
                },
                "Repeats": {
                    "$ref": "#/definitions/Repetition",
                    "description": "Gets or sets the repeats."
                },
                "ScheduledTime": {
                    "format": "HH':'mm':'ss;FFFFFFFFF",
                    "description": "The time at which the patient should perform the task \r\n            in the patients local time.",
                    "type": "string",
                    "example": "11:53:00"
                },
                "ScheduledTimePeriod": {
                    "description": "The time period during which the task should be performed, e.g. \"Morning\".",
                    "type": "string"
                }
            }
        },
        "WeeklyTaskScheduleItemViewModel": {
            "description": "View Model for Weekly Task Schedule Items",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "DayOfWeek": {
                    "description": "Day of week for which the task is scheduled\r\n            - enum that can be cast to an int. 0 \r\n            is Sunday.",
                    "enum": [
                        "None",
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ],
                    "type": "string"
                },
                "StartType": {
                    "description": "What triggers the beginning of this task schedule.",
                    "enum": [
                        "OnScheduleStart",
                        "OnInitialTreatment"
                    ],
                    "type": "string"
                },
                "StopType": {
                    "description": "What triggers the end of this task schedule",
                    "enum": [
                        "NoStop",
                        "OnInitialTreatment"
                    ],
                    "type": "string"
                },
                "ScheduledTime": {
                    "format": "HH':'mm':'ss;FFFFFFFFF",
                    "description": "e.g. 0 for midnight, 8 for 8 am, 13 for 1 PM",
                    "type": "string",
                    "example": "11:53:00"
                },
                "ScheduledTimePeriod": {
                    "description": "Gets or sets the scheduled time period.",
                    "type": "string"
                }
            }
        },
        "MedicalCode": {
            "type": "object",
            "properties": {
                "System": {
                    "enum": [
                        "Loinc",
                        "Snomed"
                    ],
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                }
            }
        },
        "IExpirationType": {
            "description": "Provides expiration information for objects that expire",
            "type": "object",
            "properties": {}
        },
        "IStartType": {
            "description": "Used for classes that have a start date.\r\n                Performs actions associated with the start date.",
            "type": "object",
            "properties": {}
        },
        "Repetition": {
            "type": "object",
            "properties": {
                "Period": {
                    "enum": [
                        "Once",
                        "Year",
                        "Month",
                        "Week",
                        "Day"
                    ],
                    "type": "string"
                },
                "Interval": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CarePlanBindingModel": {
            "description": "Binding Model for creating a care plan",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Gets or sets the category identifier.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "SponsorCarePlanId": {
                    "description": "An optional sponsor specific identifier for a care plan.",
                    "type": "string"
                }
            }
        },
        "SponsorCarePlanReadModel": {
            "description": "This class is used within a SponsorReadModel to keep track\r\n            of the id and name of each CarePlan within the Sponsor",
            "type": "object",
            "properties": {
                "AssignedPatientCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "SponsorCarePlanId": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryReadModel"
                    }
                }
            }
        },
        "CategoryReadModel": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "CreateCarePlanBindingModel": {
            "description": "Binding model for creating a Distributor Care Plan",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Gets or sets the category identifier.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            }
        },
        "DistributorCarePlanReadModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryReadModel"
                    }
                }
            }
        },
        "NameBindingModel": {
            "description": "Model used for passing a name to the api",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                }
            }
        },
        "SignatureBindingModel": {
            "description": "Model used for passing a signature URI to the api",
            "type": "object",
            "properties": {
                "SignatureImageDataUri": {
                    "description": "Gets or sets the signature URI",
                    "type": "string"
                }
            }
        },
        "CategoryBindingModel": {
            "description": "Binding model for category",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                }
            }
        },
        "IdNameModel": {
            "description": "Model describing the Id and Name of an entity.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The Id of an entity. Required for future operations.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name of an entity.",
                    "type": "string"
                }
            }
        },
        "ChatBotContextViewModel": {
            "description": "",
            "type": "object",
            "properties": {
                "OwningAggregateId": {
                    "format": "uuid",
                    "description": "The identifier for the aggregate that owns\r\n            this chat bot context.",
                    "type": "string"
                },
                "OwningAggregateType": {
                    "description": "The owning aggregate's type.",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The chat bot context identifier.",
                    "type": "string"
                },
                "ContextItems": {
                    "description": "The Context items for the chat bot",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChatBotContextItemViewModel"
                    }
                }
            }
        },
        "ChatBotContextItemViewModel": {
            "description": "",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The chat bot context item identifier.",
                    "type": "string"
                },
                "Keywords": {
                    "description": "The keywords that trigger a response.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Response": {
                    "description": "The response.",
                    "type": "string"
                },
                "LastModifiedBy": {
                    "$ref": "#/definitions/ActorReadModel",
                    "description": "The ID of the last user to"
                },
                "LastModifiedAt": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time at which this item was last modified.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                }
            }
        },
        "ActorReadModel": {
            "description": "Describes a patient, user, or organization actor in the system.",
            "type": "object",
            "properties": {
                "OrganizationName": {
                    "description": "If an actor is an organization, the organization name.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "If the actor is a person, the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "LastName": {
                    "description": "If the actor is a person, the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "ActorType": {
                    "description": "The type of actor.",
                    "enum": [
                        "Patient",
                        "User",
                        "Organization"
                    ],
                    "type": "string"
                },
                "Photo": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "If available, a photo of the actor."
                },
                "SponsorIds": {
                    "description": "List of SponsorIds with which an actor has a relationship.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "SponsorEntityIds": {
                    "description": "A collection of the sponsor identifiers and the actor's sponsor entity \r\n            identifier for that sponsor.  The key is the sponsor identifier, the value \r\n            is the corresponding sponsorPatientId, sponsorUserId, or \r\n            sponsorOrganizationId for the actor, whichever is appropriate.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Roles": {
                    "description": "If the actor is a patient, the roles the patient plays. Meant to help disambiguate \r\n            caregiver relationships.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Id": {
                    "format": "uuid",
                    "description": "The Actor's id.",
                    "type": "string"
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                }
            }
        },
        "NameReadModel": {
            "type": "object",
            "properties": {
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "MiddleName": {
                    "type": "string"
                },
                "Prefix": {
                    "type": "string"
                },
                "Suffix": {
                    "type": "string"
                }
            }
        },
        "ChatBotCreateBindingModel": {
            "description": "",
            "required": [
                "FirstName",
                "TimeZoneId"
            ],
            "type": "object",
            "properties": {
                "FirstName": {
                    "description": "Gets or sets the first name",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone id",
                    "type": "string"
                }
            }
        },
        "ChatBotContextCreateBindingModel": {
            "description": "Chat Bot Context Create Binding Model",
            "required": [
                "ContextItems"
            ],
            "type": "object",
            "properties": {
                "ContextItems": {
                    "description": "The list of context items that contain triggers and responses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChatBotContextItemBindingModel"
                    }
                }
            }
        },
        "ChatBotContextItemBindingModel": {
            "description": "Chat Bot Context Item Creation Binding Model",
            "required": [
                "Keywords",
                "Response"
            ],
            "type": "object",
            "properties": {
                "Keywords": {
                    "description": "The list of keywords for the context item",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Response": {
                    "description": "The response triggered when a keyword is present",
                    "maxLength": 1000,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "ChatBotResponseFeedbackBindingModel": {
            "description": "The chat bot response feedback binding model",
            "required": [
                "Feedback",
                "MessageId",
                "ConversationId"
            ],
            "type": "object",
            "properties": {
                "Feedback": {
                    "description": "The feedback provided",
                    "enum": [
                        "Positive",
                        "Negative"
                    ],
                    "type": "string"
                },
                "MessageId": {
                    "format": "uuid",
                    "description": "The message identifier",
                    "type": "string"
                },
                "ConversationId": {
                    "format": "uuid",
                    "description": "The conversation identifier.",
                    "type": "string"
                }
            }
        },
        "ExportCreatedViewModel": {
            "description": "The export file view model.",
            "type": "object",
            "properties": {
                "RunId": {
                    "format": "uuid",
                    "description": "The run Id.",
                    "type": "string"
                },
                "FileName": {
                    "description": "The name of the file.",
                    "type": "string"
                }
            }
        },
        "CreatePatientTaskDataExtractBindingModel": {
            "description": "The binding model for creating a patient task data extract.",
            "required": [
                "FromDate",
                "ToDate"
            ],
            "type": "object",
            "properties": {
                "FromDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "The from date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "ToDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "The to date.",
                    "type": "string",
                    "example": "1986-07-19"
                }
            }
        },
        "PatientTaskCompletionOutboundModel": {
            "type": "object",
            "properties": {
                "AssignedDate": {
                    "type": "string"
                },
                "PatientLastName": {
                    "type": "string"
                },
                "PatientFirstName": {
                    "type": "string"
                },
                "PatientSponsorId": {
                    "type": "string"
                },
                "PatientIsDeactivated": {
                    "type": "boolean"
                },
                "CompletionStatus": {
                    "type": "string"
                },
                "CompletionDate": {
                    "type": "string"
                },
                "CompletionResult": {
                    "type": "string"
                },
                "CompletedByFirstName": {
                    "type": "string"
                },
                "CompletedByLastName": {
                    "type": "string"
                },
                "MeasurementUnits": {
                    "type": "string"
                },
                "MeasurementType": {
                    "type": "string"
                }
            }
        },
        "UserInformationOutboundModel": {
            "type": "object",
            "properties": {
                "SponsorUserId": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "MiddleName": {
                    "type": "string"
                },
                "Prefix": {
                    "type": "string"
                },
                "Suffix": {
                    "type": "string"
                },
                "EmailAddress": {
                    "type": "string"
                },
                "Organization": {
                    "type": "string"
                },
                "Role": {
                    "type": "string"
                },
                "UserId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "ConversationListItemViewModel": {
            "description": "Represents a single conversation in a list of multiple conversations.",
            "type": "object",
            "properties": {
                "CountOfMessages": {
                    "format": "int32",
                    "description": "Gets or sets the count of messages in the conversation.",
                    "type": "integer"
                },
                "LastMessage": {
                    "$ref": "#/definitions/MessageReadModel",
                    "description": "Gets or sets the last message."
                },
                "LastMessageSentDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The last message sent time on the conversation, in UTC.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "OtherPartyId": {
                    "format": "uuid",
                    "description": "Gets or sets the other party identifier.",
                    "type": "string"
                },
                "Tags": {
                    "description": "Gets or sets the tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Unread": {
                    "description": "Gets or sets a value indicating whether this {Filament.API.Models.Conversation.ConversationListItemViewModel} is unread.",
                    "type": "boolean"
                }
            }
        },
        "MessageReadModel": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "SentDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "SenderId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SenderAgentId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MessageAttachment"
                    }
                },
                "MessageMetaDataType": {
                    "enum": [
                        "None",
                        "VideoCallEnd",
                        "ChatBotResponse"
                    ],
                    "type": "string"
                },
                "MetaData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "MessageAttachment": {
            "type": "object",
            "properties": {
                "Uri": {
                    "type": "string"
                },
                "MimeType": {
                    "type": "string"
                }
            }
        },
        "ConversationsMetaData": {
            "description": "Encapsulates meta-data about a group of conversations",
            "type": "object",
            "properties": {
                "UnreadConversationsCount": {
                    "format": "int32",
                    "description": "Gets or sets the count of unread conversations",
                    "type": "integer"
                },
                "OrganizationsWithUnreadConversationsCount": {
                    "format": "int32",
                    "description": "The count of the number of organizations with unread conversations",
                    "type": "integer"
                },
                "OrganizationUnreadCounts": {
                    "description": "Contains an entry for each organization and the number of unread conversations for \r\n            that organization.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "readOnly": true
                }
            }
        },
        "ConversationListViewModel": {
            "description": "The Conversation List ViewModel.",
            "type": "object",
            "properties": {
                "Parties": {
                    "description": "Gets or sets the parties.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActorReadModel"
                    }
                },
                "Conversations": {
                    "description": "Gets or sets the conversations.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConversationListItemViewModel"
                    }
                },
                "CountOfTotalConversations": {
                    "format": "int32",
                    "description": "The number of conversations, total",
                    "type": "integer"
                },
                "CountOfNextConversations": {
                    "format": "int32",
                    "description": "The number of conversations with a last sent time after the\r\n            slice of conversations delivered.",
                    "type": "integer"
                },
                "CountOfPreviousConversations": {
                    "format": "int32",
                    "description": "The number of conversations with a last sent time before the \r\n            slice of conversations delivered.",
                    "type": "integer"
                },
                "CountOfUnreadConversations": {
                    "format": "int32",
                    "description": "The number of unread conversations",
                    "type": "integer"
                }
            }
        },
        "PartyListViewModel": {
            "description": "Container for a list of parties",
            "type": "object",
            "properties": {
                "Parties": {
                    "description": "Gets or sets the parties.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActorReadModel"
                    }
                }
            }
        },
        "ConversationViewModel": {
            "description": "Describes a view of a single conversation.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The conversation id. For version 1, matches other party id.",
                    "type": "string"
                },
                "LastMessageSentDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Gets or sets the the time that the last message in the conversation was sent",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "MessageParticipantId": {
                    "format": "uuid",
                    "description": "The entity whose conversation this is",
                    "type": "string"
                },
                "OtherPartyId": {
                    "format": "uuid",
                    "description": "The id of other party participating in the conversation",
                    "type": "string",
                    "readOnly": true
                },
                "Parties": {
                    "description": "The collection of all of the parties who have participated in this conversation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActorReadModel"
                    }
                },
                "Unread": {
                    "description": "Gets or sets a value indicating whether this {Filament.API.Models.Conversation.ConversationViewModel} is currently unread.",
                    "type": "boolean"
                },
                "Messages": {
                    "description": "The collection of messages in the conversation; either all the messages or a requested subset.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MessageReadModel"
                    }
                },
                "Tags": {
                    "description": "The college of tags currently applied to the conversation.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CountOfMessages": {
                    "format": "int32",
                    "description": "The count of all messages in the conversation.",
                    "type": "integer"
                },
                "CountOfPreviousMessages": {
                    "format": "int32",
                    "description": "Count of all the messages previous to the returned\r\n            slice of messages",
                    "type": "integer"
                },
                "CountOfNextMessages": {
                    "format": "int32",
                    "description": "Count of all the messages subsequent to the returned\r\n            slice of messages",
                    "type": "integer"
                },
                "RecipientLastReadDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The date time that the last message was read at",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "RecipientHasRead": {
                    "description": "Indicates whether the recipient has read all available messages.",
                    "type": "boolean"
                }
            }
        },
        "MessageCreateBindingModel": {
            "description": "Model for creating a message",
            "type": "object",
            "properties": {
                "Message": {
                    "description": "Unencrypted text of message.",
                    "type": "string"
                },
                "Attachments": {
                    "description": "The message attachments.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UploadFile"
                    }
                }
            }
        },
        "UploadFile": {
            "type": "object",
            "properties": {
                "Stream": {
                    "$ref": "#/definitions/Stream",
                    "readOnly": true
                },
                "MimeType": {
                    "type": "string",
                    "readOnly": true
                },
                "FileName": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewMessageReturnViewModel": {
            "description": "Model returned when a new message is created",
            "type": "object",
            "properties": {
                "MessageId": {
                    "format": "uuid",
                    "description": "Gets or sets the message identifier.",
                    "type": "string"
                },
                "Message": {
                    "description": "The message contents.",
                    "type": "string"
                },
                "SentDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The date and time the message was sent",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Attachments": {
                    "description": "The message attachments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MessageAttachment"
                    }
                }
            }
        },
        "ConversationUpdateBindingModel": {
            "description": "Model for updating the state of a conversation",
            "required": [
                "Tags",
                "Unread"
            ],
            "type": "object",
            "properties": {
                "Tags": {
                    "description": "Gets or sets the tag that should be applied to the conversation. Fully replaces\r\n            pre-existing tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Unread": {
                    "description": "Gets or sets a value indicating whether this conversation is unread.",
                    "type": "boolean"
                },
                "UpdateIfLastMessageId": {
                    "format": "uuid",
                    "description": "If specified, indicates that the state of the conversation should only \r\n            be updated if the last message id matches this one.",
                    "type": "string"
                }
            }
        },
        "DistributorSettingsBindingModel": {
            "description": "Model that covers various settings that can be modified.",
            "type": "object",
            "properties": {
                "Settings": {
                    "description": "The collection of settings and their new values",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AuthorizationCodeBindingModel": {
            "description": "Model describing the associated of an authorization code to a sponsor.",
            "type": "object",
            "properties": {
                "Code": {
                    "description": "The authorization code to be entered by the user. Should be numeric. Must be \r\n            unique within the distributor.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier with whom this code is associated.",
                    "type": "string"
                }
            }
        },
        "DistributorBindingModel": {
            "description": "Binding model for creating distributors",
            "required": [
                "Id",
                "Name"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                }
            }
        },
        "SponsorBindingModel": {
            "description": "Model for adding a new sponsor",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                }
            }
        },
        "SponsorIdentityReadModel": {
            "type": "object",
            "properties": {
                "SponsorName": {
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "BrandingBindingModel": {
            "description": "Model for allowing branding updates",
            "type": "object",
            "properties": {
                "PrimaryColor": {
                    "description": "Gets or sets the color of the primary.",
                    "type": "string"
                },
                "SecondaryColor": {
                    "description": "Gets or sets the color of the secondary.",
                    "type": "string"
                },
                "TertiaryColor": {
                    "description": "Gets or sets the color of the tertiary.",
                    "type": "string"
                }
            }
        },
        "DistributorViewModel": {
            "description": "The distribbutor view model.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The distributor identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "The distirbutor name.",
                    "type": "string"
                },
                "AuthorizationCodes": {
                    "description": "The authorization codes.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "Branding": {
                    "$ref": "#/definitions/BrandingViewModel",
                    "description": "The distributor branding."
                },
                "BrandingEmailLogoUrl": {
                    "description": "The branding email logo uri.",
                    "type": "string",
                    "readOnly": true
                },
                "BrandingLogoUrl": {
                    "description": "The branding logo uri.",
                    "type": "string",
                    "readOnly": true
                },
                "Categories": {
                    "description": "The distributor categories.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryViewModel"
                    }
                },
                "DistributorTasks": {
                    "description": "The distributor tasks.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskViewModel"
                    }
                },
                "PatientProfileDefinitions": {
                    "description": "The patient profile definitions.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Settings": {
                    "$ref": "#/definitions/DistributorSettings",
                    "description": "The distributor settings."
                },
                "Sponsors": {
                    "description": "The sponsors.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SponsorIdentityReadModel"
                    }
                },
                "TaskTags": {
                    "description": "The distributor task tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CarePlans": {
                    "description": "The distributor care plans.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DistributorCarePlanViewModel"
                    }
                },
                "ArchivedCarePlans": {
                    "description": "The archived distributor care plans.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DistributorCarePlanViewModel"
                    }
                },
                "ChatBotContextId": {
                    "format": "uuid",
                    "description": "The distributor's chat bot context identifier (if configured).",
                    "type": "string"
                },
                "ScheduledTaskTimePeriods": {
                    "description": "The scheduled task time periods.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "ChatBotId": {
                    "format": "uuid",
                    "description": "The identifier for the bot associated withthe distributor",
                    "type": "string"
                }
            }
        },
        "DistributorSettings": {
            "type": "object",
            "properties": {
                "AppleAppStoreUrl": {
                    "description": "The Apple App Store Url",
                    "type": "string"
                },
                "GooglePlayStoreUrl": {
                    "description": "The Google Play Store Url",
                    "type": "string"
                },
                "ActivationEmailTemplate": {
                    "description": "The activation email template identifier.",
                    "type": "string"
                },
                "WelcomeEmailTemplate": {
                    "description": "The welcome email template identifier.",
                    "type": "string"
                },
                "ReminderEmailTemplate": {
                    "description": "The reminder email template identifier.",
                    "type": "string"
                },
                "BroadcastedMessageEmailTemplate": {
                    "description": "The broadcast email template identifier.",
                    "type": "string"
                },
                "ResetPasswordEmailTemplate": {
                    "description": "The reset password email template identifier.",
                    "type": "string"
                },
                "ShareCareEmailTemplate": {
                    "description": "The share care email template identifier.",
                    "type": "string"
                },
                "CareTeamWelcomeEmailTemplate": {
                    "description": "The care team welcome email template identifier.",
                    "type": "string"
                },
                "CareTeamAlertsEmailTemplate": {
                    "description": "The care team alert email template identifier.",
                    "type": "string"
                },
                "CareTeamActivationEmailTemplate": {
                    "description": "The care team activation email template identifier.",
                    "type": "string"
                },
                "TwilioFromNumber": {
                    "description": "The Twilio phone number from which messages should be sent.",
                    "type": "string"
                },
                "UnreadMessagesEmailTemplate": {
                    "description": "The template name for patient messages emails",
                    "type": "string"
                }
            }
        },
        "DistributorCarePlanViewModel": {
            "description": "View Model for Care Plans",
            "type": "object",
            "properties": {
                "Schedules": {
                    "description": "Gets or sets the schedules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskScheduleViewModel"
                    }
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Categories": {
                    "description": "Gets or sets the categories.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryViewModel"
                    }
                },
                "OwnerId": {
                    "format": "uuid",
                    "description": "The care plan owner id will be the Id of the aggregate owning the\r\n            care plan.",
                    "type": "string"
                },
                "OwningAggregateType": {
                    "description": "",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient"
                    ],
                    "type": "string"
                }
            }
        },
        "ExportFileRecordBindingModel": {
            "description": "Binding for creating an Export File task",
            "required": [
                "FileName",
                "ExportType"
            ],
            "type": "object",
            "properties": {
                "FileName": {
                    "description": "Name of the file to put on the target SFTP server",
                    "type": "string"
                },
                "ServerDirectory": {
                    "description": "Directory on the server to which file should be placed",
                    "type": "string"
                },
                "ExportType": {
                    "description": "The kind of export file we want to create",
                    "enum": [
                        "PatientCarePlan",
                        "PatientTaskData",
                        "PatientSurvey",
                        "UserInformation"
                    ],
                    "type": "string"
                },
                "RelativeStartDay": {
                    "format": "int32",
                    "description": "The number of days before or after today's date that the assessment should start at.",
                    "type": "integer"
                },
                "RelativeEndDay": {
                    "format": "int32",
                    "description": "The number of days before or after today's date that the assessment should end at.",
                    "type": "integer"
                },
                "TimeZoneId": {
                    "description": "The time zone id for the location of the client running the export.",
                    "type": "string"
                }
            }
        },
        "ImportFileRecordBindingModel": {
            "description": "Model for adding an integration file record - this describes \r\n            where to get client data - in terms of the server location where the data\r\n            is located, how the data should be processed, and where the data should be \r\n            moved to on the client's server after processing (if desired.)",
            "required": [
                "FileName",
                "AggregateType",
                "ClientLoadClassType",
                "ClientLoadMapClassType"
            ],
            "type": "object",
            "properties": {
                "FileName": {
                    "description": "The name of the file to be retreived. Supports the * wildcard\r\n            which allows multiple files, or files with varying components to \r\n            be downloaded",
                    "type": "string"
                },
                "ServerDirectory": {
                    "description": "If a directory change is required, the server directory to change into in order to retrieve the file",
                    "type": "string"
                },
                "MoveToDirectory": {
                    "description": "If a file is be moved when the operation is complete, the directory to which it should be moved\r\n            relative to the ServerDirectory",
                    "type": "string"
                },
                "AggregateType": {
                    "description": "The aggregate or profile that the file is to be transformed into",
                    "enum": [
                        "Organization",
                        "Patient",
                        "User",
                        "AddPatientAssignments",
                        "PatientProfileDefinition",
                        "AddCarePlanAssignments"
                    ],
                    "type": "string"
                },
                "ClientLoadClassType": {
                    "description": "Indicates the full name of the class which represents a \r\n            single record in the client file",
                    "type": "string"
                },
                "ClientLoadMapClassType": {
                    "description": "Indicates the full name of the class which is used for mapping the client file\r\n            from CSV to the class",
                    "type": "string"
                },
                "StepInformation": {
                    "description": "If additional information - like a Patient Profile Id - is required\r\n            for the aggregate to function then that information is here",
                    "type": "string"
                },
                "NextSteps": {
                    "description": "If additional aggregate steps should be run on the imported data\r\n            after the primary aggregate run, those are specified here",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubsequentStepInformation"
                    }
                },
                "Delimiter": {
                    "description": "The delimiter for the records. If not specified, defaults to comma\r\n            (,)",
                    "type": "string"
                }
            }
        },
        "SubsequentStepInformation": {
            "type": "object",
            "properties": {
                "AggregateType": {
                    "enum": [
                        "Organization",
                        "Patient",
                        "User",
                        "AddPatientAssignments",
                        "PatientProfileDefinition",
                        "AddCarePlanAssignments"
                    ],
                    "type": "string"
                },
                "StepInformation": {
                    "type": "string"
                }
            }
        },
        "IntegrationManagementModel": {
            "type": "object",
            "properties": {
                "ImportServerCredential": {
                    "$ref": "#/definitions/SftpServerCredential"
                },
                "AggregateId": {
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                },
                "SponsorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ImportSet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportFileRecord"
                    }
                },
                "ExportSet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExportFileRecord"
                    }
                }
            }
        },
        "SftpServerCredential": {
            "type": "object",
            "properties": {
                "ServerIp": {
                    "type": "string"
                },
                "ServerPort": {
                    "format": "int32",
                    "type": "integer"
                },
                "ServerUserName": {
                    "type": "string"
                },
                "ServerPassword": {
                    "type": "string"
                }
            }
        },
        "ImportFileRecord": {
            "type": "object",
            "properties": {
                "FileName": {
                    "type": "string"
                },
                "ServerDirectory": {
                    "type": "string"
                },
                "MoveToDirectory": {
                    "type": "string"
                },
                "ClientLoadClassType": {
                    "type": "string"
                },
                "ClientLoadMapClassType": {
                    "type": "string"
                },
                "StepInformation": {
                    "type": "string"
                },
                "AggregateType": {
                    "enum": [
                        "Organization",
                        "Patient",
                        "User",
                        "AddPatientAssignments",
                        "PatientProfileDefinition",
                        "AddCarePlanAssignments"
                    ],
                    "type": "string"
                },
                "NextSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubsequentStepInformation"
                    }
                },
                "Delimiter": {
                    "type": "string"
                }
            }
        },
        "ExportFileRecord": {
            "type": "object",
            "properties": {
                "FileName": {
                    "type": "string"
                },
                "ServerDirectory": {
                    "type": "string"
                },
                "ExportType": {
                    "enum": [
                        "PatientCarePlan",
                        "PatientTaskData",
                        "PatientSurvey",
                        "UserInformation"
                    ],
                    "type": "string"
                },
                "RelativeStartDay": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelativeEndDay": {
                    "format": "int32",
                    "type": "integer"
                },
                "TimeZoneId": {
                    "type": "string"
                }
            }
        },
        "IntegrationManagementCredentialBindingModel": {
            "description": "Model for setting client credentials for integration services",
            "required": [
                "ImportServerIp",
                "ImportServerPassword",
                "ImportServerPort",
                "ImportServerUserName"
            ],
            "type": "object",
            "properties": {
                "ImportServerIp": {
                    "description": "Gets or sets the import server ip.",
                    "type": "string"
                },
                "ImportServerPassword": {
                    "description": "Gets or sets the import server password.",
                    "type": "string"
                },
                "ImportServerPort": {
                    "format": "int32",
                    "description": "Gets or sets the import server port.",
                    "type": "integer"
                },
                "ImportServerUserName": {
                    "description": "Gets or sets the name of the import server user.",
                    "type": "string"
                }
            }
        },
        "InvitationViewModel": {
            "description": "The invitation view model.",
            "type": "object",
            "properties": {
                "DistributorId": {
                    "format": "uuid",
                    "description": "The distributor identifier.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "The sponsor identifier.",
                    "type": "string"
                },
                "OrganizationIds": {
                    "description": "The organization identifier.  If RoleType is Patient, there will be \r\n            at most one organization identifier.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "SponsorEntityId": {
                    "description": "The sponsor entity id.",
                    "type": "string"
                },
                "InvitationCode": {
                    "description": "The invitation code.",
                    "type": "string"
                },
                "RequiresTwoFactorActivation": {
                    "description": "The require two factor activation indicator.",
                    "type": "boolean"
                },
                "LastFourHomePhone": {
                    "description": "The masked home phone number.",
                    "type": "string"
                },
                "LastFourMobilePhone": {
                    "description": "The masked mobile phone number.",
                    "type": "string"
                },
                "RoleType": {
                    "description": "The role type.",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient",
                        "Unknown"
                    ],
                    "type": "string"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "The birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "Sex": {
                    "description": "The sex.",
                    "type": "string"
                }
            }
        },
        "GenerateActivationCodeBindingModel": {
            "description": "The binding model for sending a two factor activation code.",
            "required": [
                "ChannelType",
                "ReceiverType"
            ],
            "type": "object",
            "properties": {
                "ChannelType": {
                    "description": "The channel type.",
                    "enum": [
                        "Unknown",
                        "Push",
                        "App",
                        "Email",
                        "Sms",
                        "Api",
                        "Ivr",
                        "None",
                        "ChatBot"
                    ],
                    "type": "string"
                },
                "ReceiverType": {
                    "description": "The receiver type.",
                    "enum": [
                        "MobilePhone",
                        "HomePhone"
                    ],
                    "type": "string"
                }
            }
        },
        "ActivatePatientDobSponsorPatientIdBindingModel": {
            "description": "Used for activating a patient account that is currently in inactivated state.",
            "required": [
                "SponsorPatientId",
                "DateOfBirth"
            ],
            "type": "object",
            "properties": {
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "DateOfBirth": {
                    "description": "Gets or sets the date of birth in yyyy-mm-dd format",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "The email address that the patient will use to login to the system.",
                    "type": "string"
                },
                "Password": {
                    "description": "The password that will be used by the patient to login.",
                    "type": "string"
                }
            }
        },
        "SponsorIdListBindingModel": {
            "description": "A collection of Sponsor Ids",
            "required": [
                "Ids"
            ],
            "type": "object",
            "properties": {
                "Ids": {
                    "description": "Gets or sets the ids.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CloneCarePlanToPatientBindingModel": {
            "description": "Model used to specify what care plan should be cloned to a patient.\r\n            A care plan is still owned by a sponsor and has an ID but is\r\n            understood to be assigned to a single patient",
            "type": "object",
            "properties": {
                "SponsorId": {
                    "format": "uuid",
                    "description": "The Id of the sponsor that owns the care plan which will serve as a template for the clone operation.",
                    "type": "string"
                },
                "CloneCarePlanId": {
                    "description": "The id of the care plan to be used as a template for the clone operation.",
                    "type": "string"
                },
                "RemoveCarePlanIds": {
                    "description": "When cloning a care plan to a personal care plan, the patient must have no care plans associated to the patient.\r\n            This parameters allows removing all the other care plans in a single operation.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "IdBindingModel": {
            "description": "An Id",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string"
                }
            }
        },
        "PatientBroadcastModel": {
            "description": "Model for broadcasting a message to patients",
            "required": [
                "PatientIds",
                "Mobile",
                "Email",
                "ChatBot",
                "Message"
            ],
            "type": "object",
            "properties": {
                "PatientIds": {
                    "description": "Gets or sets the patient list.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Mobile": {
                    "description": "Gets or sets the desire for mobile (push or sms) notification.",
                    "type": "boolean"
                },
                "Email": {
                    "description": "Gets or sets the desire for email notification.",
                    "type": "boolean"
                },
                "ChatBot": {
                    "description": "Gets or sets the desire for a chat bot message",
                    "type": "boolean"
                },
                "Message": {
                    "description": "Gets or sets the message body.",
                    "maxLength": 160,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "BroadcastToPatientsBuilderModel": {
            "type": "object",
            "properties": {
                "ShortCodes": {
                    "description": "Gets the list of valid short codes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BroadcastToPatientsShortCodesModel"
                    },
                    "readOnly": true
                }
            }
        },
        "BroadcastToPatientsShortCodesModel": {
            "description": "Represents a single broadcast short code",
            "type": "object",
            "properties": {
                "Code": {
                    "description": "Gets or sets the broadcast short code",
                    "type": "string"
                },
                "Description": {
                    "description": "Gets or sets the description of the broadcast short code.",
                    "type": "string"
                }
            }
        },
        "SponsorEntityIdBulkPatientUpdateBindingModel": {
            "description": "Binding model for supporting bulk updating of patients.",
            "required": [
                "PatientIds"
            ],
            "type": "object",
            "properties": {
                "PatientIds": {
                    "description": "List of the identifiers of the patients to be updated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CarePlanIdsToAdd": {
                    "description": "List of the identifiers of the care plans to be added to each patient.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CarePlanIdsToRemove": {
                    "description": "List of the identifiers of the care plans to be removed from each patient.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CategoryIdsToAdd": {
                    "description": "List of the identifiers of the categories to be added to each patient.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CategoryIdsToRemove": {
                    "description": "List of the identifiers of the categories to be removed from each patient.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "The identifier of the organization patients should be associated with.",
                    "type": "string"
                }
            }
        },
        "ChangePasswordBindingModel": {
            "description": "Model for changing passwords",
            "type": "object",
            "properties": {
                "CurrentPassword": {
                    "description": "Users' password at time of change",
                    "type": "string"
                },
                "NewPassword": {
                    "description": "Password to change to.",
                    "type": "string"
                }
            }
        },
        "PatientChangeRoleBindingModel": {
            "description": "Binding model for changing a patient's role",
            "type": "object",
            "properties": {
                "RoleToAdd": {
                    "description": "Gets or sets the role to add.",
                    "type": "string"
                },
                "RoleToRemove": {
                    "description": "Gets or sets the role to remove.",
                    "type": "string"
                }
            }
        },
        "PatientSettingsBindingModel": {
            "description": "Model that covers various patient modifiable settings.",
            "type": "object",
            "properties": {
                "SendEmailReminders": {
                    "description": "Gets or sets a value indicating whether [send email reminders].",
                    "type": "boolean"
                },
                "ShowHealthDataInNotifications": {
                    "description": "Gets or sets a value indicating whether [show health data in notifications].",
                    "type": "boolean"
                },
                "NewMessageNotification": {
                    "description": "How should the patient be notified of new messages, if at all?",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Email",
                            "Push"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "PatientCreateBindingModel": {
            "description": "Model for creating a new patient.",
            "required": [
                "AuthCode",
                "BirthDate",
                "FirstName",
                "LastName",
                "MobilePhone",
                "OrganizationId",
                "Password",
                "Sex",
                "SponsorId",
                "TimeZoneId",
                "UserName"
            ],
            "type": "object",
            "properties": {
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "AppointmentDateTime": {
                    "description": "If an appointment is to be created, the date goes here",
                    "type": "string"
                },
                "AuthCode": {
                    "description": "Gets or sets the authentication code.",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "Gets or sets the birth date.",
                    "type": "string"
                },
                "CarePlanId": {
                    "format": "uuid",
                    "description": "Gets or sets the care plan identifier.",
                    "type": "string"
                },
                "CategoryId": {
                    "format": "uuid",
                    "description": "Gets or sets the category identifier.",
                    "type": "string"
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "Country": {
                    "description": "Gets or sets the country",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix to a name.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix to a name.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone number",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "Password": {
                    "description": "Gets or sets the password.",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MUF]",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier, a client assign id or code for a patient.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "UserName": {
                    "description": "Gets or sets the name of the user.",
                    "type": "string"
                }
            }
        },
        "PatientCreatedViewModel": {
            "description": "The data returned when a patient is created - in particular the PatientId and \r\n            UserName.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The newly created patient's ID",
                    "type": "string"
                },
                "UserName": {
                    "description": "The newly created patient's username, which is an email address.",
                    "type": "string"
                }
            }
        },
        "SponsorPatientListViewModel": {
            "description": "The sponsor patient list view model.",
            "type": "object",
            "properties": {
                "SponsorId": {
                    "format": "uuid",
                    "description": "The sponsor identifier.",
                    "type": "string"
                },
                "Patients": {
                    "description": "The collection of patient list item view models.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PatientListItemViewModel"
                    }
                }
            }
        },
        "PatientListItemViewModel": {
            "description": "The patient list item view model.",
            "type": "object",
            "properties": {
                "MobilePhone": {
                    "description": "The mobile phone number.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "The home phone number.",
                    "type": "string"
                },
                "Roles": {
                    "description": "The roles assigned to the patient.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CategoryAssociations": {
                    "description": "The categories associations.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryViewModel"
                    }
                },
                "Categories": {
                    "description": "The categories.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SponsorName": {
                    "description": "The sponsor's name.",
                    "type": "string"
                },
                "ActivatedStatusTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                    "description": "The time the patient was activated.",
                    "type": "string",
                    "example": "1986-07-19T11:53:00"
                },
                "LastScheduleUpdateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The last time the schedule was updated.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "LastMeasurementDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                    "description": "The last measurment date time",
                    "type": "string",
                    "example": "1986-07-19T11:53:00"
                },
                "AlertCount": {
                    "format": "int32",
                    "description": "The number of patient alerts.",
                    "type": "integer"
                },
                "LastAlertClearedDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The last time the alerts were cleared.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "NextAppointmentDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                    "description": "The time of the next appointment.",
                    "type": "string",
                    "example": "1986-07-19T11:53:00"
                },
                "Appointments": {
                    "description": "The collection of appointments.",
                    "type": "array",
                    "items": {
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                        "type": "string",
                        "example": "1986-07-19T11:53:00"
                    }
                },
                "LastLoginDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time the patient last logged in.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "LoginPlatforms": {
                    "description": "The time the patient last logged in, and the platform type.",
                    "type": "object",
                    "properties": {
                        "Ios": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Android": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Dashboard": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Unknown": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Other": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "DashboardMobile": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        }
                    }
                },
                "PushChannelConfirmationDates": {
                    "description": "The push channel confirmations and their platform.",
                    "type": "object",
                    "properties": {
                        "Ios": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Android": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Dashboard": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Unknown": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Other": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "DashboardMobile": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        }
                    }
                },
                "Address1": {
                    "description": "The Address line 1 for a patient",
                    "type": "string"
                },
                "Address2": {
                    "description": "The Address line 2 for a patient",
                    "type": "string"
                },
                "City": {
                    "description": "The City the patient lives in",
                    "type": "string"
                },
                "State": {
                    "description": "The State the patient lives in",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "The Postal Code for the patient",
                    "type": "string"
                },
                "Country": {
                    "description": "The Country the patient lives in",
                    "type": "string"
                },
                "CarePlanId": {
                    "format": "uuid",
                    "description": "The care plan identifier.",
                    "type": "string"
                },
                "CarePlanIsPersonal": {
                    "description": "The flag if the care plan is personal.",
                    "type": "boolean"
                },
                "CarePlanIsPatientPlan": {
                    "description": "The flag if the care plan is a patient plan.",
                    "type": "boolean"
                },
                "CarePlanName": {
                    "description": "The care plan name.",
                    "type": "string"
                },
                "CategoryId": {
                    "format": "uuid",
                    "description": "The category identifier.",
                    "type": "string"
                },
                "CategoryName": {
                    "description": "The category name.",
                    "type": "string"
                },
                "IsActivated": {
                    "description": "The patient activation flag.",
                    "type": "boolean"
                },
                "CarePlans": {
                    "description": "The list of care plan names.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanIds": {
                    "description": "The identifiers of the care plans to which the patient belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to the patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "IsDeactivated": {
                    "description": "If true, indicates that a patient is not active.",
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the organization name.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "Get or set the patient photo."
                },
                "Status": {
                    "description": "Gets or sets the patient status.",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "PatientCarePlanAssocationViewModel": {
            "description": "Describes the a care plan and its association to a patient.",
            "type": "object",
            "properties": {
                "DistributorId": {
                    "format": "uuid",
                    "description": "The distributor owning the care plan.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "The sponsor owning the care plan",
                    "type": "string"
                },
                "ManagementType": {
                    "description": "Indicates how a care plan is managed, relative to the patient",
                    "enum": [
                        "Population",
                        "Personal",
                        "Patient"
                    ],
                    "type": "string"
                },
                "CarePlanId": {
                    "format": "uuid",
                    "description": "The care plan id.",
                    "type": "string"
                },
                "CarePlanName": {
                    "description": "The care plan name.",
                    "type": "string"
                }
            }
        },
        "ImageViewModel": {
            "description": "The image view model.",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name of the phone",
                    "type": "string"
                },
                "Description": {
                    "description": "A photo description, if available.",
                    "type": "string"
                },
                "WebImageUrl": {
                    "description": "Gets or sets the web image URL - a web friendly version of the image.",
                    "type": "string"
                },
                "MobileImageUrl": {
                    "description": "Gets or sets the mobile image URL - a mobile friendly version of the image.",
                    "type": "string"
                },
                "ThumbNailUrl": {
                    "description": "Gets or sets the thumb nail URL - a thumbnail image.",
                    "type": "string"
                },
                "Id": {
                    "description": "Gets or sets the identifier of the photo.",
                    "type": "string"
                }
            }
        },
        "AddPersonalCarePlanBindingModel": {
            "description": "The binding model for creating a personal care plan for a patient from scratch.",
            "type": "object",
            "properties": {
                "CategoryIds": {
                    "description": "The group of CategoryIds to which the care plan is to be assigned.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "Name": {
                    "description": "The name of the personal care plan to be created.",
                    "type": "string"
                }
            }
        },
        "PatientViewModel": {
            "description": "All the data available about a patient",
            "required": [
                "OrganizationId"
            ],
            "type": "object",
            "properties": {
                "ActivatedStatusTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                    "description": "The most recent date and time at which a patients\r\n            status was changed. In the patient's time zone,\r\n            or in U.S. central time if unknown.",
                    "type": "string",
                    "example": "1986-07-19T11:53:00"
                },
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "AlertCount": {
                    "format": "int32",
                    "description": "Gets or sets the alert count.",
                    "type": "integer"
                },
                "AppointmentDateTime": {
                    "description": "If an appointment is to be created, the date goes here",
                    "type": "string"
                },
                "Appointments": {
                    "description": "Gets or sets the appointments.",
                    "type": "array",
                    "items": {
                        "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                        "type": "string",
                        "example": "1986-07-19T11:53:00"
                    }
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlans": {
                    "description": "Gets or sets the care plan ids.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to a patient",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "Categories": {
                    "description": "Gets or sets the categories.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanId": {
                    "format": "uuid",
                    "description": "Gets or sets the care plan identifier.",
                    "type": "string"
                },
                "CarePlanName": {
                    "description": "Gets or sets the name of the care plan.",
                    "type": "string"
                },
                "CarePlanInceptionDates": {
                    "description": "Gets or sets the date a CarePlan is affiliated with a PatientReadModel.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "uuuu'-'MM'-'dd",
                        "type": "string",
                        "example": "1986-07-19"
                    }
                },
                "CarePlanIsPersonal": {
                    "description": "Gets or sets a value indicating whether [care plan is personal].",
                    "type": "boolean"
                },
                "CategoryId": {
                    "format": "uuid",
                    "description": "Gets or sets the category identifier.",
                    "type": "string"
                },
                "CategoryName": {
                    "description": "Gets or sets the name of the category.",
                    "type": "string"
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets first name.",
                    "type": "string",
                    "readOnly": true
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "IsActivated": {
                    "description": "Indicates whether or not the patient is in an active state.",
                    "type": "boolean"
                },
                "IncomingSharedCareInvitations": {
                    "description": "Gets or sets the incoming shared care invitations.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedCareInvitationViewModel"
                    }
                },
                "LastAlertClearedDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The last date and time alerts were cleared for the patient",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "LastLoginDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The last date and time the patient logged in",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "LastName": {
                    "description": "Gets last name.",
                    "type": "string",
                    "readOnly": true
                },
                "LastScheduleUpdateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The last time that the schedule was updated. Will be\r\n            in default state until the first full schedule update is completed.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "LoginPlatforms": {
                    "description": "Gets or sets the collection of platforms on which the user has logged in",
                    "type": "object",
                    "properties": {
                        "Ios": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Android": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Dashboard": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Unknown": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Other": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "DashboardMobile": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        }
                    }
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the Name."
                },
                "NextAppointmentDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                    "description": "Gets or sets the next appointment date time.",
                    "type": "string",
                    "example": "1986-07-19T11:53:00"
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the name of the organization.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or sets the patient photo."
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "PushChannelConfirmationDates": {
                    "description": "Dictionary of Push platforms and when the platform was last confirmed",
                    "type": "object",
                    "properties": {
                        "Ios": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Android": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Dashboard": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Unknown": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Other": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "DashboardMobile": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        }
                    }
                },
                "Roles": {
                    "description": "Gets or sets the roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "Sponsor": {
                    "$ref": "#/definitions/SponsorViewModel",
                    "description": "Gets or sets the sponsor."
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorName": {
                    "description": "Gets or sets the name of the sponsor.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "UserName": {
                    "description": "Gets or sets the name of the user.",
                    "type": "string"
                },
                "Settings": {
                    "$ref": "#/definitions/PatientSettings",
                    "description": "Gets or sets the settings."
                },
                "OutgoingSharedCare": {
                    "description": "Gets or sets the outgoing shared care patients.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedCarePatientViewModel"
                    }
                },
                "IncomingSharedCare": {
                    "description": "Gets or sets the incoming shared care patients.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedCarePatientViewModel"
                    }
                },
                "OutgoingSharedCareInvitations": {
                    "description": "Gets or sets the outgoing shared care invitations.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OutgoingSharedCareInvitationReadModel"
                    }
                },
                "Status": {
                    "description": "Gets or sets the patient status",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "SharedCareInvitationViewModel": {
            "description": "Relation Invitation View Model",
            "type": "object",
            "properties": {
                "Accepted": {
                    "description": "Gets or sets a value indicating whether this {Filament.Engagement.Entities.SharedCareInvitation} is accepted.",
                    "type": "boolean"
                },
                "AcceptedTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Gets or sets the accepted time.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "InvitingPatient": {
                    "$ref": "#/definitions/SharedCarePatientViewModel",
                    "description": "Gets or sets the inviting patient."
                },
                "InvitationCode": {
                    "description": "Gets or sets the invitation code.",
                    "type": "string"
                },
                "IsExistingPatient": {
                    "description": "Gets or sets a value indicating whether this instance is existing patient.",
                    "type": "boolean"
                },
                "Permission": {
                    "description": "Gets or sets the permission.",
                    "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "type": "string"
                },
                "ReceivingPatientId": {
                    "format": "uuid",
                    "description": "Gets or sets the receiving patient identifier.",
                    "type": "string"
                },
                "Relationship": {
                    "description": "Gets or sets the relationship.",
                    "type": "string"
                },
                "SentTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Gets or sets the sent time.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Branding": {
                    "$ref": "#/definitions/BrandingViewModel",
                    "description": "Gets or sets the branding."
                }
            }
        },
        "SponsorViewModel": {
            "description": "Data about a sponsor",
            "type": "object",
            "properties": {
                "Branding": {
                    "$ref": "#/definitions/BrandingViewModel",
                    "description": "Gets or sets the sponsor's branding"
                },
                "DistributorCarePlans": {
                    "description": "Gets or sets the distributor care plans.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SponsorCarePlanViewModel"
                    }
                },
                "CarePlans": {
                    "description": "Gets or sets the care plans.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SponsorCarePlanViewModel"
                    }
                },
                "DistributorCategories": {
                    "description": "Gets or sets the distributor categories.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryViewModel"
                    }
                },
                "Categories": {
                    "description": "Gets or sets the categories.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "DistributorTasks": {
                    "description": "Gets or sets the distributor tasks.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskViewModel"
                    }
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Organizations": {
                    "description": "Gets or sets the organizations.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationViewModel"
                    }
                },
                "PatientCount": {
                    "format": "int32",
                    "description": "Gets or sets the patient count.",
                    "type": "integer"
                },
                "PatientProfileDefinitionIds": {
                    "description": "The list of profile definition ids that have been affiliated to the \r\n             sponsor.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "ScheduledTaskTimePeriods": {
                    "description": "Gets or sets the scheduled task time periods.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Settings": {
                    "$ref": "#/definitions/SponsorSettings",
                    "description": "Collection of all configurable sponsor level settings."
                },
                "SponsorTasks": {
                    "description": "Gets or sets the sponsor tasks.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskViewModel"
                    }
                },
                "TaskAlerts": {
                    "description": "Gets or sets the task alerts.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskAlert"
                    }
                },
                "TaskTags": {
                    "description": "Gets or sets the task tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DistributorTaskTags": {
                    "description": "Gets or sets the distributor task tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SponsorTaskTags": {
                    "description": "Gets or sets the sponsor task tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "UserCount": {
                    "format": "int32",
                    "description": "Gets or sets the user count.",
                    "type": "integer"
                },
                "WebHooks": {
                    "description": "Gets or sets the web hooks.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WebHookViewModel"
                    }
                },
                "ChatBotContextId": {
                    "format": "uuid",
                    "description": "The sponsor's chat bot context identifier (if configured).",
                    "type": "string"
                }
            }
        },
        "PatientSettings": {
            "type": "object",
            "properties": {
                "SendEmailReminders": {
                    "description": "Does the Patient receive email reminders? Defaults to True per business logic",
                    "type": "boolean"
                },
                "ShowHealthDataInNotifications": {
                    "description": "Personalized email reminder setting, defaults to false",
                    "type": "boolean"
                },
                "NewDirectMessageNotification": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "Email",
                            "Push"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "SharedCarePatientViewModel": {
            "description": "Patient View Model for a shared care invitation",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the patient identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or sets the patient photo."
                },
                "Permission": {
                    "description": "Gets or sets the permission.",
                    "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "type": "string"
                },
                "Relationship": {
                    "description": "Gets or sets the relationship.",
                    "type": "string"
                }
            }
        },
        "OutgoingSharedCareInvitationReadModel": {
            "type": "object",
            "properties": {
                "AcceptedInstant": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Gets or sets the accepted time.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Accepted": {
                    "description": "Gets or sets a value indicating whether this {Filament.Engagement.ReadModel.Patient.OutgoingSharedCareInvitationReadModel} is accepted.",
                    "type": "boolean"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "InvitationCode": {
                    "description": "Gets or sets the invitation code.",
                    "type": "string"
                },
                "EmailAddressAcceptedWith": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "Permission": {
                    "description": "Gets or sets the permission.",
                    "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "type": "string"
                },
                "ReceivingPatientId": {
                    "format": "uuid",
                    "description": "Gets or sets the receiving patient identifier.",
                    "type": "string"
                },
                "Relationship": {
                    "description": "Gets or sets the relationship.",
                    "enum": [
                        "Spouse",
                        "SignificantOther",
                        "Grandparent",
                        "Grandchild",
                        "Mother",
                        "Father",
                        "Child",
                        "Employee",
                        "Coworker",
                        "Other"
                    ],
                    "type": "string"
                }
            }
        },
        "SponsorCarePlanViewModel": {
            "description": "Model for returning data about a care plan's contained in the Sponsor View Model",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "SponsorCarePlanId": {
                    "description": "Gets or sets the sponsor care plan identifier.",
                    "type": "string"
                },
                "AssignedPatientCount": {
                    "format": "int32",
                    "description": "Gets or sets the number of patients assigned to the care plan.",
                    "type": "integer"
                },
                "Categories": {
                    "description": "Gets or sets the categories.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryViewModel"
                    }
                },
                "OwningAggregateType": {
                    "description": "Gets or sets the owning aggregate (Distributor or Sponsor) of the care plan.",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient"
                    ],
                    "type": "string"
                },
                "OwnerId": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier of the owning aggregate (Distributor or Sponsor) of the care plan.",
                    "type": "string"
                }
            }
        },
        "OrganizationViewModel": {
            "description": "Information about an organization within a sponsor",
            "type": "object",
            "properties": {
                "BusinessAddress": {
                    "$ref": "#/definitions/Address",
                    "description": "Gets or sets the business address."
                },
                "CareTeam": {
                    "description": "Gets or sets the care team.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserViewModel"
                    }
                },
                "Contact": {
                    "$ref": "#/definitions/DigitalContactInformation",
                    "description": "Gets or sets the contact."
                },
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "SponsorOrganizationId": {
                    "description": "Gets or sets the SponsorOrganizationId, a client defined\r\n            identifier for an organization",
                    "type": "string"
                },
                "OrganizationPhoto": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or sets the photos."
                },
                "Settings": {
                    "$ref": "#/definitions/OrganizationSettings",
                    "description": "The collection of organization specific settings."
                },
                "PatientCount": {
                    "format": "int32",
                    "description": "Gets or sets the patient count.",
                    "type": "integer"
                },
                "TelephoneNumbers": {
                    "description": "Gets or sets the telephone numbers.",
                    "type": "object",
                    "properties": {
                        "Business": {
                            "$ref": "#/definitions/TelephoneNumber"
                        },
                        "Mobile": {
                            "$ref": "#/definitions/TelephoneNumber"
                        },
                        "Personal": {
                            "$ref": "#/definitions/TelephoneNumber"
                        }
                    }
                },
                "UserCount": {
                    "format": "int32",
                    "description": "Gets or sets the user count.",
                    "type": "integer"
                },
                "Branding": {
                    "$ref": "#/definitions/BrandingViewModel",
                    "description": "Organization branding"
                },
                "Uri": {
                    "description": "Gets or sets the URI to the content.",
                    "type": "string"
                }
            }
        },
        "SponsorSettings": {
            "type": "object",
            "properties": {
                "AppleAppStoreUrl": {
                    "type": "string"
                },
                "DisableAppointmentsUI": {
                    "type": "boolean"
                },
                "EmailFromLabel": {
                    "enum": [
                        "Default",
                        "SponsorName",
                        "OrganizationName"
                    ],
                    "type": "string"
                },
                "GooglePlayStoreUrl": {
                    "type": "string"
                },
                "HideCareTeam": {
                    "type": "boolean"
                },
                "MaskSponsorPatientId": {
                    "type": "boolean"
                },
                "MessagingEnabled": {
                    "type": "boolean"
                },
                "SendTaskCountEmailReminders": {
                    "type": "boolean"
                },
                "SendTaskCountPushReminders": {
                    "type": "boolean"
                },
                "UserTimeCardEnabled": {
                    "type": "boolean"
                },
                "UserTimeCardRequiresPatientSignature": {
                    "type": "boolean"
                },
                "ActivationEmailTemplate": {
                    "type": "string"
                },
                "WelcomeEmailTemplate": {
                    "type": "string"
                },
                "ReminderEmailTemplate": {
                    "type": "string"
                },
                "BroadcastedMessageEmailTemplate": {
                    "type": "string"
                },
                "ResetPasswordEmailTemplate": {
                    "type": "string"
                },
                "ShareCareEmailTemplate": {
                    "type": "string"
                },
                "CareTeamWelcomeEmailTemplate": {
                    "type": "string"
                },
                "CareTeamAlertsEmailTemplate": {
                    "type": "string"
                },
                "CareTeamActivationEmailTemplate": {
                    "type": "string"
                },
                "InvitationDripList": {
                    "type": "string"
                },
                "CareTeamInvitationDripList": {
                    "type": "string"
                },
                "ReengagementDripList": {
                    "type": "string"
                },
                "AdminTrainingDripList": {
                    "type": "string"
                },
                "PersonalCarePlansEnabled": {
                    "type": "boolean"
                },
                "PatientCarePlansUIEnabled": {
                    "type": "boolean"
                },
                "CareGiverReadReceiptsEnabled": {
                    "type": "boolean"
                },
                "PatientCanViewReadReceiptsEnabled": {
                    "type": "boolean"
                },
                "TwilioFromNumber": {
                    "type": "string"
                },
                "PatientTwoFactorActivationRequired": {
                    "type": "boolean"
                },
                "UserTwoFactorActivationRequired": {
                    "type": "boolean"
                },
                "DistributorContentEnabled": {
                    "type": "boolean"
                },
                "VideoCallingEnabled": {
                    "type": "boolean"
                },
                "ChatBotEnabled": {
                    "type": "boolean"
                },
                "UnreadMessagesEmailTemplate": {
                    "type": "string"
                },
                "SecondsToSendUnreadMessageEmailReminders": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "TaskAlert": {
            "description": "The package of rules an information that defines when, how and to whom \r\n            an alert will be issued for a Task.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id of the task alert",
                    "type": "string"
                },
                "TaskId": {
                    "format": "uuid",
                    "description": "The task on which this alert is designed to fire",
                    "type": "string"
                },
                "Notifications": {
                    "description": "The collection of notification rules for this alert",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertNotificationRule"
                    }
                },
                "Triggers": {
                    "description": "The trigger conditions for this alert",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertTrigger"
                    }
                }
            }
        },
        "WebHookViewModel": {
            "description": "View model for Web Hooks.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The unique ID",
                    "type": "string"
                },
                "ExternalUri": {
                    "description": "The URI which should be called",
                    "type": "string"
                },
                "Verb": {
                    "description": "The verb to use in the payload",
                    "type": "string"
                },
                "EventName": {
                    "description": "The Name of the Patient IO event\r\n            being hooked",
                    "enum": [
                        "SponsorPatientIdAppliedToPatient",
                        "PatientAddedToRepository",
                        "AlertSignaledForScheduledTask",
                        "MeasurementRecorded",
                        "MessageSent",
                        "MessageReceived",
                        "ConversationStatusSet",
                        "PatientCompletedSurvey"
                    ],
                    "type": "string"
                },
                "PayloadType": {
                    "description": "The web hook payload type.",
                    "enum": [
                        "PatientIo",
                        "Fhir"
                    ],
                    "type": "string"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "CompanyName": {
                    "type": "string"
                },
                "Address1": {
                    "type": "string"
                },
                "Address2": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "PostalCode": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                }
            }
        },
        "UserViewModel": {
            "description": "View of a non-patient user of the system.",
            "type": "object",
            "properties": {
                "Biography": {
                    "description": "Gets or sets the biography.",
                    "type": "string"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "Distributors": {
                    "description": "Gets or sets the distributors.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "LastLoginDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The last date and time the patient logged in",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "LoginPlatforms": {
                    "description": "Gets or sets the collection of platforms on which the user has logged in",
                    "type": "object",
                    "properties": {
                        "Ios": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Android": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Dashboard": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Unknown": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "Other": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        },
                        "DashboardMobile": {
                            "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                            "type": "string",
                            "example": "1986-07-19T16:53:00Z"
                        }
                    }
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "Organizations": {
                    "description": "Gets or sets the organizations.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "Roles": {
                    "description": "Gets or sets the roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "Sponsors": {
                    "description": "Gets or sets the sponsors.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "SponsorUserId": {
                    "description": "Gets or sets the sponsor user identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "UserAddress": {
                    "$ref": "#/definitions/Address",
                    "description": "Gets or sets the user address."
                },
                "UserPhoto": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or sets the user photo."
                },
                "Settings": {
                    "$ref": "#/definitions/UserSettings",
                    "description": "Gets or sets the settings."
                },
                "Archived": {
                    "description": "Gets or sets a value indicating whether this {Filament.API.Models.Entities.UserViewModel} is archived.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "Gets or sets the user status.",
                    "enum": [
                        "Invited",
                        "Activated"
                    ],
                    "type": "string"
                },
                "InvitedByUserId": {
                    "format": "uuid",
                    "description": "The identifier for the inviting user",
                    "type": "string"
                },
                "InvitedByUserName": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "The name of the inviting user"
                },
                "InvitedBySponsorUserId": {
                    "description": "The sponsor identifier for the inviting user",
                    "type": "string"
                }
            }
        },
        "DigitalContactInformation": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "type": "string"
                },
                "WebsiteUrl": {
                    "type": "string"
                },
                "Twitter": {
                    "type": "string"
                }
            }
        },
        "OrganizationSettings": {
            "type": "object",
            "properties": {
                "MessagingEnabled": {
                    "type": "boolean"
                }
            }
        },
        "TelephoneNumber": {
            "type": "object",
            "properties": {
                "CountryCode": {
                    "type": "string"
                },
                "Number": {
                    "type": "string"
                },
                "FormattedNumber": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "AlertNotificationRule": {
            "description": "A rule describing when and how a group should be notified",
            "type": "object",
            "properties": {
                "Channel": {
                    "description": "Gets or sets the channel.",
                    "enum": [
                        "DashboardOnly",
                        "Email",
                        "Sms"
                    ],
                    "type": "string"
                },
                "NotificationScope": {
                    "description": "Gets or sets the notification scope.",
                    "enum": [
                        "CareTeam",
                        "Organization",
                        "SharedCare"
                    ],
                    "type": "string"
                },
                "Timing": {
                    "description": "Gets or sets the timing.",
                    "enum": [
                        "Immediate",
                        "Batched"
                    ],
                    "type": "string"
                }
            }
        },
        "AlertTrigger": {
            "description": "The rules describing when an alert will be triggered",
            "type": "object",
            "properties": {
                "RequiresScheduleHistory": {
                    "type": "boolean",
                    "readOnly": true
                },
                "TriggerType": {
                    "description": "The particular type of occurrence which will trigger alert.",
                    "enum": [
                        "CompletedTask",
                        "SkippedTask",
                        "IgnoredTask",
                        "LeftNote"
                    ],
                    "type": "string"
                },
                "TriggerOccurrencesThreshold": {
                    "format": "int32",
                    "description": "The number of times a triggering occurrence must occur \r\n             in order for an alert to be triggered by an occurrence.",
                    "type": "integer"
                },
                "OccurrenceRelatedness": {
                    "description": "Describes how related occurrences must be in order for them \r\n            to meet the threshold of RequiredTriggerOccurrences",
                    "enum": [
                        "Anytime",
                        "Consecutively",
                        "SinceLastAlert"
                    ],
                    "type": "string"
                },
                "OutcomeRule": {
                    "$ref": "#/definitions/OutcomeTriggerRule",
                    "description": "Describes rule that must be true of the Outcome of a task \r\n            in order for the alert to be considered triggered"
                }
            }
        },
        "UserSettings": {
            "type": "object",
            "properties": {
                "NotifyOfAlerts": {
                    "description": "Does the User receive messages when an alert has occurred? Defaults to True per business logic",
                    "type": "boolean"
                },
                "AllowableDirectMessaging": {
                    "description": "If true, the user can be directly messaged by patients, given that messaging\r\n            is enabled for the sponsor.",
                    "enum": [
                        "ByNone",
                        "ByInOrganization"
                    ],
                    "type": "string"
                },
                "NewDirectMessageNotification": {
                    "description": "Should the user be notified when new direct messages are received, by email (batched once per day)\r\n            or push (real time notification). Defaults to on for both if direct messages is enabled.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Email",
                            "Push"
                        ],
                        "type": "string"
                    }
                },
                "NewOrganizationMessageNotification": {
                    "description": "Should the user be notified when an organization of which the user is a member receives a new\r\n            message, by email (batched once per day)\r\n            or push (real time notification). Defaults to on for both if messaging is enabled for the sponsor.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Email",
                            "Push"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "OutcomeTriggerRule": {
            "description": "Describes a rule to be applied to outcome data in order to \r\n            trigger an alert",
            "type": "object",
            "properties": {
                "ComparisonRuleType": {
                    "description": "Describes what kind of outcome comparison should be done - numeric, string or none.",
                    "enum": [
                        "None",
                        "StringComparison",
                        "NumericComparison",
                        "BloodPressure"
                    ],
                    "type": "string"
                },
                "NumericRule": {
                    "$ref": "#/definitions/NumericComparisonRule",
                    "description": "Gets or sets the numeric rule."
                },
                "StringRule": {
                    "$ref": "#/definitions/StringComparisonRule",
                    "description": "Defines a rule for string comparisons"
                },
                "BloodPressureRule": {
                    "$ref": "#/definitions/BloodPressureRule",
                    "description": "Defines a rule for string comparisons"
                }
            }
        },
        "NumericComparisonRule": {
            "description": "Describes a rule used for evaluating numeric outcomes to\r\n            see if the alert should be signaled.",
            "type": "object",
            "properties": {
                "MeasurementCalculation": {
                    "$ref": "#/definitions/MeasurementCalculationRule",
                    "description": "Describes how the measurement should be calculated - that is,\r\n            how a number against which the outcome is to be compared should be calculated."
                },
                "OutcomeCalculation": {
                    "description": "Indicates how the current outcome should be used in conjunction\r\n            with the measurement calculation to arrive at something to compare with something\r\n            else (the MeasurementComparison)",
                    "enum": [
                        "CompareMeasurementOnly",
                        "PercentageDifference",
                        "NominalDifference"
                    ],
                    "type": "string"
                },
                "MeasurementComparison": {
                    "$ref": "#/definitions/MeasurementComparisonRule",
                    "description": "Describes how the numeric outcome should be compared against the \r\n            MeasurementCalculation in order to determine if the alert should be signaled."
                },
                "RequiresScheduleHistory": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "StringComparisonRule": {
            "description": "Defines a rule for comparison of string outcomes",
            "type": "object",
            "properties": {
                "ComparisonStrings": {
                    "description": "The list of strings to be used to check if the string outcome \r\n            rule passes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MatchRequirement": {
                    "description": "Matching requirement for the compared string",
                    "enum": [
                        "Any",
                        "All"
                    ],
                    "type": "string"
                }
            }
        },
        "BloodPressureRule": {
            "description": "Describes a rule used for evaluating numeric outcomes to\r\n            see if the alert should be signaled.",
            "type": "object",
            "properties": {
                "SystolicComparisonRule": {
                    "$ref": "#/definitions/NumericComparisonRule",
                    "description": "Describes how the measurement should be calculated - that is,\r\n            how a number against which the outcome is to be compared should be calculated."
                },
                "DiastolicComparisonRule": {
                    "$ref": "#/definitions/NumericComparisonRule",
                    "description": "Indicates how the current outcome should be used in conjunction\r\n            with the measurement calculation to arrive at something to compare with something\r\n            else (the MeasurementComparison)"
                }
            }
        },
        "MeasurementCalculationRule": {
            "description": "Describes how the measurement should be calculated - that is,\r\n            how a number against which an outcome is to be compared should be calculated.",
            "type": "object",
            "properties": {
                "CalculationScope": {
                    "description": "Describes how the measurement should be calculated - that is,\r\n            how a number against which the outcome is to be compared should be calculated.",
                    "enum": [
                        "ThisOutcome",
                        "ComparedWithPrevious",
                        "MovingAverage"
                    ],
                    "type": "string"
                },
                "MeasurementSpan": {
                    "format": "int32",
                    "description": "Describes how many outcomes should be taken into account\r\n            in calculating the measurement. Must be one if MeasurementScopeType\r\n            is ThisOutcome",
                    "type": "integer"
                },
                "SpanType": {
                    "description": "Indicates what type of span is being calculated.\r\n            Can be used to derive the total number of outcomes\r\n            from time periods, or indicate an absolute number\r\n            of previous outcomes, or indicate only this outcome.",
                    "enum": [
                        "This",
                        "Outcomes",
                        "Days",
                        "Weeks",
                        "Months"
                    ],
                    "type": "string"
                }
            }
        },
        "MeasurementComparisonRule": {
            "description": "Describes how the numeric outcome should be compared against the \r\n            MeasurementCalculation in order to determine if the alert should be signaled.",
            "type": "object",
            "properties": {
                "Operator": {
                    "description": "Gets or sets the operator.",
                    "enum": [
                        "Equals",
                        "GreaterThan",
                        "GreaterThanOrEqualTo",
                        "LessThan",
                        "LessThanOrEqualTo",
                        "PlusOrMinus",
                        "OutOfRange"
                    ],
                    "type": "string"
                },
                "ComparisonValues": {
                    "description": "The values to be used in comparison to the MeasurementCalculation\r\n            and OutcomeCalculation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ComparisonValue"
                    }
                }
            }
        },
        "ComparisonValue": {
            "description": "Indicates what type of value this is and the amount of the value",
            "type": "object",
            "properties": {
                "ValueType": {
                    "description": "What type of value this is - Low or high value in a range, or just a single value",
                    "enum": [
                        "Low",
                        "High",
                        "Single"
                    ],
                    "type": "string"
                },
                "Value": {
                    "format": "double",
                    "description": "The number to be used in the comparison",
                    "type": "number"
                }
            }
        },
        "PatientUpdateBindingModel": {
            "description": "Model for updating a patient",
            "required": [
                "BirthDate",
                "FirstName",
                "LastName",
                "MobilePhone",
                "Sex",
                "SponsorId",
                "TimeZoneId",
                "UserName"
            ],
            "type": "object",
            "properties": {
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanId": {
                    "format": "uuid",
                    "description": "Gets or sets the care plan identifier.",
                    "type": "string"
                },
                "CategoryId": {
                    "format": "uuid",
                    "description": "Gets or sets the category identifier.",
                    "type": "string"
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "CompanyName": {
                    "description": "Gets or sets the name of the company.",
                    "type": "string"
                },
                "Country": {
                    "description": "Gets or sets the country.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone",
                    "type": "string"
                },
                "NewUserName": {
                    "description": "If set, the patient's user name and email are changed.",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MUF]",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier, a client assign id or code for a patient.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "UserName": {
                    "description": "The user name. Should always be the current \r\n            user name, even when changing.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix of a name.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix of a name.",
                    "type": "string"
                }
            }
        },
        "AlertedPatientViewModel": {
            "description": "View model that corresponds to AlertedPatientReadModelEntity",
            "type": "object",
            "properties": {
                "AlertCount": {
                    "format": "int32",
                    "description": "The number of alerts for the patient.",
                    "type": "integer"
                },
                "AlertedTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The alerted time.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanIds": {
                    "description": "The identifiers of the care plans to which the patient belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to the patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "IsDeactivated": {
                    "description": "If true, indicates that a patient is not active.",
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the organization name.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "Get or set the patient photo."
                },
                "Status": {
                    "description": "Gets or sets the patient status.",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "ArchivedPatientViewModel": {
            "description": "",
            "type": "object",
            "properties": {
                "TimeOfArchival": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time the patient was archived",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanIds": {
                    "description": "The identifiers of the care plans to which the patient belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to the patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "IsDeactivated": {
                    "description": "If true, indicates that a patient is not active.",
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the organization name.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "Get or set the patient photo."
                },
                "Status": {
                    "description": "Gets or sets the patient status.",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "TaskOutcomesOverTime": {
            "type": "object",
            "properties": {
                "DomainType": {
                    "enum": [
                        "Day",
                        "Month"
                    ],
                    "type": "string"
                },
                "Domain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Datasets": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TaskOutcomeDataset"
                    }
                }
            }
        },
        "TaskOutcomeDataset": {
            "type": "object",
            "properties": {
                "SeriesName": {
                    "type": "string"
                },
                "Min": {
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "Max": {
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "Mean": {
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "Sum": {
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "RecordCount": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "FullNameBindingModel": {
            "description": "The name update binding model",
            "required": [
                "FirstName",
                "LastName"
            ],
            "type": "object",
            "properties": {
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix.",
                    "type": "string"
                }
            }
        },
        "AddressBindingModel": {
            "description": "Model for allowing address updates",
            "type": "object",
            "properties": {
                "CompanyName": {
                    "description": "Gets or sets the name of the company.",
                    "type": "string"
                },
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Country": {
                    "description": "Gets or sets the country.",
                    "type": "string"
                }
            }
        },
        "TimeZoneBindingModel": {
            "description": "Binding model for TimeZoneId.",
            "required": [
                "TimeZoneId"
            ],
            "type": "object",
            "properties": {
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                }
            }
        },
        "SignaledAlertViewModel": {
            "description": "View model for Alert Signals on Patient Scheduled Tasks",
            "type": "object",
            "properties": {
                "PatientId": {
                    "format": "uuid",
                    "description": "The identifier of the patient.",
                    "type": "string"
                },
                "ScheduledTaskId": {
                    "format": "uuid",
                    "description": "The identifier of the scheduled task.",
                    "type": "string"
                },
                "SignalId": {
                    "format": "uuid",
                    "description": "The identifier of the signal.",
                    "type": "string"
                },
                "AlertedTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time of the signal was created.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "DayOfCare": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "The day of care for the scheduled task.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "AlertTrigger": {
                    "$ref": "#/definitions/AlertTrigger",
                    "description": "The trigger that caused the signal."
                },
                "IsActive": {
                    "description": "The state of the signal. True if the signal is active, false \r\n            if the signal has been cleared by a caregiver.",
                    "type": "boolean"
                },
                "TaskId": {
                    "format": "uuid",
                    "description": "The task identifier",
                    "type": "string"
                }
            }
        },
        "PatientMostRecentTaskResultViewModel": {
            "description": "View model that corresponds to PatientMostRecentTaskReadModelEntity",
            "type": "object",
            "properties": {
                "TaskId": {
                    "format": "uuid",
                    "description": "The task identifier.",
                    "type": "string"
                },
                "TaskName": {
                    "description": "The task name.",
                    "type": "string"
                },
                "ScheduledTaskId": {
                    "format": "uuid",
                    "description": "The scheduled task identifier.",
                    "type": "string"
                },
                "TaskState": {
                    "description": "The tasks state.",
                    "type": "string"
                },
                "MeasurementData": {
                    "description": "The recorded measurement data.",
                    "type": "string"
                },
                "MeasurementUnits": {
                    "description": "The units in which the measurement was recorded",
                    "type": "string"
                },
                "MeasurementDateTime": {
                    "description": "The datetime the measurement data was recorded.",
                    "type": "string"
                },
                "ScheduledTaskRemoved": {
                    "description": "The boolean for if the task was removed.",
                    "type": "boolean"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanIds": {
                    "description": "The identifiers of the care plans to which the patient belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to the patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "IsDeactivated": {
                    "description": "If true, indicates that a patient is not active.",
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the organization name.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "Get or set the patient photo."
                },
                "Status": {
                    "description": "Gets or sets the patient status.",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "PatientCoreViewModel": {
            "description": "The patient core view model.",
            "type": "object",
            "properties": {
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanIds": {
                    "description": "The identifiers of the care plans to which the patient belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to the patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "IsDeactivated": {
                    "description": "If true, indicates that a patient is not active.",
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the organization name.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "Get or set the patient photo."
                },
                "Status": {
                    "description": "Gets or sets the patient status.",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "PatientCreatedDateViewModel": {
            "description": "The patient created date lookup view model.",
            "type": "object",
            "properties": {
                "CreatedDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "The created date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanIds": {
                    "description": "The identifiers of the care plans to which the patient belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to the patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "IsDeactivated": {
                    "description": "If true, indicates that a patient is not active.",
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the organization name.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "Get or set the patient photo."
                },
                "Status": {
                    "description": "Gets or sets the patient status.",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "PatientAppointmentDateViewModel": {
            "description": "The patient appointment date lookup view model.",
            "type": "object",
            "properties": {
                "AppointmentDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "The appointment date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanIds": {
                    "description": "The identifiers of the care plans to which the patient belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanAssociations": {
                    "description": "A collection of the associations of care plans to the patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PatientCarePlanAssocationViewModel"
                    }
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets the first name.",
                    "type": "string",
                    "readOnly": true
                },
                "IsDeactivated": {
                    "description": "If true, indicates that a patient is not active.",
                    "type": "boolean",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets the last name.",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "$ref": "#/definitions/NameReadModel",
                    "description": "Gets or sets the name."
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the organization name.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "PatientPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "Get or set the patient photo."
                },
                "Status": {
                    "description": "Gets or sets the patient status.",
                    "enum": [
                        "Invited",
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "RoleBindingModel": {
            "description": "Model used for adding and removing roles",
            "required": [
                "Roles"
            ],
            "type": "object",
            "properties": {
                "Roles": {
                    "description": "Gets or sets the roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "InternalBulkPatientUpdateBindingModel": {
            "description": "Binding model for supporting bulk updating of patients internally.",
            "required": [
                "DistributorId",
                "SponsorId",
                "PatientIds"
            ],
            "type": "object",
            "properties": {
                "DistributorId": {
                    "format": "uuid",
                    "description": "The Distributor identifier",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "The Sponsor identifier",
                    "type": "string"
                },
                "PatientIds": {
                    "description": "List of the identifiers of the patients to be updated.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanIdsToAdd": {
                    "description": "List of the identifiers of the care plans to be added to each patient.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CarePlanIdsToRemove": {
                    "description": "List of the identifiers of the care plans to be removed from each patient.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CategoryIdsToAdd": {
                    "description": "List of the identifiers of the categories to be added to each patient.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CategoryIdsToRemove": {
                    "description": "List of the identifiers of the categories to be removed from each patient.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "The identifier of the organization patients should be associated with.",
                    "type": "string"
                }
            }
        },
        "AcceptInvitationBindingModel": {
            "description": "Model for accepting an invitation",
            "required": [
                "Password",
                "EmailAddress",
                "Sex",
                "BirthDate"
            ],
            "type": "object",
            "properties": {
                "Password": {
                    "description": "Gets or sets the password.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MUF]",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "Gets or sets the birth date.",
                    "type": "string"
                },
                "ActivationCode": {
                    "description": "Gets or sets the two factor activation code.",
                    "type": "string"
                }
            }
        },
        "PatientInvitationCreateBindingModel": {
            "description": "Binding model for creating a patient invitation",
            "required": [
                "EmailAddress",
                "FirstName",
                "TimeZoneId"
            ],
            "type": "object",
            "properties": {
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "Gets or sets the birth date.",
                    "type": "string"
                },
                "CarePlanId": {
                    "description": "Gets or sets a Care Plan identifier. This variable will only be populated if CarePlanIds is not.\r\n            This can also be both an internal OR external value for Patient IO.",
                    "type": "string"
                },
                "CarePlanIds": {
                    "description": "A list of Care Plan Ids. This can be both internal AND external to Patient IO.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CategoryId": {
                    "format": "uuid",
                    "description": "Gets or sets the category identifier. This variable will only be populated if CategoryIds is not.",
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "Gets or sets the category identifiers.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone number",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or set the middle name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier, a client assign id or code for a patient.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "ChannelTypes": {
                    "description": "Gets or sets a list of {Filament.Engagement.ValueTypes.ChannelType} to send the invitation over.  \r\n            Current supported channel types are Sms and Email.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Unknown",
                            "Push",
                            "App",
                            "Email",
                            "Sms",
                            "Api",
                            "Ivr",
                            "None",
                            "ChatBot"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "InvitationCodeViewModel": {
            "description": "Identifying and other information for a patient invitation.",
            "type": "object",
            "properties": {
                "InvitationCode": {
                    "description": "Gets or sets the invitation code.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                }
            }
        },
        "PatientInvitation": {
            "type": "object",
            "properties": {
                "Accepted": {
                    "description": "Gets or sets a value indicating whether this {Filament.Engagement.Entities.PatientInvitation} is accepted.",
                    "type": "boolean"
                },
                "AcceptedTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "If the invitation has been accepted, the time at which it was accepted.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "CarePlanId": {
                    "format": "uuid",
                    "description": "Gets or sets the care plan identifier.",
                    "type": "string"
                },
                "CarePlanIds": {
                    "description": "A list of Care Plan Ids. Will only be populated if CarePlanId is not.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CategoryId": {
                    "format": "uuid",
                    "description": "Gets or sets the category identifier.",
                    "type": "string"
                },
                "CategoryIds": {
                    "description": "A list of CategoryIds. Will only be populated if CategoryId is not",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "CreatedByUserId": {
                    "format": "uuid",
                    "description": "The UserId of the user who created the invitation",
                    "type": "string"
                },
                "CreatedBySponsorUserId": {
                    "description": "The sponsor user identifier of the inviting user.",
                    "type": "string"
                },
                "CreatedByUserName": {
                    "description": "UserName of creating user.",
                    "type": "string"
                },
                "CreatedDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The date and time at which an invitation was created",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "CreatedPatientId": {
                    "format": "uuid",
                    "description": "The patient id created from this invitation",
                    "type": "string"
                },
                "Country": {
                    "description": "Gets or sets the country",
                    "type": "string"
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "EmailAddress": {
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone",
                    "type": "string"
                },
                "InvitationCode": {
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix to a name.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix to a name.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "OrganizationName": {
                    "description": "Gets or sets the name of the organization to which the patient is to be \r\n            assigned.",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Sent": {
                    "type": "boolean"
                },
                "SentTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier, a client assign id or code for a patient.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "UserName": {
                    "description": "The created user name for the user",
                    "type": "string"
                },
                "ChannelTypes": {
                    "description": "The channel types to send the invitation through.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Unknown",
                            "Push",
                            "App",
                            "Email",
                            "Sms",
                            "Api",
                            "Ivr",
                            "None",
                            "ChatBot"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "KioskPatientInvitationCreateBindingModel": {
            "description": "Binding model for creating a patient invitation via the Kiosk - \r\n            the main thing that it does is support multiple categories and are plans.",
            "required": [
                "EmailAddress",
                "TimeZoneId"
            ],
            "type": "object",
            "properties": {
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "Gets or sets the birth date.",
                    "type": "string"
                },
                "CarePlanIds": {
                    "description": "Gets or sets the care plan identifiers.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CategoryIds": {
                    "description": "Gets or sets the category identifiers.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "Gets or sets the organization identifier.",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "description": "Gets or sets the sponsor patient identifier, a client assign id or code for a patient.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                }
            }
        },
        "ResendInvitationsBindingModel": {
            "description": "Describes invitation to send resend, and how to resend them",
            "type": "object",
            "properties": {
                "LastSentStartDate": {
                    "description": "Gets or sets the start date of the last sent date range\r\n            for which invitations should be sent.",
                    "type": "string"
                },
                "LastSentEndDate": {
                    "description": "Gets or sets the start date of the last sent date range\r\n            for which invitations should be sent.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "The timezone to use for converting the instant of last send in UTC\r\n            to a particular date",
                    "type": "string"
                },
                "InvitationCodes": {
                    "description": "List of Invitation codes to resend.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ChannelTypes": {
                    "description": "The list of channel types to send the invitation over.  \r\n            The current supported channel types include Sms and Email.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Unknown",
                            "Push",
                            "App",
                            "Email",
                            "Sms",
                            "Api",
                            "Ivr",
                            "None",
                            "ChatBot"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "PatientProfileDefinitionCreateBindingModel": {
            "description": "The model for initial creation of a new patient profile definition.",
            "required": [
                "Name",
                "Id"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "The name of the patient profile definition",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The Id of the patient profile definition",
                    "type": "string"
                },
                "AllowMultipleInstancesPerPatient": {
                    "description": "Whether or not there can be multiple instances of this definition per patient.",
                    "type": "boolean"
                }
            }
        },
        "ProfileDefinitionElementCreateBindingModel": {
            "description": "Model for creation of a new Element in a PatientProfileDefinition",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Code": {
                    "description": "Gets or sets the code.",
                    "type": "string"
                },
                "Category": {
                    "description": "The string to which the element's category is to be set.",
                    "type": "string"
                }
            }
        },
        "PatientProfileDefinitionEnhancedReadModel": {
            "description": "An ehanced version of the PatientProfileDefinitionReadModel - includes the name",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name of the PatientProfileDefinitionReadModel",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The Id of the profile definition. Identical to AggregateId",
                    "type": "string"
                },
                "AggregateId": {
                    "format": "uuid",
                    "description": "The Id of the profile definition. Identical to Id",
                    "type": "string",
                    "readOnly": true
                },
                "CreationDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time that the profile defintion was created",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "The Distributor ID that owns the patient profile definition.",
                    "type": "string"
                },
                "TagElements": {
                    "description": "The collection of available TagElements on the definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TagElementDefinition"
                    }
                },
                "TextElements": {
                    "description": "The collection of available TextElements on the definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TextElementDefinition"
                    }
                },
                "CodeCollections": {
                    "description": "The collection of available CodeCollection on the definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CodeCollectionDefinition"
                    }
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                },
                "AllowMultipleInstancesPerPatient": {
                    "description": "Whether or not there can be multiple instances of this definition per patient.",
                    "type": "boolean"
                }
            }
        },
        "TagElementDefinition": {
            "description": "Describes a TagElement within a PatientProfileDefinition. A TagElement allows the entry\r\n            of multiple arbitrary strings. It also includes a list of each individual string ever \r\n            entered for a given sponsor.",
            "type": "object",
            "properties": {
                "DefinedTagsBySponsor": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "Id": {
                    "format": "uuid",
                    "description": "The element's identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the element. Used for display, not for identification.",
                    "type": "string"
                },
                "Code": {
                    "description": "A code for the element. If the element should be mapped back to a code \r\n            in some other system, that identifying code value (describing the domain \r\n            of the element) should be entered here.",
                    "type": "string"
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                }
            }
        },
        "TextElementDefinition": {
            "description": "Defines a TextElement of a profile definition. A Text element allows the entry of \r\n            an arbitrary string.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The element's identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the element. Used for display, not for identification.",
                    "type": "string"
                },
                "Code": {
                    "description": "A code for the element. If the element should be mapped back to a code \r\n            in some other system, that identifying code value (describing the domain \r\n            of the element) should be entered here.",
                    "type": "string"
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                }
            }
        },
        "CodeCollectionDefinition": {
            "description": "Defines a CodeCollection in a profile definition. A CodeCollection element allows \r\n            the entry of codes, like an ICD-9 code.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The element's identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the element. Used for display, not for identification.",
                    "type": "string"
                },
                "Code": {
                    "description": "A code for the element. If the element should be mapped back to a code \r\n            in some other system, that identifying code value (describing the domain \r\n            of the element) should be entered here.",
                    "type": "string"
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                }
            }
        },
        "PatientProfileDefinitionElementCategoryBindingModel": {
            "description": "Allows setting the category on a PatientProfileDefinition element",
            "type": "object",
            "properties": {
                "Category": {
                    "description": "The string to which the elements category is to be set.",
                    "type": "string"
                }
            }
        },
        "CodeCollectionBindingModel": {
            "description": "Binding model for a collection of CodeElements.",
            "required": [
                "Codes"
            ],
            "type": "object",
            "properties": {
                "Codes": {
                    "description": "Gets or sets the codes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CodesBindingModel"
                    }
                }
            }
        },
        "CodesBindingModel": {
            "description": "Binding model for CodeElements.",
            "required": [
                "CodingScheme",
                "Code"
            ],
            "type": "object",
            "properties": {
                "CodingScheme": {
                    "description": "The coding scheme, e.g. ICD-9",
                    "type": "string"
                },
                "Code": {
                    "description": "The code, e.g. 787.02",
                    "type": "string"
                },
                "Description": {
                    "description": "The description, e.g. Nausea alone",
                    "type": "string"
                }
            }
        },
        "SetProfileTagElementBindingModel": {
            "description": "Allows the setting of tags on a profile tag element",
            "type": "object",
            "properties": {
                "Tags": {
                    "description": "Gets or sets the tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "FullPatientProfileViewModel": {
            "description": "View model for the full view of a patient's profile.",
            "type": "object",
            "properties": {
                "ProfileDefinitionInstances": {
                    "description": "A collection of the instances of the patient's profiles, organized\r\n            by definition identifier.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PatientProfileCollectionEnhancedReadModel"
                    }
                }
            }
        },
        "PatientProfileCollectionEnhancedReadModel": {
            "description": "PatientProfile response for a collection of PatientProfileEnhancedReadModel instances",
            "type": "object",
            "properties": {
                "Instances": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PatientProfileEnhancedReadModel"
                    }
                },
                "PatientId": {
                    "format": "uuid",
                    "description": "Gets or sets the patient identifier.",
                    "type": "string"
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "PatientProfileDefinitionId": {
                    "format": "uuid",
                    "description": "Gets or sets the patient profile definition identifier. This is the identifier \r\n            for the patient profile definition itself.",
                    "type": "string"
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                },
                "AllowMultipleInstances": {
                    "description": "True if the definition allows multiple instances per patient.",
                    "type": "boolean"
                }
            }
        },
        "PatientProfileEnhancedReadModel": {
            "description": "This class is designed to be returned to give a view of the PatientProfile\r\n            from the perspective of a patient, within the scope of a given sponsor.",
            "type": "object",
            "properties": {
                "Key": {
                    "description": "A string that uniquely identifies this particular instance amongst other instances\r\n            for this patient, sponsor, and patient profile definition.",
                    "type": "string"
                },
                "Title": {
                    "description": "The title of the element.",
                    "type": "string"
                },
                "Subtitle": {
                    "description": "The subtitle of the element.",
                    "type": "string"
                },
                "TagElements": {
                    "description": "The collection of tag elements defined within the patient profile definition,\r\n            and the patient's particular values for those elements.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TagElementReadModel"
                    }
                },
                "TextElements": {
                    "description": "The collection of text elements defined within the patient profile definition,\r\n            and the patient's particular values for those elements.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TextElementReadModel"
                    }
                },
                "CodeCollections": {
                    "description": "The collection of code collections defined within the patient profile \r\n            definition, and the pateint's particular values for those elements.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CodeCollectionReadModel"
                    }
                },
                "PatientId": {
                    "format": "uuid",
                    "description": "Gets or sets the patient identifier.",
                    "type": "string"
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "PatientProfileDefinitionId": {
                    "format": "uuid",
                    "description": "Gets or sets the patient profile definition identifier. This is the identifier \r\n            for the patient profile definition itself.",
                    "type": "string"
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                },
                "AllowMultipleInstances": {
                    "description": "True if the definition allows multiple instances per patient.",
                    "type": "boolean"
                }
            }
        },
        "TagElementReadModel": {
            "type": "object",
            "properties": {
                "SponsorTags": {
                    "description": "A set of sponsor specific tags for the TagElement. These are values\r\n            that have previously been entered by other users in the context of the \r\n            sponsor, that should be used as valid \"choices\" for tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Tags": {
                    "description": "The tags previously entered by the user.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                },
                "Code": {
                    "description": "A code for the element. If the element should be mapped back to a code \r\n            in some other system, that identifying code value \r\n            (describing the domain of the element) should be entered here.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The element's identifier.",
                    "type": "string"
                },
                "LastUpdated": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The UTC time that the element was last changed by a user.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Name": {
                    "description": "The name of the element. Used for display, not for identification.",
                    "type": "string"
                }
            }
        },
        "TextElementReadModel": {
            "type": "object",
            "properties": {
                "Text": {
                    "description": "User entered text.",
                    "type": "string"
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                },
                "Code": {
                    "description": "A code for the element. If the element should be mapped back to a code \r\n            in some other system, that identifying code value \r\n            (describing the domain of the element) should be entered here.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The element's identifier.",
                    "type": "string"
                },
                "LastUpdated": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The UTC time that the element was last changed by a user.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Name": {
                    "description": "The name of the element. Used for display, not for identification.",
                    "type": "string"
                }
            }
        },
        "CodeCollectionReadModel": {
            "type": "object",
            "properties": {
                "Codes": {
                    "description": "The codes for this element.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CodeReadModel"
                    }
                },
                "Category": {
                    "description": "A string describing a category into which the element can be grouped.\r\n            The intent is to allow identification of elements that should be clustered\r\n            together in some fashion, visually or otherwise.",
                    "type": "string"
                },
                "Code": {
                    "description": "A code for the element. If the element should be mapped back to a code \r\n            in some other system, that identifying code value \r\n            (describing the domain of the element) should be entered here.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The element's identifier.",
                    "type": "string"
                },
                "LastUpdated": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The UTC time that the element was last changed by a user.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Name": {
                    "description": "The name of the element. Used for display, not for identification.",
                    "type": "string"
                }
            }
        },
        "CodeReadModel": {
            "type": "object",
            "properties": {
                "CodingScheme": {
                    "description": "The coding scheme, e.g. ICD-9",
                    "type": "string"
                },
                "Code": {
                    "description": "The code, e.g. 787.02",
                    "type": "string"
                },
                "Description": {
                    "description": "The description, e.g. Nausea alone",
                    "type": "string"
                }
            }
        },
        "UpdateSponsorPatientProfileBindingModel": {
            "description": "The model which makes it possible to set the state for a \r\n            patient's profile, within a particular sponsor context, for a particular patient",
            "type": "object",
            "properties": {
                "TagElements": {
                    "description": "A collection of tag elements to be updated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TagElementUpdateBindingModel"
                    }
                },
                "TextElements": {
                    "description": "A collection of text elements to be updated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TextElementUpdateBindingModel"
                    }
                }
            }
        },
        "TagElementUpdateBindingModel": {
            "description": "Allows for updating the data against a single tag element binding model",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Tags": {
                    "description": "Gets or sets the tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TextElementUpdateBindingModel": {
            "description": "Allows for updating the data against a single text element binding model",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Text": {
                    "description": "Gets or sets the text.",
                    "type": "string"
                }
            }
        },
        "UpdateSponsorPatientProfileInstanceLinkText": {
            "description": "Binding model for setting the link text of a particular instance of a sponsor\r\n            patient profile.",
            "type": "object",
            "properties": {
                "Title": {
                    "description": "The title of the element.",
                    "type": "string"
                },
                "Subtitle": {
                    "description": "The subtitle of the element.",
                    "type": "string"
                }
            }
        },
        "AppointmentCancelBindingModel": {
            "description": "Model for cancellation of a patient appointment",
            "required": [
                "AppointmentDateTime",
                "CancellationDateTime",
                "SponsorId"
            ],
            "type": "object",
            "properties": {
                "AppointmentDateTime": {
                    "description": "Date and time of appointment being cancelled \r\n            in user's local time e.g. \"2014-01-30T18:00:00\"",
                    "type": "string"
                },
                "CancellationDateTime": {
                    "description": "Date and time that cancellation took place\r\n            in user's local time e.g. \"2014-01-30T18:00:00\"",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Sponsor Id related to the appointment",
                    "type": "string"
                }
            }
        },
        "AppointmentCreateBindingModel": {
            "description": "Model for creating an appointment for a user.",
            "required": [
                "AppointmentDateTime",
                "SponsorId"
            ],
            "type": "object",
            "properties": {
                "AppointmentDateTime": {
                    "description": "Time of appointment, e.g. \"2014-01-30T18:00:00\"",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                }
            }
        },
        "AppointmentUpdateBindingModel": {
            "description": "Class AppointmentUpdateBindingModel.",
            "required": [
                "OldAppointmentDateTime",
                "NewAppointmentDateTime",
                "SponsorId"
            ],
            "type": "object",
            "properties": {
                "OldAppointmentDateTime": {
                    "description": "Gets or sets the old appointment date time.",
                    "type": "string"
                },
                "NewAppointmentDateTime": {
                    "description": "Gets or sets the new appointment date time.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                }
            }
        },
        "MeasurementBindingModel": {
            "description": "Submits the measurement associated with a SheduledTask",
            "type": "object",
            "properties": {
                "MeasurementDateTime": {
                    "description": "The client side date and time of the measurement, in the current local time of the patient; YYYY-MM-DDThh:mm:ss format.",
                    "type": "string"
                },
                "MeasurementData": {
                    "description": "The measurement data; must conformed to the required measurement formatting of the task.",
                    "type": "string"
                },
                "Source": {
                    "description": "A source value from which the measurement data was captured, e.g. iOS. Arbitrary strings can be used.",
                    "type": "string"
                },
                "State": {
                    "description": "Set the state of the scheduled tasks.",
                    "enum": [
                        "NoResult",
                        "CompletedSuccessfully",
                        "CompletedUnsuccessfully",
                        "InProgress",
                        "Deferred"
                    ],
                    "type": "string"
                },
                "Notes": {
                    "description": "Patient supplied notes associated with the task.",
                    "type": "string"
                }
            }
        },
        "RecordedMeasurementData": {
            "description": "The measurement data and measurement id from a measurement.",
            "type": "object",
            "properties": {
                "ScheduledTaskId": {
                    "format": "uuid",
                    "description": "The scheduled task identifier.",
                    "type": "string",
                    "readOnly": true
                },
                "MeasurementId": {
                    "format": "uuid",
                    "description": "The measurement identifier.",
                    "type": "string",
                    "readOnly": true
                },
                "MeasurementData": {
                    "description": "The measurement data.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "PatientScheduleViewModel": {
            "description": "A patient's schedule of tasks, grouped by the day on which the tasks where assigned.",
            "type": "object",
            "properties": {
                "Days": {
                    "description": "The collection of days of care for a patient.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DayOfCareViewModel"
                    }
                }
            }
        },
        "DayOfCareViewModel": {
            "description": "Model for a single day of care for a patient.",
            "type": "object",
            "properties": {
                "Date": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "ScheduledTasks": {
                    "description": "Gets or sets the scheduled tasks.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledTaskViewModel"
                    }
                },
                "Surveys": {
                    "description": "A dictionary of surveys and the scheduled tasks associated to the surveys.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ScheduledSurveyViewModel"
                    }
                },
                "SignaledAlerts": {
                    "description": "A collection of the alert signals for this patient for this day of care.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SignaledAlertViewModel"
                    }
                }
            }
        },
        "ScheduledTaskViewModel": {
            "description": "View model for a Patient's scheduled task",
            "type": "object",
            "properties": {
                "CarePlanId": {
                    "format": "uuid",
                    "description": "Gets or sets the care plan identifier.",
                    "type": "string",
                    "readOnly": true
                },
                "CarePlanIds": {
                    "description": "Gets or sets the care plan identifiers.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "CausedAlert": {
                    "description": "Gets or sets a value indicating whether [the scheduled task caused an alert].",
                    "type": "boolean"
                },
                "Codes": {
                    "description": "A collection of codes that describe the task assigned",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MedicalCode"
                    }
                },
                "GoalNumber": {
                    "description": "Gets or sets the goal number.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "MeasurementDomain": {
                    "description": "Gets or sets the measurement domain.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MeasurementUnits": {
                    "description": "Gets or sets the measurement units.",
                    "type": "string"
                },
                "Note": {
                    "description": "Gets or sets the note.",
                    "type": "string"
                },
                "Outcome": {
                    "$ref": "#/definitions/MeasurementViewModel",
                    "description": "Gets or sets the outcome."
                },
                "RolesAllowedToRecordOutcome": {
                    "description": "Gets or sets the role required to record the outcome of the task.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ScheduledTime": {
                    "format": "HH':'mm':'ss;FFFFFFFFF",
                    "description": "Gets or sets the scheduled time.",
                    "type": "string",
                    "example": "11:53:00"
                },
                "ScheduledTimePeriod": {
                    "description": "An arbitrary time period like \"Morning\" or \"Before Dinner\"",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorTaskId": {
                    "description": "Gets or sets the sponsor task identifier.",
                    "type": "string"
                },
                "SurveyInformation": {
                    "$ref": "#/definitions/SurveyNodeInformation",
                    "description": "If this scheduled task is associated with a survey, contains \r\n            information that allows the patient's response to be evaluated\r\n            and the correct next node identified. If not associated with a survey\r\n            this should be null."
                },
                "TaskContentUri": {
                    "description": "Gets or sets the task content URI.",
                    "type": "string"
                },
                "TaskContentUriRequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether the task content URI requires the addition\r\n            of a Patient IO authentication token in order for access to succeed.",
                    "type": "boolean"
                },
                "TaskCost": {
                    "format": "double",
                    "description": "Gets or sets the task cost.",
                    "type": "number"
                },
                "TaskDuration": {
                    "format": "int32",
                    "description": "Gets or sets the duration of the task.",
                    "type": "integer"
                },
                "TaskId": {
                    "format": "uuid",
                    "description": "Gets or sets the task identifier.",
                    "type": "string"
                },
                "TaskName": {
                    "description": "Gets or sets the name of the task.",
                    "type": "string"
                },
                "TaskDescription": {
                    "description": "Gets or sets the task description.",
                    "type": "string"
                },
                "TaskTags": {
                    "description": "Gets or sets the task tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TypeOfMeasurement": {
                    "description": "Gets or sets the type of measurement.",
                    "type": "string"
                }
            }
        },
        "ScheduledSurveyViewModel": {
            "description": "View model for patient's scheduled surveys.",
            "type": "object",
            "properties": {
                "SurveyId": {
                    "format": "uuid",
                    "description": "The Id of the survey",
                    "type": "string"
                },
                "SurveyName": {
                    "description": "The name of the survey",
                    "type": "string"
                },
                "SurveyScheduledTasks": {
                    "description": "The scheduled tasks scheduled for the survey",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledTaskViewModel"
                    }
                },
                "TaskScheduleId": {
                    "format": "uuid",
                    "description": "Gets or sets the task schedule identifier.",
                    "type": "string"
                },
                "RolesAllowedToRecordOutcome": {
                    "description": "Gets or sets the roles allowed to record outcomes for this survey.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SponsorSurveyId": {
                    "description": "The sponsor survey id",
                    "type": "string"
                }
            }
        },
        "MeasurementViewModel": {
            "description": "Model for viewing measurements of a ScheduledTask.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "TaskId": {
                    "format": "uuid",
                    "description": "Gets or sets the task identifier.",
                    "type": "string"
                },
                "MeasurementDateTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF",
                    "description": "Gets or sets the measurement date time.",
                    "type": "string",
                    "example": "1986-07-19T11:53:00"
                },
                "MeasurementData": {
                    "description": "Gets or sets the measurement data.",
                    "type": "string"
                },
                "NonPatientRecordingUserId": {
                    "format": "uuid",
                    "description": "If someone other than the patient records the outcome, the ID of the user.",
                    "type": "string"
                },
                "NonPatientRecordingUserActorKind": {
                    "description": "Indicates what kind of actor (user, patient, etc.)\r\n            that is not the patient, recorded the outcome",
                    "enum": [
                        "Patient",
                        "User",
                        "Organization"
                    ],
                    "type": "string"
                },
                "NonPatientRecordingUserSponsorId": {
                    "description": "If the sponsor supplied an id for the non-patient recording user,\r\n            the id supplied.",
                    "type": "string"
                },
                "NonPatientRecordingUserFirstName": {
                    "description": "Gets the first name of the non patient recording user.",
                    "type": "string"
                },
                "NonPatientRecordingUserLastName": {
                    "description": "Gets the last name of the non patient recording user.",
                    "type": "string"
                },
                "Source": {
                    "description": "Gets or sets the source.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "enum": [
                        "NoResult",
                        "CompletedSuccessfully",
                        "CompletedUnsuccessfully",
                        "InProgress",
                        "Deferred"
                    ],
                    "type": "string"
                },
                "Notes": {
                    "description": "Gets or sets the notes.",
                    "type": "string"
                }
            }
        },
        "SurveyNodeInformation": {
            "description": "Encapsulates information about a particular node within a survey.",
            "type": "object",
            "properties": {
                "SurveyId": {
                    "format": "uuid",
                    "description": "The Id of the Survey that owns this node.",
                    "type": "string"
                },
                "BranchData": {
                    "$ref": "#/definitions/BranchInfo",
                    "description": "Information about the individual survey node; in particular\r\n            the Id of this survey node, and the information that makes\r\n            it possible to determine which node id follows this node."
                },
                "SponsorSurveyId": {
                    "description": "Gets or sets the survey's sponsor survey identifier.",
                    "type": "string"
                }
            }
        },
        "BranchInfo": {
            "description": "Information about a particular node/question of survey.",
            "type": "object",
            "properties": {
                "BranchingTaskId": {
                    "format": "uuid",
                    "description": "The identifier of this particular node in the survey. These nodes\r\n            survey as the Ids of the nodes for purposes of building the overall\r\n            survey graph.",
                    "type": "string"
                },
                "TaskId": {
                    "format": "uuid",
                    "description": "The TaskId associated with this node. Within a\r\n            scheduled task, this should correspond to the TaskId \r\n            on the scheduled task.",
                    "type": "string"
                },
                "NextBranchConditions": {
                    "description": "A collection which indicates the rules for assessing the \r\n            patients response to this Task, and where the survey should go next.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchCondition"
                    }
                },
                "IsHead": {
                    "description": "Whether or not this particular survey node is the \"head\" of a tree within the survey.",
                    "type": "boolean"
                }
            }
        },
        "BranchCondition": {
            "description": "Information for determining which node is next in a survey.  Includes a condition and \r\n            a BranchingTaskId indicating the next node in a survey.",
            "type": "object",
            "properties": {
                "Condition": {
                    "$ref": "#/definitions/Condition",
                    "description": "The condition.  If met, the ID of the next node of the survey is this object's \r\n            BranchingTaskId."
                },
                "BranchingTaskId": {
                    "format": "uuid",
                    "description": "The ID of a BranchingTask of the next node in a survey.  Null if the survey is \r\n            complete and has no more nodes.",
                    "type": "string"
                }
            }
        },
        "Condition": {
            "description": "A condition to be used in evaluating a patient's response.",
            "type": "object",
            "properties": {
                "Operator": {
                    "description": "the rule to be applied to the patient's response, as the condition's values.",
                    "enum": [
                        "Default",
                        "Equals",
                        "Contains"
                    ],
                    "type": "string"
                },
                "Values": {
                    "description": "The condition values to be used in conjunction with the patient's response\r\n            in order to conclude that the condition is true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SponsorEngagementOrAdherenceWithCarePlanViewModel": {
            "description": "A view model for the EngagementOrAdherenceAverages by care plan report.",
            "type": "object",
            "properties": {
                "CarePlans": {
                    "description": "Gets or sets the care plans.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CarePlanWithAveragesViewModel"
                    }
                }
            }
        },
        "CarePlanWithAveragesViewModel": {
            "description": "A view model for the care plan with EngagementOrAdherenceAverages report.",
            "type": "object",
            "properties": {
                "CarePlanName": {
                    "description": "Gets the name of the care plan.",
                    "type": "string",
                    "readOnly": true
                },
                "Average": {
                    "description": "Gets the average.",
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "readOnly": true
                },
                "YYYYMM": {
                    "description": "Gets the YYYYMM.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "readOnly": true
                }
            }
        },
        "OrganizationEngagementRatioViewModel": {
            "description": "A view model for the Organization Engagement Ratio.",
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data for Care Team Organization Engagement",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CareTeamEngagementModel"
                    }
                },
                "OrganizationName": {
                    "description": "Name of the Organization",
                    "type": "string"
                }
            }
        },
        "CareTeamEngagementModel": {
            "description": "Care Team Organization Engagement model",
            "type": "object",
            "properties": {
                "ActiveUserCount": {
                    "format": "int32",
                    "description": "Total count.",
                    "type": "integer"
                },
                "EngagedUserCount": {
                    "format": "int32",
                    "description": "Actual engaged user count.",
                    "type": "integer"
                },
                "Ratio": {
                    "format": "double",
                    "description": "Engagement ratio.",
                    "type": "number"
                },
                "YearMonthDate": {
                    "description": "YYYY-MM for the ratio model",
                    "type": "string"
                }
            }
        },
        "OrganizationSessionRatioViewModel": {
            "description": "Organization Session Ratio View Model",
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/definitions/CareTeamSession",
                    "description": "Oganization session data."
                },
                "OrganizationName": {
                    "description": "Organization name.",
                    "type": "string"
                }
            }
        },
        "CareTeamSession": {
            "description": "Care Team Organization Session",
            "type": "object",
            "properties": {
                "SessionRatio": {
                    "format": "double",
                    "description": "Session ratio.",
                    "type": "number"
                },
                "TotalPossibleLogins": {
                    "format": "int32",
                    "description": "Session denominator.",
                    "type": "integer"
                },
                "TotalUserLogins": {
                    "format": "int32",
                    "description": "Session numerator.",
                    "type": "integer"
                }
            }
        },
        "SponsorEngagementRatioViewModel": {
            "description": "A view model for the Sponsor Engagement Ratio.",
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data for Care Team Organization Engagement",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CareTeamEngagementModel"
                    }
                },
                "SponsorName": {
                    "description": "Name of the Sponsor",
                    "type": "string"
                }
            }
        },
        "SponsorSessionRatioViewModel": {
            "description": "Sponsor session ratio view model",
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/definitions/CareTeamSession",
                    "description": "Care Team Sponsor session statistics"
                },
                "SponsorName": {
                    "description": "Sponsor name.",
                    "type": "string"
                }
            }
        },
        "PatientChannelPercentagesViewModel": {
            "description": "A view model for the PatientChannelPercentages report.",
            "type": "object",
            "properties": {
                "Android": {
                    "format": "double",
                    "description": "Gets or sets the android average.",
                    "type": "number"
                },
                "AndroidPush": {
                    "format": "double",
                    "description": "Gets or sets the android push average.",
                    "type": "number"
                },
                "Apple": {
                    "format": "double",
                    "description": "Gets or sets the apple average.",
                    "type": "number"
                },
                "ApplePush": {
                    "format": "double",
                    "description": "Gets or sets the apple push average.",
                    "type": "number"
                },
                "Desktop": {
                    "format": "double",
                    "description": "Gets or sets the desktop average.",
                    "type": "number"
                },
                "Email": {
                    "format": "double",
                    "description": "Gets or sets the email average.",
                    "type": "number"
                }
            }
        },
        "PatientDemographicsReport": {
            "type": "object",
            "properties": {
                "Gender": {
                    "$ref": "#/definitions/PatientSexCountsReport"
                },
                "Age": {
                    "$ref": "#/definitions/PatientAgeCountsReport"
                }
            }
        },
        "PatientSexCountsReport": {
            "type": "object",
            "properties": {
                "MaleCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "FemaleCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "UnknownCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PatientAgeCountsReport": {
            "type": "object",
            "properties": {
                "Range0": {
                    "format": "int32",
                    "type": "integer"
                },
                "Range1": {
                    "format": "int32",
                    "type": "integer"
                },
                "Range2": {
                    "format": "int32",
                    "type": "integer"
                },
                "Range3": {
                    "format": "int32",
                    "type": "integer"
                },
                "Range4": {
                    "format": "int32",
                    "type": "integer"
                },
                "Range5": {
                    "format": "int32",
                    "type": "integer"
                },
                "Range6": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PatientInvitationReport": {
            "type": "object",
            "properties": {
                "Count": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SponsorEngagementOrAdherenceViewModel": {
            "description": "A view model for the EngagementOrAdherenceAverages report.",
            "type": "object",
            "properties": {
                "Engagement": {
                    "$ref": "#/definitions/AveragesViewModel",
                    "description": "Gets or sets the engagement."
                },
                "Adherence": {
                    "$ref": "#/definitions/AveragesViewModel",
                    "description": "Gets or sets the adherence."
                },
                "WithoutTasks": {
                    "$ref": "#/definitions/AveragesViewModel",
                    "description": "Gets or sets the without tasks."
                }
            }
        },
        "AveragesViewModel": {
            "description": "A view model for the EngagementOrAdherenceAverages report.",
            "type": "object",
            "properties": {
                "Average": {
                    "description": "Gets the average.",
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "YYYYMM": {
                    "description": "Gets or sets the yyyymm.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "PatientOnboardingCountsReport": {
            "type": "object",
            "properties": {
                "Categories": {
                    "type": "array",
                    "items": {
                        "format": "uuuu'-'MM'-'dd",
                        "type": "string",
                        "example": "1986-07-19"
                    }
                },
                "InvitesSent": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Activated": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "Pending": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "SharedCareListItemViewModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "type": "string"
                },
                "Name": {
                    "$ref": "#/definitions/INameReadModel"
                },
                "OrganizationName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "Relationships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedCareRelationshipViewModel"
                    }
                }
            }
        },
        "INameReadModel": {
            "type": "object",
            "properties": {
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "MiddleName": {
                    "type": "string"
                },
                "Prefix": {
                    "type": "string"
                },
                "Suffix": {
                    "type": "string"
                }
            }
        },
        "SharedCareRelationshipViewModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "SponsorPatientId": {
                    "type": "string"
                },
                "Name": {
                    "$ref": "#/definitions/INameReadModel"
                },
                "OrganizationName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "Relationship": {
                    "enum": [
                        "Spouse",
                        "SignificantOther",
                        "Grandparent",
                        "Grandchild",
                        "Mother",
                        "Father",
                        "Child",
                        "Employee",
                        "Coworker",
                        "Other"
                    ],
                    "type": "string"
                },
                "Permissions": {
                    "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "type": "string"
                }
            }
        },
        "SharedCareInvitationAcceptBindingModel": {
            "description": "Model for accepting an invitation",
            "required": [
                "Password",
                "EmailAddressAcceptedWith",
                "FirstName",
                "LastName",
                "MobilePhone",
                "Sex",
                "TimeZoneId",
                "BirthDate",
                "Relationship"
            ],
            "type": "object",
            "properties": {
                "Password": {
                    "description": "Gets or sets the password.",
                    "type": "string"
                },
                "EmailAddressAcceptedWith": {
                    "description": "Gets or sets the email address being used to accept the shared care invitation",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix to a name.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix to a name.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MUF]",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "Gets or sets the birth date.",
                    "type": "string"
                },
                "Relationship": {
                    "description": "Gets or sets the relationship.",
                    "enum": [
                        "Spouse",
                        "SignificantOther",
                        "Grandparent",
                        "Grandchild",
                        "Mother",
                        "Father",
                        "Child",
                        "Employee",
                        "Coworker",
                        "Other"
                    ],
                    "type": "string"
                }
            }
        },
        "SharedCarePermissionsBindingModel": {
            "description": "Binds the model of permissions for patient's shared care",
            "required": [
                "Permission"
            ],
            "type": "object",
            "properties": {
                "Permission": {
                    "description": "Gets or sets the permission.",
                    "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "type": "string"
                }
            }
        },
        "SharedCareInvitation": {
            "description": "An invitation to share care.",
            "type": "object",
            "properties": {
                "Accepted": {
                    "description": "Gets or sets a value indicating whether this {Filament.Engagement.Entities.SharedCareInvitation} is accepted.",
                    "type": "boolean"
                },
                "AcceptedTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Gets or sets the accepted time.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "EmailAddressAcceptedWith": {
                    "description": "Gets or sets the email address accepted with.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "InvitingPatientId": {
                    "format": "uuid",
                    "description": "Gets or sets the inviting patient identifier.",
                    "type": "string"
                },
                "InvitationCode": {
                    "description": "Gets or sets the invitation code.",
                    "type": "string"
                },
                "IsExistingPatient": {
                    "description": "Gets or sets a value indicating whether this instance is existing patient.",
                    "type": "boolean"
                },
                "Permission": {
                    "description": "Gets or sets the permission.",
                    "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "type": "string"
                },
                "ReceivingPatientId": {
                    "format": "uuid",
                    "description": "Gets or sets the receiving patient identifier.",
                    "type": "string"
                },
                "Relationship": {
                    "description": "Gets or sets the relationship.",
                    "enum": [
                        "Spouse",
                        "SignificantOther",
                        "Grandparent",
                        "Grandchild",
                        "Mother",
                        "Father",
                        "Child",
                        "Employee",
                        "Coworker",
                        "Other"
                    ],
                    "type": "string"
                },
                "SentTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Gets or sets the sent time.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix of the name.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix of the name.",
                    "type": "string"
                },
                "Address1": {
                    "description": "Gets or sets the address 1",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address 2",
                    "type": "string"
                },
                "City": {
                    "description": "Gets or sets the city",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code",
                    "type": "string"
                },
                "Country": {
                    "description": "Gets or sets the country",
                    "type": "string"
                }
            }
        },
        "SharedCareInvitationCreateBindingModel": {
            "description": "Binding model for creating a shared care invitation",
            "required": [
                "EmailAddress",
                "Relationship",
                "Permission"
            ],
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "Relationship": {
                    "description": "Gets or sets the relationship.",
                    "enum": [
                        "Spouse",
                        "SignificantOther",
                        "Grandparent",
                        "Grandchild",
                        "Mother",
                        "Father",
                        "Child",
                        "Employee",
                        "Coworker",
                        "Other"
                    ],
                    "type": "string"
                },
                "Permission": {
                    "description": "Gets or sets the permission.",
                    "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "type": "string"
                }
            }
        },
        "SharedCareInvitationCodeViewModel": {
            "description": "Identifying and other information for a shared care invitation.",
            "type": "object",
            "properties": {
                "InvitationCode": {
                    "description": "Gets or sets the invitation code.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "PatientId": {
                    "format": "uuid",
                    "description": "Gets or sets the patient identifier.",
                    "type": "string"
                }
            }
        },
        "OrganizationSettingsBindingModel": {
            "description": "Model that allows modification of organization level settings.",
            "required": [
                "Settings"
            ],
            "type": "object",
            "properties": {
                "Settings": {
                    "description": "The collection of settings and their new values",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "SponsorOrganizationIdBindingModel": {
            "description": "Model for updating SponsorOrganizationId",
            "type": "object",
            "properties": {
                "SponsorOrganizationId": {
                    "description": "Gets or sets the sponsor organization identifier.",
                    "type": "string"
                }
            }
        },
        "SponsorSettingsBindingModel": {
            "description": "Model that covers various settings that can be modified.",
            "type": "object",
            "properties": {
                "Settings": {
                    "description": "The collection of settings and their new values",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "SponsorSecretsBindingModel": {
            "description": "Model for containing various sposor secrets, like API keys.",
            "type": "object",
            "properties": {
                "SecretName": {
                    "description": "The name of the secret.",
                    "type": "string"
                },
                "SecretValue": {
                    "description": "The value of the secret.",
                    "type": "string"
                }
            }
        },
        "SponsorSecretsViewModel": {
            "description": "View model for Sponsor Secrets",
            "type": "object",
            "properties": {
                "Secrets": {
                    "$ref": "#/definitions/SponsorSecrets",
                    "description": "The collection of sponsorSecrets."
                }
            }
        },
        "SponsorSecrets": {
            "type": "object",
            "properties": {
                "CampaignMonitorApiKey": {
                    "type": "string"
                },
                "MandrillApiKey": {
                    "type": "string"
                },
                "CampaignMonitorClientId": {
                    "type": "string"
                },
                "AzureNotificationHubName": {
                    "type": "string"
                },
                "AzureNotificationHubConnectionString": {
                    "type": "string"
                },
                "TwilioAccountSid": {
                    "type": "string"
                },
                "TwilioAuthToken": {
                    "type": "string"
                },
                "TwilioProgrammableVideoSid": {
                    "type": "string"
                },
                "TwilioProgrammableVideoSecret": {
                    "type": "string"
                }
            }
        },
        "OrganizationCreateBindingModel": {
            "description": "Model for creating an organization",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "SponsorOrganizationId": {
                    "description": "Gets or sets the SponsorOrganizationId, a sponsor defined and supplied\r\n            organization identifier.",
                    "type": "string"
                }
            }
        },
        "OrganizationReadModel": {
            "type": "object",
            "properties": {
                "BusinessAddress": {
                    "$ref": "#/definitions/Address"
                },
                "Contact": {
                    "$ref": "#/definitions/DigitalContactInformation"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "OrganizationPhoto": {
                    "$ref": "#/definitions/ImageReadModel"
                },
                "PatientCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "SponsorOrganizationId": {
                    "type": "string"
                },
                "TelephoneNumbers": {
                    "type": "object",
                    "properties": {
                        "Business": {
                            "$ref": "#/definitions/TelephoneNumber"
                        },
                        "Mobile": {
                            "$ref": "#/definitions/TelephoneNumber"
                        },
                        "Personal": {
                            "$ref": "#/definitions/TelephoneNumber"
                        }
                    }
                },
                "UserCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "Branding": {
                    "$ref": "#/definitions/BrandingReadModel"
                },
                "BrandingLogoUrl": {
                    "type": "string",
                    "readOnly": true
                },
                "BrandingEmailLogoUrl": {
                    "type": "string",
                    "readOnly": true
                },
                "Settings": {
                    "$ref": "#/definitions/OrganizationSettings",
                    "description": "The collection of organization specific settings.",
                    "readOnly": true
                }
            }
        },
        "BrandingReadModel": {
            "description": "Class BrandingReadModel.",
            "type": "object",
            "properties": {
                "Logo": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or sets the logo."
                },
                "EmailLogo": {
                    "$ref": "#/definitions/ImageReadModel",
                    "description": "Gets or set the email logo."
                },
                "PrimaryColor": {
                    "description": "Gets or sets the color of the primary.",
                    "type": "string"
                },
                "SecondaryColor": {
                    "description": "Gets or sets the color of the secondary.",
                    "type": "string"
                },
                "TertiaryColor": {
                    "description": "Gets or sets the color of the tertiary.",
                    "type": "string"
                }
            }
        },
        "SponsorCounterViewModel": {
            "description": "View Model for Sponsor Counters",
            "type": "object",
            "properties": {
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "UserCount": {
                    "format": "int32",
                    "description": "Gets or sets the user count.",
                    "type": "integer"
                },
                "PatientCount": {
                    "format": "int32",
                    "description": "Gets or sets the patient count.",
                    "type": "integer"
                },
                "ActivationCount": {
                    "format": "int32",
                    "description": "Gets or sets the activation count.",
                    "type": "integer"
                },
                "DeactivationCount": {
                    "format": "int32",
                    "description": "Gets or sets the deactivation count.",
                    "type": "integer"
                },
                "PatientsLoggedInCount": {
                    "format": "int32",
                    "description": "Gets or sets the patients logged in count.",
                    "type": "integer"
                },
                "CarePlanUtilization": {
                    "description": "Gets or sets the care plan utilization.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "OrganizationDescriptionBindingModel": {
            "description": "Used for updating organization description",
            "type": "object",
            "properties": {
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                }
            }
        },
        "DigitalContactInformationBindingModel": {
            "description": "DigitalContactInformationBindingModel.",
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "WebsiteUrl": {
                    "description": "Gets or sets the website URL.",
                    "type": "string"
                },
                "Twitter": {
                    "description": "Gets or sets the twitter.",
                    "type": "string"
                }
            }
        },
        "OrganizationNameBindingModel": {
            "description": "Used to update an organization name",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                }
            }
        },
        "TelephoneBindingModel": {
            "description": "Binding Model for submitting a telephone number",
            "required": [
                "Number"
            ],
            "type": "object",
            "properties": {
                "CountryCode": {
                    "description": "Gets or sets the country code.",
                    "pattern": "[0-9]*",
                    "type": "string"
                },
                "Number": {
                    "description": "Gets or sets the number.",
                    "pattern": "[0-9]*",
                    "type": "string"
                }
            }
        },
        "PhoneBindingModel": {
            "description": "Simple, general purpose binding model containing a phone number.",
            "required": [
                "PhoneNumber"
            ],
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "description": "A valid phone number.",
                    "type": "string"
                }
            }
        },
        "WebHookCreateBindingModel": {
            "description": "Binding model used to support the creation of web hooks.",
            "required": [
                "EventName",
                "Verb",
                "ExternalUri",
                "PayloadType"
            ],
            "type": "object",
            "properties": {
                "EventName": {
                    "description": "The event for which we will set the web hook",
                    "enum": [
                        "SponsorPatientIdAppliedToPatient",
                        "PatientAddedToRepository",
                        "AlertSignaledForScheduledTask",
                        "MeasurementRecorded",
                        "MessageSent",
                        "MessageReceived",
                        "ConversationStatusSet",
                        "PatientCompletedSurvey"
                    ],
                    "type": "string"
                },
                "Verb": {
                    "description": "The verb to use for the External Uri",
                    "enum": [
                        "Get",
                        "Post",
                        "Put",
                        "Delete",
                        "Head",
                        "Patch",
                        "Options"
                    ],
                    "type": "string"
                },
                "ExternalUri": {
                    "description": "The absolute URI to which the webhook should communicate.\r\n            The structure of which can be made with an ever expanding set of tokens to provide flexibilty\r\n            to you external URI. Currently we support 2 tokens for an external patient identifier (sponsorPatientId)\r\n            as we as a custom facility name (facility). Those tokens can be placed with in the URI string by\r\n            surrounding them with {...}. An example would be: \"https://www.test.com/fhir/{facility}/{sponsorPatientId}/\".\r\n            In this way, Patient IO will replace the tokens with the stored data within the application for a facility and\r\n            an external patient identifier.",
                    "type": "string"
                },
                "PayloadType": {
                    "description": "The payload type for the web hook",
                    "enum": [
                        "PatientIo",
                        "Fhir"
                    ],
                    "type": "string"
                },
                "AuthorizationUri": {
                    "description": "The absolute URI to the OAuth 2.0 endpoint.",
                    "type": "string"
                },
                "GrantType": {
                    "description": "The OAuth 2.0 grant type.",
                    "enum": [
                        "ClientCredentials",
                        "Password"
                    ],
                    "type": "string"
                },
                "UserName": {
                    "description": "The username or client ID.",
                    "type": "string"
                },
                "Password": {
                    "description": "The password or client secret.",
                    "type": "string"
                }
            }
        },
        "WebHookUpdateBindingModel": {
            "description": "Binding model used to support the update of an existing web hook.",
            "required": [
                "EventName",
                "Verb",
                "ExternalUri",
                "PayloadType"
            ],
            "type": "object",
            "properties": {
                "EventName": {
                    "description": "The event for which we will set the web hook",
                    "enum": [
                        "SponsorPatientIdAppliedToPatient",
                        "PatientAddedToRepository",
                        "AlertSignaledForScheduledTask",
                        "MeasurementRecorded",
                        "MessageSent",
                        "MessageReceived",
                        "ConversationStatusSet",
                        "PatientCompletedSurvey"
                    ],
                    "type": "string"
                },
                "Verb": {
                    "description": "The verb to use for the External Uri",
                    "enum": [
                        "Get",
                        "Post",
                        "Put",
                        "Delete",
                        "Head",
                        "Patch",
                        "Options"
                    ],
                    "type": "string"
                },
                "ExternalUri": {
                    "description": "The absolute URI to which the webhook should communicate",
                    "type": "string"
                },
                "PayloadType": {
                    "description": "The payload type for the web hook",
                    "enum": [
                        "PatientIo",
                        "Fhir"
                    ],
                    "type": "string"
                }
            }
        },
        "WebHookAuthorizationUpdateBindingModel": {
            "description": "Binding model used to configure the authorization for a web hook.",
            "type": "object",
            "properties": {
                "Ids": {
                    "description": "The identifiers of the webhooks to update.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "AuthorizationUri": {
                    "description": "The absolute URI to the OAuth 2.0 endpoint.",
                    "type": "string"
                },
                "GrantType": {
                    "description": "The OAuth 2.0 grant type.  Currently only \"client_credentials\" and \"password\" are supported.",
                    "enum": [
                        "ClientCredentials",
                        "Password"
                    ],
                    "type": "string"
                },
                "UserName": {
                    "description": "The username or client ID.",
                    "type": "string"
                },
                "Password": {
                    "description": "The password or client secret.",
                    "type": "string"
                }
            }
        },
        "SurveyCreateBindingModel": {
            "description": "Binding model to support survey creation",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "BranchingTasks": {
                    "description": "Gets or sets the survey's branches.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchingTaskCreateBindingModel"
                    }
                },
                "State": {
                    "description": "Gets or sets the survey's state.",
                    "enum": [
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                },
                "SponsorSurveyId": {
                    "description": "Gets or sets the survey's sponsor survey identifier.",
                    "type": "string"
                }
            }
        },
        "BranchingTaskCreateBindingModel": {
            "description": "Binding model for BranchingTasks",
            "type": "object",
            "properties": {
                "TaskId": {
                    "format": "uuid",
                    "description": "Gets or sets the TaskId",
                    "type": "string"
                },
                "BranchConditions": {
                    "description": "Gets or sets the BranchConditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConditionTaskCollectionBindingModel"
                    }
                }
            }
        },
        "ConditionTaskCollectionBindingModel": {
            "description": "Binding model for ConditionTaskCollections",
            "type": "object",
            "properties": {
                "Condition": {
                    "$ref": "#/definitions/Condition",
                    "description": "Gets or sets the {Filament.API.Models.Entities.ConditionTaskCollectionBindingModel.Condition}"
                },
                "BranchingTasks": {
                    "description": "Gets or sets the BranchingTaskBindingModels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchingTaskCreateBindingModel"
                    }
                }
            }
        },
        "SurveyReadModel": {
            "type": "object",
            "properties": {
                "AggregateId": {
                    "format": "uuid",
                    "description": "The survey identifier.",
                    "type": "string",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "The survey identifier.",
                    "type": "string"
                },
                "Version": {
                    "format": "int32",
                    "description": "The incremental survey version.",
                    "type": "integer"
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "The distributor identifier.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "The sponsor identifier.",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the survey.",
                    "type": "string"
                },
                "State": {
                    "description": "The state of the survey.",
                    "enum": [
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                },
                "SponsorSurveyId": {
                    "description": "The survey's sponsor survey identifier.",
                    "type": "string"
                },
                "BranchingTasks": {
                    "description": "The branching tasks of the survey.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchingTask"
                    }
                },
                "OwnerAggregateId": {
                    "format": "uuid",
                    "description": "The Owning aggregate Id",
                    "type": "string",
                    "readOnly": true
                },
                "OwningAggregateType": {
                    "description": "The owning aggregate type.",
                    "enum": [
                        "Distributor",
                        "Sponsor",
                        "Patient"
                    ],
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "BranchingTask": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "TaskId": {
                    "format": "uuid",
                    "type": "string"
                },
                "BranchConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConditionTaskCollection"
                    }
                }
            }
        },
        "ConditionTaskCollection": {
            "type": "object",
            "properties": {
                "Condition": {
                    "$ref": "#/definitions/Condition"
                },
                "BranchingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchingTask"
                    }
                }
            }
        },
        "SurveyBranchesBindingModel": {
            "description": "Binding model to support survey branch updates",
            "required": [
                "BranchingTasks",
                "Version"
            ],
            "type": "object",
            "properties": {
                "BranchingTasks": {
                    "description": "Gets or sets the survey's branches.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BranchingTask"
                    }
                },
                "Version": {
                    "format": "int32",
                    "description": "Gets or sets the version of the survey.",
                    "type": "integer"
                }
            }
        },
        "SurveyStateBindingModel": {
            "description": "Binding model to support updating survey state",
            "type": "object",
            "properties": {
                "State": {
                    "description": "Gets or sets the state.",
                    "enum": [
                        "Activated",
                        "Deactivated"
                    ],
                    "type": "string"
                }
            }
        },
        "SurveySponsorSurveyIdBindingModel": {
            "description": "The survey sponsorSurveyId binding model",
            "type": "object",
            "properties": {
                "SponsorSurveyId": {
                    "description": "The Sponsor Survey Id",
                    "type": "string"
                }
            }
        },
        "TagListBindingModel": {
            "description": "A list of tags for a task",
            "type": "object",
            "properties": {
                "Tags": {
                    "description": "Gets or sets the tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskContentBindingModel": {
            "description": "Model for setting the uri for task content",
            "type": "object",
            "properties": {
                "ContentUri": {
                    "description": "Gets or sets the content URI.",
                    "type": "string"
                },
                "ContentUriRequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether content URI requires authentication,\r\n            which means that the Patient IO auth token must be passed.",
                    "type": "boolean"
                }
            }
        },
        "TaskDeactivatedStateBindingModel": {
            "description": "Used to Deactivate or activate a task",
            "type": "object",
            "properties": {
                "ShouldBeDeactivated": {
                    "description": "Gets or sets a value indicating whether [should be deactivated].",
                    "type": "boolean"
                }
            }
        },
        "TaskDescriptionBindingModel": {
            "description": "Model for changing a Task description",
            "type": "object",
            "properties": {
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                }
            }
        },
        "TaskMeasurementBindingModel": {
            "description": "Holds the information necessary for updating the measurement\r\n            component of a Task",
            "type": "object",
            "properties": {
                "GoalNumber": {
                    "format": "double",
                    "description": "Gets the goal number.",
                    "type": "number",
                    "readOnly": true
                },
                "MeasurementDomain": {
                    "description": "Gets the measurement domain.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "MeasurementUnits": {
                    "description": "Gets the measurement units.",
                    "type": "string",
                    "readOnly": true
                },
                "OwningAggregateId": {
                    "format": "uuid",
                    "description": "Gets the owning aggregate identifier.",
                    "type": "string",
                    "readOnly": true
                },
                "TypeOfMeasurement": {
                    "description": "Gets the type of measurement.",
                    "enum": [
                        "Boolean",
                        "String",
                        "Date",
                        "DateTime",
                        "MultipleChoiceSingle",
                        "MultipleChoiceMultiple",
                        "Numeric",
                        "NumericWithGoal",
                        "Appointment",
                        "Checklist",
                        "Signature",
                        "Interval",
                        "Photo"
                    ],
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TaskCodesBindingModel": {
            "description": "Model for setting the codes for a task",
            "type": "object",
            "properties": {
                "Codes": {
                    "description": "The Medical codes to be assigned to the task",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MedicalCode"
                    }
                }
            }
        },
        "SponsorTaskIdBindingModel": {
            "description": "Model for changing a Task SponsorId",
            "type": "object",
            "properties": {
                "SponsorTaskId": {
                    "description": "Gets or sets the sponsor task identifier.",
                    "type": "string"
                }
            }
        },
        "TaskCreateBindingModel": {
            "description": "Model for submitting task information",
            "required": [
                "Name",
                "TypeOfMeasurement"
            ],
            "type": "object",
            "properties": {
                "Cost": {
                    "format": "double",
                    "description": "Gets or sets the task cost.",
                    "type": "number"
                },
                "Duration": {
                    "format": "int32",
                    "description": "A Sponsor assigned duration number. Can mean anything the Sponsor wants.",
                    "type": "integer"
                },
                "GoalNumber": {
                    "format": "double",
                    "description": "Gets or sets the goal number - goal number is primarily informational indicating \r\n            what the goal for the task is.",
                    "type": "number"
                },
                "MeasurementDomain": {
                    "description": "The measurement domain indicates the unique values which are valid as responses.\r\n            Only applies to measurement types the support constrained responses, not boolean\r\n            or numeric.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MeasurementUnits": {
                    "description": "If a measurement unit modifies the response, this specifies the units.",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the task",
                    "type": "string"
                },
                "SponsorTaskId": {
                    "description": "A Sponsor assigned identifier/code for the task",
                    "type": "string"
                },
                "TaskContentUri": {
                    "description": "If content is associated to the task, its URI can be specified here.",
                    "type": "string"
                },
                "TaskContentUriRequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether task content URI requires authentication,\r\n            that is, whether the Patient IO auth token must be supplied.",
                    "type": "boolean"
                },
                "TaskDescription": {
                    "description": "Gets or sets the task description.",
                    "type": "string"
                },
                "TaskTags": {
                    "description": "Any tags assigned to the Task (tags must have been created previously.)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TypeOfMeasurement": {
                    "description": "Gets or sets the type of measurement.",
                    "enum": [
                        "Boolean",
                        "String",
                        "Date",
                        "DateTime",
                        "MultipleChoiceSingle",
                        "MultipleChoiceMultiple",
                        "Numeric",
                        "NumericWithGoal",
                        "Appointment",
                        "Checklist",
                        "Signature",
                        "Interval",
                        "Photo"
                    ],
                    "type": "string"
                },
                "Codes": {
                    "description": "An optional collection of medical codes which describe the task.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MedicalCode"
                    }
                },
                "PatientAssignable": {
                    "description": "Gets or sets the patient assignable flag.",
                    "type": "boolean"
                }
            }
        },
        "CreateTaskAlertBindingModel": {
            "description": "Create Task Alert Binding Model",
            "required": [
                "TaskAlert"
            ],
            "type": "object",
            "properties": {
                "TaskAlert": {
                    "$ref": "#/definitions/TaskAlert",
                    "description": "Gets or sets the task alert."
                }
            }
        },
        "TaskUpdateBindingModel": {
            "description": "Model for updating task information",
            "required": [
                "Name",
                "TypeOfMeasurement"
            ],
            "type": "object",
            "properties": {
                "Duration": {
                    "format": "int32",
                    "description": "A Sponsor assigned duration number. Can mean anything the Sponsor wants.",
                    "type": "integer"
                },
                "GoalNumber": {
                    "format": "double",
                    "description": "Gets or sets the goal number.",
                    "type": "number"
                },
                "MeasurementDomain": {
                    "description": "Gets or sets the measurement domain.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MeasurementUnits": {
                    "description": "Gets or sets the measurement units.",
                    "type": "string"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "SponsorTaskId": {
                    "description": "A Sponsor assigned identifier/code for the task",
                    "type": "string"
                },
                "Cost": {
                    "format": "double",
                    "description": "Gets or sets the task cost.",
                    "type": "number"
                },
                "TaskContentUri": {
                    "description": "Gets or sets the task content URI.",
                    "type": "string"
                },
                "TaskContentUriRequiresAuthentication": {
                    "description": "Gets or sets a value indicating whether task content URI requires authentication,\r\n            which means that the Patient IO auth token must be passed.",
                    "type": "boolean"
                },
                "TaskTags": {
                    "description": "Any tags assigned to the Task (must exist previously)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TaskDescription": {
                    "description": "Gets or sets the task description.",
                    "type": "string"
                },
                "TypeOfMeasurement": {
                    "description": "Gets or sets the type of measurement.",
                    "enum": [
                        "Boolean",
                        "String",
                        "Date",
                        "DateTime",
                        "MultipleChoiceSingle",
                        "MultipleChoiceMultiple",
                        "Numeric",
                        "NumericWithGoal",
                        "Appointment",
                        "Checklist",
                        "Signature",
                        "Interval",
                        "Photo"
                    ],
                    "type": "string"
                },
                "Codes": {
                    "description": "Codes describing the Tasks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MedicalCode"
                    }
                },
                "PatientAssignable": {
                    "description": "Gets or sets the patient assignable flag.",
                    "type": "boolean"
                }
            }
        },
        "UpdateTaskAlertBindingModel": {
            "description": "Update Task Alert Binding Model",
            "required": [
                "TaskAlert"
            ],
            "type": "object",
            "properties": {
                "TaskAlert": {
                    "$ref": "#/definitions/TaskAlert",
                    "description": "Gets or sets the task alert."
                }
            }
        },
        "TreatmentTaskScheduleItemBindingModel": {
            "description": "A TreatmentTaskScheduleItem is a schedule that causes a Task to appear in a list of\r\n            a patients ScheduledTasks by virtue of its positioning relative to the then-closest \r\n            patient appointment. That it, allows scheduling a Task to appear in the patient's\r\n            schedule \"3 days before\" or \"2 days after\" the appointment.",
            "type": "object",
            "properties": {
                "DaysRelativeToNextTreatment": {
                    "format": "int32",
                    "description": "The number of days before (negative numbers) or after (positive numbers) the associated\r\n            Task should be scheduled. Slightly mis-named, in the sense that this refers to the days\r\n            relative to the closest appointment, not merely the \"next\" appointment.",
                    "type": "integer"
                },
                "ScheduledTime": {
                    "description": "The scheduled time - in the patients local time in hh:mm:ss form at which the \r\n            patient should be told to perform the task.",
                    "type": "string"
                },
                "ScheduledTimePeriod": {
                    "description": "The scheduled time period at which the task should be performed. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                    "type": "string"
                }
            }
        },
        "UpdateTaskScheduleItemBindingModel": {
            "description": "Used for updating elements of task schedule Items for \r\n            which updates are allowed.",
            "type": "object",
            "properties": {
                "ScheduledTime": {
                    "format": "HH':'mm':'ss;FFFFFFFFF",
                    "description": "Gets or sets the scheduled time of the task",
                    "type": "string",
                    "example": "11:53:00"
                },
                "ScheduledTimePeriod": {
                    "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                    "type": "string"
                }
            }
        },
        "UntilCompleteTaskScheduleItemBindingModel": {
            "description": "Binding model for updating or creating an UntilCompleteTaskScheduleItem",
            "type": "object",
            "properties": {
                "ExpirationPeriodUnits": {
                    "description": "Gets or sets the expiration period units, which indicates the number of periods \r\n            until the task will stop being assigned to a patient, commencing from when the care plan with which this item is associated\r\n            is assigned to the patient.",
                    "enum": [
                        "None",
                        "Years",
                        "Months",
                        "Weeks",
                        "Days",
                        "AllDateUnits",
                        "YearMonthDay",
                        "Hours",
                        "Minutes",
                        "Seconds",
                        "Milliseconds",
                        "Ticks",
                        "Nanoseconds",
                        "HourMinuteSecond",
                        "AllTimeUnits",
                        "DateAndTime",
                        "AllUnits"
                    ],
                    "type": "string"
                },
                "RepetitionPeriod": {
                    "description": "Indicates the repetition period for the item, if the item is to repeat.",
                    "enum": [
                        "Once",
                        "Year",
                        "Month",
                        "Week",
                        "Day"
                    ],
                    "type": "string"
                },
                "StartPeriodUnits": {
                    "description": "Gets or sets the type of period units to use in calculating when the item should begin to be assigned to a patient.",
                    "enum": [
                        "None",
                        "Years",
                        "Months",
                        "Weeks",
                        "Days",
                        "AllDateUnits",
                        "YearMonthDay",
                        "Hours",
                        "Minutes",
                        "Seconds",
                        "Milliseconds",
                        "Ticks",
                        "Nanoseconds",
                        "HourMinuteSecond",
                        "AllTimeUnits",
                        "DateAndTime",
                        "AllUnits"
                    ],
                    "type": "string"
                },
                "ExpirationDate": {
                    "description": "Sets an expiration date. Exclusive with expiration period units - only 1 can be set.",
                    "type": "string"
                },
                "ExpirationNumberOfPeriods": {
                    "format": "int32",
                    "description": "Optionally, sets the number of periods until the item will stop being assigned to a patient.",
                    "type": "integer"
                },
                "RepetitionInterval": {
                    "format": "int32",
                    "description": "Gets or sets the number of periods at which the item is to repeat. If the item is \r\n            to repeat, and the RepetitionPeriod is monthly, then, two months after the items\r\n            initial scheduling, the item will appear again.",
                    "type": "integer"
                },
                "StartDate": {
                    "description": "Optionally sets the absolute date on which the item begins.",
                    "type": "string"
                },
                "StartNumberOfPeriods": {
                    "format": "int32",
                    "description": "Gets or sets the start number of periods, which indicates the number of periods \r\n            until the task begins, commencing from when the care plan with which this item is associated\r\n            is assigned to the patient.",
                    "type": "integer"
                }
            }
        },
        "WeeklyTaskScheduleItemBindingModel": {
            "description": "Binding model for updating or creating a WeeklyTaskScheduleItem. These items are designed\r\n            to cause a particular Task to be scheduled for a particular day of the week.",
            "type": "object",
            "properties": {
                "DayOfWeek": {
                    "description": "The day of the week for which a task is to appear.",
                    "enum": [
                        "None",
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ],
                    "type": "string"
                },
                "ScheduledTime": {
                    "format": "HH':'mm':'ss;FFFFFFFFF",
                    "description": "A time for which the task is to be scheduled. (HH-mm-ss)",
                    "type": "string",
                    "example": "11:53:00"
                },
                "StartType": {
                    "description": "Indicates under what circumstances a task should begin to be scheduled for a patient.",
                    "enum": [
                        "OnScheduleStart",
                        "OnInitialTreatment"
                    ],
                    "type": "string"
                },
                "StopType": {
                    "description": "Indicates under what circumstances the Task should cease to be scheduled for the patient.",
                    "enum": [
                        "NoStop",
                        "OnInitialTreatment"
                    ],
                    "type": "string"
                },
                "ScheduledTimePeriod": {
                    "description": "Gets or sets the scheduled time period. An arbitrary\r\n            time period like \"Morning\" or \"Before Breakfast\"",
                    "type": "string"
                }
            }
        },
        "TaskScheduleBindingModel": {
            "description": "Used for creating a schedule for a TaskId. TreatmentTaskScheduleItems, WeeklyTaskScheduleItems, and UntilCompleteTaskScheduleItems are optional. \r\n            If none of these collections are supplied, a TaskSchedule is created, and TaskScheduleItems may be added later. \r\n            TreatmentTaskScheduleItems, WeeklyTaskScheduleItems, and UntilCompleteTaskScheduleItems are mutually exclusive - only one type of TaskScheduleItem may be\r\n            supplied to a TaskSchedule.",
            "required": [
                "TaskClass",
                "TaskId"
            ],
            "type": "object",
            "properties": {
                "Note": {
                    "description": "A note attached to the TaskSchedule.",
                    "type": "string"
                },
                "TaskClass": {
                    "description": "The kind of Task being scheduled. Serves to determine what category of TaskId is being supplied by the caller.",
                    "enum": [
                        "Standard",
                        "Survey"
                    ],
                    "type": "string"
                },
                "TaskId": {
                    "format": "uuid",
                    "description": "The Id of the Task to be scheduled for a patient. Only one TaskSchedule with a given TaskId may be created within a given care plan.",
                    "type": "string"
                },
                "TreatmentTaskScheduleItems": {
                    "description": "Collection of TreatmentTaskScheduleItems.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreatmentTaskScheduleItemBindingModel"
                    }
                },
                "WeeklyTaskScheduleItems": {
                    "description": "Collection of WeeklyTaskScheduleItems.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WeeklyTaskScheduleItemBindingModel"
                    }
                },
                "UntilCompleteTaskScheduleItems": {
                    "description": "Collection of UntilCompleteTaskScheduleItems.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UntilCompleteTaskScheduleItemBindingModel"
                    }
                },
                "Target": {
                    "format": "double",
                    "description": "The target for the task.",
                    "type": "number"
                },
                "RolesAllowedToRecordOutcome": {
                    "description": "Gets or sets the RolesAllowedToRecordOutcome.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskScheduleUpdateBindingModel": {
            "description": "The purpose of this binding model is to update the NOTE on\r\n            a Task Schedule. It should probably have a different name\r\n            but we currently care bound by the limits of Swagger.",
            "type": "object",
            "properties": {
                "Note": {
                    "description": "Gets or sets the note.",
                    "type": "string"
                }
            }
        },
        "TaskScheduleTargetUpdateBindingModel": {
            "description": "Binding model for updates to a Task Schedule's Target attribute.",
            "type": "object",
            "properties": {
                "Target": {
                    "format": "double",
                    "description": "Gets or sets the target.",
                    "type": "number"
                }
            }
        },
        "TaskScheduleRolesAllowedToRecordOutcomeUpdateBindingModel": {
            "description": "Binding model for updates to a Task Schedule's RolesAllowedToRecordOutcome attribute.",
            "required": [
                "RolesAllowedToRecordOutcome"
            ],
            "type": "object",
            "properties": {
                "RolesAllowedToRecordOutcome": {
                    "description": "Gets or sets the RolesAllowedToRecordOutcome.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskScheduleIsDeactivatedBindingModel": {
            "description": "Binding model for updating the Task Schedule's IsDeactivated attribute.",
            "required": [
                "IsDeactivated"
            ],
            "type": "object",
            "properties": {
                "IsDeactivated": {
                    "description": "The desired state of the Task Schedule's IsDeactivated attribute.",
                    "type": "boolean"
                }
            }
        },
        "TimeCardRecordCreateBindingModel": {
            "description": "Allows updating the time a particular time card action took place",
            "required": [
                "PatientId",
                "TimeCardActions"
            ],
            "type": "object",
            "properties": {
                "PatientId": {
                    "description": "The patient id whose current record is being updated",
                    "type": "string"
                },
                "TimeCardActions": {
                    "description": "The action to update",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeCardActionCreateBindingModel"
                    }
                }
            }
        },
        "TimeCardActionCreateBindingModel": {
            "description": "Container for data about how a time card action for a patient should\r\n            be updated.",
            "required": [
                "ActionType"
            ],
            "type": "object",
            "properties": {
                "ActionType": {
                    "description": "The desired action",
                    "enum": [
                        "Checkin",
                        "Checkout"
                    ],
                    "type": "string"
                },
                "Latitude": {
                    "format": "double",
                    "description": "If available, the latitude at which the checkin took place",
                    "type": "number"
                },
                "LocationAccuracyMeters": {
                    "format": "double",
                    "description": "If available, the location accuracy of the geolocation",
                    "type": "number"
                },
                "Longitude": {
                    "format": "double",
                    "description": "If available, the longitude at which the checkin took place",
                    "type": "number"
                },
                "ActionTime": {
                    "description": "The time at which the action is to have taken place",
                    "type": "string"
                },
                "SignatureImageDataUri": {
                    "description": "Signature if the time card entry is being signed.",
                    "type": "string"
                },
                "Note": {
                    "description": "A Note associated with the action",
                    "type": "string"
                }
            }
        },
        "TimeCardUpdateResponse": {
            "description": "Contains information about updates to a timecard",
            "type": "object",
            "properties": {
                "ActionType": {
                    "description": "The action which happened",
                    "enum": [
                        "Checkin",
                        "Checkout",
                        "UpdateState"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The Id of the timecard",
                    "type": "string"
                }
            }
        },
        "TimeCardRecordViewModel": {
            "description": "A single record of a time card, encapsulating time in and time out actions.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "The id of the time card record.",
                    "type": "string"
                },
                "TimeIn": {
                    "$ref": "#/definitions/TimeCardActionViewModel",
                    "description": "Information about the time in action. Null if it has not occurred."
                },
                "TimeOut": {
                    "$ref": "#/definitions/TimeCardActionViewModel",
                    "description": "Information about the time out action. Null if it has not occurred."
                },
                "User": {
                    "$ref": "#/definitions/ActorReadModel",
                    "description": "The User responsible for this time."
                },
                "Patient": {
                    "$ref": "#/definitions/ActorReadModel",
                    "description": "The Patient to whom this time card applies"
                }
            }
        },
        "TimeCardActionViewModel": {
            "description": "Describes a single time card action (time in or time out)",
            "type": "object",
            "properties": {
                "Latitude": {
                    "format": "double",
                    "description": "If available, the latitude at which the checkin took place.",
                    "type": "number"
                },
                "LocationAccuracyMeters": {
                    "format": "double",
                    "description": "If available, the location accuracy of the geolocation.",
                    "type": "number"
                },
                "Longitude": {
                    "format": "double",
                    "description": "If avaialble, the longitude at which the checkin took place.",
                    "type": "number"
                },
                "ActionTime": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "Date and time at which the action took place.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "Note": {
                    "description": "Any notes associated with the action",
                    "type": "string"
                },
                "SignatureUri": {
                    "description": "If a signature has been supplied, the URI of the signature",
                    "type": "string"
                }
            }
        },
        "CurrentTimeCardActionBindingModel": {
            "description": "Container for data aobut how the user's current time card\r\n            for a patient should be updated.",
            "required": [
                "PatientId",
                "ActionType"
            ],
            "type": "object",
            "properties": {
                "PatientId": {
                    "description": "The patient id whose current record is being updated",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The desired action",
                    "enum": [
                        "Checkin",
                        "Checkout",
                        "UpdateState"
                    ],
                    "type": "string"
                },
                "Latitude": {
                    "format": "double",
                    "description": "If available, the latitude at which the checkin took place",
                    "type": "number"
                },
                "LocationAccuracyMeters": {
                    "format": "double",
                    "description": "If available, the location accuracy of the geolocation",
                    "type": "number"
                },
                "Longitude": {
                    "format": "double",
                    "description": "If available, the longitude at which the checkin took place",
                    "type": "number"
                },
                "SignatureImageDataUri": {
                    "description": "Signature if the time card entry is being signed.",
                    "type": "string"
                },
                "Note": {
                    "description": "A Note associated with the action",
                    "type": "string"
                }
            }
        },
        "TimeCardRecordUpdateBindingModel": {
            "description": "Allows updating the time a particular time card action took place",
            "required": [
                "PatientId",
                "TimeCardAction"
            ],
            "type": "object",
            "properties": {
                "PatientId": {
                    "format": "uuid",
                    "description": "The patient id whose current record is being updated",
                    "type": "string"
                },
                "TimeCardAction": {
                    "$ref": "#/definitions/TimeCardActionUpdateBindingModel",
                    "description": "The action to update"
                }
            }
        },
        "TimeCardActionUpdateBindingModel": {
            "description": "Container for data about how a time card action for a patient should\r\n            be updated.",
            "required": [
                "ActionType"
            ],
            "type": "object",
            "properties": {
                "ActionType": {
                    "description": "The desired action",
                    "enum": [
                        "Checkin",
                        "Checkout"
                    ],
                    "type": "string"
                },
                "Latitude": {
                    "format": "double",
                    "description": "If available, the latitude at which the checkin took place",
                    "type": "number"
                },
                "LocationAccuracyMeters": {
                    "format": "double",
                    "description": "If available, the location accuracy of the geolocation",
                    "type": "number"
                },
                "Longitude": {
                    "format": "double",
                    "description": "If available, the longitude at which the checkin took place",
                    "type": "number"
                },
                "UpdatedActionTime": {
                    "description": "The time at which the action is to have taken place",
                    "type": "string"
                },
                "Note": {
                    "description": "A Note associated with the action",
                    "type": "string"
                }
            }
        },
        "UserSettingsBindingModel": {
            "description": "Model that covers various patient modifiable settings.",
            "type": "object",
            "properties": {
                "NotifyOfAlerts": {
                    "description": "Gets or sets a value indicating whether [notify of alerts].",
                    "type": "boolean"
                },
                "AllowableDirectMessaging": {
                    "description": "Indicates whether or not direct messaging is allowed, and by whom",
                    "enum": [
                        "ByNone",
                        "ByInOrganization"
                    ],
                    "type": "string"
                },
                "NewDirectMessageNotification": {
                    "description": "How should the user be notified of new messages, if at all?",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Email",
                            "Push"
                        ],
                        "type": "string"
                    }
                },
                "NewOrganizationMessageNotification": {
                    "description": "How should the user be notified of new organization messages, if at all",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Email",
                            "Push"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "UserCreateBindingModel": {
            "description": "Model for creating a new user.",
            "required": [
                "FirstName",
                "LastName",
                "MobilePhone",
                "Password",
                "Roles",
                "TimeZoneId",
                "UserName"
            ],
            "type": "object",
            "properties": {
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "Biography": {
                    "description": "Gets or sets the biography.",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "Gets or sets the birth date.",
                    "type": "string"
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "CompanyName": {
                    "description": "Gets or sets the name of the company.",
                    "type": "string"
                },
                "Country": {
                    "description": "Gets or sets the country.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix to a name.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix to a name.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "OrganizationIds": {
                    "description": "The organization(s) to which the user belongs.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "Password": {
                    "description": "Gets or sets the password.",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Roles": {
                    "description": "Gets or sets the roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MF]",
                    "type": "string"
                },
                "SponsorUserId": {
                    "description": "Gets or sets the sponsor user identifier.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "UserName": {
                    "description": "Gets or sets the name of the user.",
                    "type": "string"
                }
            }
        },
        "UserCreatedViewModel": {
            "description": "Returns information about the user that has been created",
            "type": "object",
            "properties": {
                "UserName": {
                    "description": "Gets or sets the name of the user.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Roles": {
                    "description": "Gets or sets the roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DistributorUserListViewModel": {
            "description": "List of user's affiliated with a distributor",
            "type": "object",
            "properties": {
                "DistributorId": {
                    "format": "uuid",
                    "description": "Gets or sets the distributor identifier.",
                    "type": "string"
                },
                "Users": {
                    "description": "Gets or sets the users within the distributor list.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/UserViewModel"
                    }
                }
            }
        },
        "UserUpdateBindingModel": {
            "description": "Model for creating a new user.",
            "required": [
                "BirthDate",
                "FirstName",
                "LastName",
                "MobilePhone",
                "Sex",
                "SponsorId",
                "UserName"
            ],
            "type": "object",
            "properties": {
                "Address1": {
                    "description": "Gets or sets the address1.",
                    "type": "string"
                },
                "Address2": {
                    "description": "Gets or sets the address2.",
                    "type": "string"
                },
                "Biography": {
                    "description": "Gets or sets the biography.",
                    "type": "string"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "Gets or sets the birth date.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "City": {
                    "description": "Gets or sets the city.",
                    "type": "string"
                },
                "CompanyName": {
                    "description": "Gets or sets the name of the company.",
                    "type": "string"
                },
                "Country": {
                    "description": "Gets or sets the country.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "Gets or sets the home phone.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "NewUserName": {
                    "description": "If the user name is to be changed, set this\r\n            property with the new name of the user.",
                    "type": "string"
                },
                "OrganizationId": {
                    "format": "uuid",
                    "description": "The organization to which the user belongs",
                    "type": "string"
                },
                "PostalCode": {
                    "description": "Gets or sets the postal code.",
                    "type": "string"
                },
                "Sex": {
                    "description": "Gets or sets the sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MF]",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "SponsorUserId": {
                    "description": "Gets or sets the sponsor user identifier.",
                    "type": "string"
                },
                "State": {
                    "description": "Gets or sets the state.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "Gets or sets the time zone identifier.",
                    "type": "string"
                },
                "UserName": {
                    "description": "Gets or sets the name of the user.",
                    "type": "string"
                }
            }
        },
        "SponsorUserListViewModel": {
            "description": "List of user's affiliated with a sponsor",
            "type": "object",
            "properties": {
                "SponsorId": {
                    "format": "uuid",
                    "description": "Gets or sets the sponsor identifier.",
                    "type": "string"
                },
                "Users": {
                    "description": "Gets or sets the users within the distributor list.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/UserViewModel"
                    }
                }
            }
        },
        "UserAcceptInvitationBindingModel": {
            "description": "The user invitation acceptance binding model",
            "required": [
                "EmailAddress",
                "Password"
            ],
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "description": "The email address.",
                    "type": "string"
                },
                "Sex": {
                    "description": "The sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MF]",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "The birthdate.",
                    "type": "string"
                },
                "Password": {
                    "description": "The user's password.",
                    "type": "string"
                },
                "ActivationCode": {
                    "description": "Gets or sets the two factor activation code.",
                    "type": "string"
                }
            }
        },
        "UserCreateInvitationBindingModel": {
            "description": "The user invitation creation binding model.",
            "required": [
                "Name",
                "MobilePhone",
                "EmailAddress",
                "TimeZoneId",
                "Roles",
                "ChannelTypes"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/definitions/FullNameBindingModel",
                    "description": "The name binding model."
                },
                "Address": {
                    "$ref": "#/definitions/AddressBindingModel",
                    "description": "The address binding model."
                },
                "MobilePhone": {
                    "description": "The mobile phone.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "The home phone.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "The email address.",
                    "type": "string"
                },
                "Sex": {
                    "description": "The sex.",
                    "maxLength": 1,
                    "minLength": 0,
                    "pattern": "[MF]",
                    "type": "string"
                },
                "BirthDate": {
                    "description": "The birthdate.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "The time zone.",
                    "type": "string"
                },
                "Biography": {
                    "description": "The biography.",
                    "type": "string"
                },
                "SponsorUserId": {
                    "description": "The sponsor user id.",
                    "type": "string"
                },
                "OrganizationIds": {
                    "description": "The organization ids.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "Roles": {
                    "description": "The roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ChannelTypes": {
                    "description": "The channel types to send an invitation through.  \r\n            Current support channel types are Sms and Email.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Unknown",
                            "Push",
                            "App",
                            "Email",
                            "Sms",
                            "Api",
                            "Ivr",
                            "None",
                            "ChatBot"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "UserInvitationCreateViewModel": {
            "description": "The user invitation creation view model.",
            "type": "object",
            "properties": {
                "UserName": {
                    "description": "Gets or sets the name of the user.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string"
                },
                "Roles": {
                    "description": "Gets or sets the roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "InvitationCode": {
                    "description": "Gets or sets the invitation code.",
                    "type": "string"
                }
            }
        },
        "UserStatusViewModel": {
            "description": "The user status view model",
            "type": "object",
            "properties": {
                "InvitedByUserId": {
                    "format": "uuid",
                    "description": "The identifier of the inviting user.",
                    "type": "string"
                },
                "InvitedBySponsorUserId": {
                    "description": "The sponsor user identifier of the inviting user.",
                    "type": "string"
                },
                "InvitedByUserName": {
                    "$ref": "#/definitions/NameViewModel",
                    "description": "The name of the inviting user."
                },
                "InvitationSentDate": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The invitation sent date.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "InvitationAcceptedDate": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The invitation accepted date.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "InvitationCode": {
                    "description": "The invitation code.",
                    "type": "string"
                },
                "DistributorId": {
                    "format": "uuid",
                    "description": "The distributor identifier.",
                    "type": "string"
                },
                "SponsorId": {
                    "format": "uuid",
                    "description": "The sponsor identifier.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "The identifier (UserId).",
                    "type": "string"
                },
                "BirthDate": {
                    "format": "uuuu'-'MM'-'dd",
                    "description": "The birthdate.",
                    "type": "string",
                    "example": "1986-07-19"
                },
                "EmailAddress": {
                    "description": "The email address.",
                    "type": "string"
                },
                "HomePhone": {
                    "description": "The home phone.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "The mobile phone.",
                    "type": "string"
                },
                "Name": {
                    "$ref": "#/definitions/NameViewModel",
                    "description": "The name view model."
                },
                "Organizations": {
                    "description": "The organizations.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "Roles": {
                    "description": "The roles.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Sex": {
                    "description": "The sex.",
                    "type": "string"
                },
                "SponsorUserId": {
                    "description": "The sponsor user identifier.",
                    "type": "string"
                },
                "TimeZoneId": {
                    "description": "The time zone.",
                    "type": "string"
                },
                "UserPhoto": {
                    "$ref": "#/definitions/ImageViewModel",
                    "description": "The user photo."
                },
                "Archived": {
                    "description": "The archived flag.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The user status.",
                    "enum": [
                        "Invited",
                        "Activated"
                    ],
                    "type": "string"
                }
            }
        },
        "NameViewModel": {
            "description": "The name view model.",
            "type": "object",
            "properties": {
                "FirstName": {
                    "description": "The first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "MiddleName": {
                    "description": "Gets or sets the middle name.",
                    "type": "string"
                },
                "Prefix": {
                    "description": "Gets or sets the prefix.",
                    "type": "string"
                },
                "Suffix": {
                    "description": "Gets or sets the suffix.",
                    "type": "string"
                }
            }
        },
        "ResendUserInvitationsByInvitationCodeBindingModel": {
            "description": "The binding model for resending",
            "required": [
                "InvitationCodes",
                "ChannelTypes"
            ],
            "type": "object",
            "properties": {
                "InvitationCodes": {
                    "description": "List of Invitation codes to resend.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ChannelTypes": {
                    "description": "The list of channel types to send the invitation over.  \r\n            The current supported channel types include Sms and Email.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Unknown",
                            "Push",
                            "App",
                            "Email",
                            "Sms",
                            "Api",
                            "Ivr",
                            "None",
                            "ChatBot"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "ResendUserInvitationsByDateBindingModel": {
            "description": "The binding model for resending user invitation by dates.",
            "required": [
                "LastSentStartDate",
                "LastSentEndDate",
                "ChannelTypes"
            ],
            "type": "object",
            "properties": {
                "LastSentStartDate": {
                    "description": "Gets or sets the start date of the last sent date range\r\n            for which invitations should be sent.",
                    "type": "string"
                },
                "LastSentEndDate": {
                    "description": "Gets or sets the start date of the last sent date range\r\n            for which invitations should be sent.",
                    "type": "string"
                },
                "ChannelTypes": {
                    "description": "The list of channel types to send the invitation over.  \r\n            The current supported channel types include Sms and Email.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Unknown",
                            "Push",
                            "App",
                            "Email",
                            "Sms",
                            "Api",
                            "Ivr",
                            "None",
                            "ChatBot"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "VideoCallBindingModel": {
            "description": "The Video Call Binding Model",
            "required": [
                "RecipientId"
            ],
            "type": "object",
            "properties": {
                "RecipientId": {
                    "description": "The recipient.",
                    "type": "string"
                }
            }
        },
        "VideoCallCreateViewModel": {
            "description": "The video call create view model.",
            "type": "object",
            "properties": {
                "Token": {
                    "description": "The token to connect to the video call service.",
                    "type": "string"
                },
                "RoomId": {
                    "format": "uuid",
                    "description": "The room Id.",
                    "type": "string"
                }
            }
        },
        "VideoCallViewModel": {
            "description": "The video call view model.",
            "type": "object",
            "properties": {
                "Parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActorReadModel"
                    }
                },
                "RoomId": {
                    "format": "uuid",
                    "description": "The room identifier.",
                    "type": "string"
                },
                "VideoCallEndReason": {
                    "description": "The video call end reason.",
                    "enum": [
                        "FinishedSuccessfully",
                        "NoResponseFromRecipient",
                        "CanceledByCaller",
                        "RejectedByRecipient"
                    ],
                    "type": "string"
                },
                "TimeSent": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time the video call was sent.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                },
                "TimeEnd": {
                    "format": "uuuu'-'MM'-'dd'T'HH':'mm':'ss;FFFFFFFFF'Z'",
                    "description": "The time the video call was ended.",
                    "type": "string",
                    "example": "1986-07-19T16:53:00Z"
                }
            }
        },
        "VideoCallTokenViewModel": {
            "description": "The video call token view model.",
            "type": "object",
            "properties": {
                "Token": {
                    "description": "The token to connect to the video call service.",
                    "type": "string"
                }
            }
        },
        "VideoCallEndBindingModel": {
            "description": "The video call end binding model.",
            "required": [
                "VideoCallEndReason"
            ],
            "type": "object",
            "properties": {
                "VideoCallEndReason": {
                    "description": "The video call end reason.",
                    "enum": [
                        "FinishedSuccessfully",
                        "NoResponseFromRecipient",
                        "CanceledByCaller",
                        "RejectedByRecipient"
                    ],
                    "type": "string"
                }
            }
        }
    }
}