!function(r,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("AwApi",[],e):"object"==typeof exports?exports.AwApi=e():r.AwApi=e()}(this,function(){return function(r){function e(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return r[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var t={};return e.m=r,e.c=t,e.d=function(r,t,o){e.o(r,t)||Object.defineProperty(r,t,{configurable:!1,enumerable:!0,get:o})},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},e.p="",e(e.s=1)}([function(r,e){function t(r){return null!==r&&"object"==typeof r}r.exports=t},function(r,e,t){r.exports=t(2)},function(r,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t(3),i=(t.n(o),o),a=function(){function r(r,e){this.logger=e,this.domain="",this.errorHandlers=[],r&&(this.domain=r)}return r.prototype.getDomain=function(){return this.domain},r.prototype.addErrorHandler=function(r){this.errorHandlers.push(r)},r.prototype.request=function(r,e,t,o,a,n,s,d){var u=this;this.logger&&this.logger.log("Call "+r+" "+e);var p=(i.default||i)(r,e).query(a);Object.keys(o).forEach(function(r){p.set(r,o[r])}),t&&p.send(t),"object"==typeof t&&"Buffer"!==t.constructor.name&&p.set("Content-Type","application/json"),Object.keys(n).length>0&&(p.type("form"),p.send(n)),p.end(function(r,e){r||!e.ok?(s(r),u.errorHandlers.forEach(function(e){return e(r)})):d(e)})},r}(),n=a,s=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),d=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return s(e,r),e.prototype.LookupAccountByUserNameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;void 0!==r.userName&&(e.userName=r.userName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var o=Object.keys(e);return t+"/api/accounts"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.LookupAccountByUserName=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o={},i={},a={};return new Promise(function(n,s){if(i.Accept="application/json, text/json, application/xml, text/xml",i["Content-Type"]="",void 0!==r.userName&&(o.userName=r.userName),void 0===r.userName)return void s(new Error("Missing required  parameter: userName"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){o[e]=r.$queryParameters[e]}),e.request("GET",t+"/api/accounts",void 0,i,o,a,s,n)})},e.prototype.SendPasswordResetEmailURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var o=Object.keys(e);return t+"/api/accounts/passwordreset"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendPasswordResetEmail=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.model&&(e=r.model),void 0===r.model)return void d(new Error("Missing required  parameter: model"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},t.request("POST",o+"/api/accounts/passwordreset",e,a,i,n,d,s)})},e.prototype.ResetPasswordWithTokenURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var o=Object.keys(e);return t+"/api/accounts/password"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ResetPasswordWithToken=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.model&&(e=r.model),void 0===r.model)return void d(new Error("Missing required  parameter: model"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),t.request("PUT",o+"/api/accounts/password",e,a,i,n,d,s)})},e}(n),u=d,p=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),c=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return p(e,r),e.prototype.GetURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/audit/aggregates/{id}";o=o.replace("{id}",""+r.id),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.Get=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/audit/aggregates/{id}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{id}",""+r.id),void 0===r.id?void d(new Error("Missing required  parameter: id")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e}(n),m=c,l=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),I=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return l(e,r),e.prototype.RecordBeaconURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var o=Object.keys(e);return t+"/api/beacons"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RecordBeacon=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.model&&(e=r.model),void 0===r.model?void d(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void t.request("POST",o+"/api/beacons",e,a,i,n,d,s)))})},e.prototype.RecordInvitationBeaconURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var o=Object.keys(e);return t+"/api/beacons/invitations"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RecordInvitationBeacon=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.model&&(e=r.model),void 0===r.model)return void d(new Error("Missing required  parameter: model"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},t.request("POST",o+"/api/beacons/invitations",e,a,i,n,d,s)})},e}(n),v=I,h=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),y=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return h(e,r),e.prototype.GetBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var o=Object.keys(e);return t+"/api/branding"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o={},i={},a={};return new Promise(function(n,s){if(i.Accept="application/json, text/json, application/xml, text/xml",i["Content-Type"]="",void 0!==r.authorization&&(i.Authorization=r.authorization),void 0===r.authorization)return void s(new Error("Missing required  parameter: authorization"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){o[e]=r.$queryParameters[e]}),e.request("GET",t+"/api/branding",void 0,i,o,a,s,n)})},e.prototype.GetDistributorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/branding/distributors/{distributorId}";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/branding/distributors/{distributorId}",i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId)return void d(new Error("Missing required  parameter: distributorId"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),e.request("GET",t+o,void 0,a,i,n,d,s)})},e.prototype.GetSponsorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/branding/distributors/{distributorId}/sponsors/{sponsorId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/branding/distributors/{distributorId}/sponsors/{sponsorId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetOrganizationBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/branding/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetOrganizationBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/branding/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e}(n),b=y,f=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),q=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return f(e,r),e.prototype.GetTransactionalSmartEmailsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/campaignmonitor/transactional/smartEmail";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetTransactionalSmartEmails=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/campaignmonitor/transactional/smartEmail",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSubscriberListsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/campaignmonitor/driplists";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSubscriberLists=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/campaignmonitor/driplists",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e}(n),P=q,$=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),g=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return $(e,r),e.prototype.GetCareCenterContentForDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterContentForDistributor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.AddDistributorCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddDistributorCareCenterContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/content",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.GetCareCenterContentForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterContentForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.AddCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCareCenterContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetDistributorCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorCareCenterContent=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.UpdateDistributorCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorCareCenterContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/content/{contentId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{contentId}",""+r.contentId),void 0===r.contentId?void u(new Error("Missing required  parameter: contentId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteDistributorCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorCareCenterContent=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterContent=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.UpdateCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateCareCenterContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{contentId}",""+r.contentId),void 0===r.contentId?void u(new Error("Missing required  parameter: contentId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.DeleteCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteCareCenterContent=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UploadDistributorMediaURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}/image";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadDistributorMedia=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}/image",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))})},e.prototype.DeleteDistributorMediaURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}/image";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorMedia=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/{contentId}/image",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.UploadMediaURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}/image";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadMedia=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}/image",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.DeleteMediaURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}/image";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{contentId}",""+r.contentId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteMedia=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/{contentId}/image",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{contentId}",""+r.contentId),void 0===r.contentId?void d(new Error("Missing required  parameter: contentId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetCareCenterContentForCareTeamURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/careteams/{organizationId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterContentForCareTeam=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/careteams/{organizationId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.UploadDistributorCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/content/upload";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadDistributorCareCenterContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/content/upload",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded,multipart/form-data",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.UploadCareCenterContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/upload";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadCareCenterContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/carecenter/content/upload",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded,multipart/form-data",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetCareCenterContentForPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/carecenter/content";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterContentForPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/carecenter/content",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetCareCenterNodesForPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/carecenter";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterNodesForPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/carecenter",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e}(n),j=g,E=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),w=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return E(e,r),e.prototype.GetCareCenterContentForPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/carecenter/content";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterContentForPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/carecenter/content",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetCareCenterNodesForPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/carecenter";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCareCenterNodesForPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/carecenter",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e}(n),x=w,k=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),z=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return k(e,r),e.prototype.AddCategoriesToCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/categories";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCategoriesToCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.categoryIdList&&(e=r.categoryIdList),void 0===r.categoryIdList?void u(new Error("Missing required  parameter: categoryIdList")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.RemoveCategoriesFromCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/categories";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveCategoriesFromCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d))))))})},e.prototype.AddCategoriesToDistributorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/categories";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCategoriesToDistributorCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.categoryIdList&&(e=r.categoryIdList),void 0===r.categoryIdList?void u(new Error("Missing required  parameter: categoryIdList")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.RemoveCategoriesFromDistributorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/categories";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveCategoriesFromDistributorCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d)))))})},e.prototype.ApplyCarePlanSponsorCarePlanIdURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/sponsorcareplanid";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ApplyCarePlanSponsorCarePlanId=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/sponsorcareplanid",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.GetSponsorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorCarePlan=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.CloneCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CloneCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.carePlanCloneModel&&(e=r.carePlanCloneModel),void 0===r.carePlanCloneModel?void u(new Error("Missing required  parameter: carePlanCloneModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ArchiveCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ArchiveCarePlan=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetDistributorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorCarePlan=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CloneDistributorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CloneDistributorCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.carePlanCloneModel&&(e=r.carePlanCloneModel),void 0===r.carePlanCloneModel?void u(new Error("Missing required  parameter: carePlanCloneModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.ArchiveDistributorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ArchiveDistributorCarePlan=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetCarePlansURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCarePlans=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.carePlan&&(e=r.carePlan),void 0===r.carePlan?void u(new Error("Missing required  parameter: carePlan")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetDistributorCarePlansURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorCarePlans=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.CreateDistributorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.RenameDistributorCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameDistributorCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.GetCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/careplans/{carePlanId}";o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCarePlan=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/careplans/{carePlanId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetCarePlanForDateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/days/{dayOfCare}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{dayOfCare}",""+r.dayOfCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCarePlanForDate=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/days/{dayOfCare}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{dayOfCare}",""+r.dayOfCare),void 0===r.dayOfCare?void d(new Error("Missing required  parameter: dayOfCare")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.RecordSupervisorApprovalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/approve";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RecordSupervisorApproval=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/approve",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.RenameCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e}(n),C=z,M=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),O=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return M(e,r),e.prototype.GetCategoriesForDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/categories";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCategoriesForDistributor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/categories",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.CreateCategoryForDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/categories";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCategoryForDistributor=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.categoryModel&&(e=r.categoryModel),void 0===r.categoryModel?void u(new Error("Missing required  parameter: categoryModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.RenameDistributorCategoryURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/categories/{categoryId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{categoryId}",""+r.categoryId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameDistributorCategory=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/categories/{categoryId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{categoryId}",""+r.categoryId),void 0===r.categoryId?void u(new Error("Missing required  parameter: categoryId")):(void 0!==r.nameModel&&(e=r.nameModel),void 0===r.nameModel?void u(new Error("Missing required  parameter: nameModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetCategoriesForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/categories";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCategoriesForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/categories",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateCategoryForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/categories";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCategoryForSponsor=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.categoryModel&&(e=r.categoryModel),void 0===r.categoryModel?void u(new Error("Missing required  parameter: categoryModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.RenameCategoryURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/categories/{categoryId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{categoryId}",""+r.categoryId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameCategory=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/categories/{categoryId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{categoryId}",""+r.categoryId),void 0===r.categoryId?void u(new Error("Missing required  parameter: categoryId")):(void 0!==r.categoryName&&(e=r.categoryName),void 0===r.categoryName?void u(new Error("Missing required  parameter: categoryName")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e}(n),T=O,U=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),D=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return U(e,r),e.prototype.GetDistributorChatBotContextModelURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/chatbot/{chatBotContextId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorChatBotContextModel=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/chatbot/{chatBotContextId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void d(new Error("Missing required  parameter: chatBotContextId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSponsorChatBotContextModelURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorChatBotContextModel=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void d(new Error("Missing required  parameter: chatBotContextId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetAllSponsorChatBotContextModelsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/context/all";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetAllSponsorChatBotContextModels=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/context/all",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateDistributorBotAsyncURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/bot";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorBotAsync=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/bot",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.CreateChatBotDistributorContextURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/chatbot";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateChatBotDistributorContext=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/chatbot",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.CreateChatBotSponsorContextURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateChatBotSponsorContext=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.AddDistributorChatBotContextItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddDistributorChatBotContextItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void u(new Error("Missing required  parameter: chatBotContextId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.AddSponsorChatBotContextItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddSponsorChatBotContextItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void u(new Error("Missing required  parameter: chatBotContextId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.SendChatBotResponseFeedbackURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}/feedback";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),o=o.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendChatBotResponseFeedback=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}/feedback",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void u(new Error("Missing required  parameter: chatBotContextId")):(i=i.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),void 0===r.chatBotContextItemId?void u(new Error("Missing required  parameter: chatBotContextItemId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.UpdateDistributorChatBotContextItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),o=o.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorChatBotContextItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void u(new Error("Missing required  parameter: chatBotContextId")):(i=i.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),void 0===r.chatBotContextItemId?void u(new Error("Missing required  parameter: chatBotContextItemId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.DeleteDistributorChatBotContextItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),o=o.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorChatBotContextItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void d(new Error("Missing required  parameter: chatBotContextId")):(o=o.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),void 0===r.chatBotContextItemId?void d(new Error("Missing required  parameter: chatBotContextItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UpdateSponsorChatBotContextItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),o=o.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorChatBotContextItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void u(new Error("Missing required  parameter: chatBotContextId")):(i=i.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),void 0===r.chatBotContextItemId?void u(new Error("Missing required  parameter: chatBotContextItemId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.DeleteSponsorChatBotContextItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{chatBotContextId}",""+r.chatBotContextId),o=o.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteSponsorChatBotContextItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/chatbot/{chatBotContextId}/items/{chatBotContextItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{chatBotContextId}",""+r.chatBotContextId),void 0===r.chatBotContextId?void d(new Error("Missing required  parameter: chatBotContextId")):(o=o.replace("{chatBotContextItemId}",""+r.chatBotContextItemId),void 0===r.chatBotContextItemId?void d(new Error("Missing required  parameter: chatBotContextItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e}(n),S=D,R=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),A=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return R(e,r),e.prototype.GetPatientsCarePlansURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientsCarePlans=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/careplans",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreatePatientTaskDataExtractURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/patients/scheduledtasks";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientTaskDataExtract=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/patients/scheduledtasks",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetPatientsTaskCompletionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/patients/taskcompletion";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.taskName&&(e.taskName=r.taskName),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientsTaskCompletion=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/patients/taskcompletion",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml, text/csv",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.taskName&&(i.taskName=r.taskName),void 0===r.taskName?void d(new Error("Missing required  parameter: taskName")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.GetActiveUsersInformationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/users/information";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetActiveUsersInformation=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/integration/distributors/{distributorId}/sponsors/{sponsorId}/users/information",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e}(n),L=A,_=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),G=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return _(e,r),e.prototype.GetSponsorOrganizationConversationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/conversations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),void 0!==r.tags&&(e.tags=r.tags),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorOrganizationConversations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/conversations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.tags&&(i.tags=r.tags),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSponsorOrganizationConversationsMetaDataURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/conversations/metadata";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorOrganizationConversationsMetaData=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/conversations/metadata",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetOrganizationConversationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),void 0!==r.tags&&(e.tags=r.tags),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetOrganizationConversations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.tags&&(i.tags=r.tags),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetUserConversationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),void 0!==r.tags&&(e.tags=r.tags),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetUserConversations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.tags&&(i.tags=r.tags),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetPatientConversationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations";o=o.replace("{patientId}",""+r.patientId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),void 0!==r.tags&&(e.tags=r.tags),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientConversations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.tags&&(i.tags=r.tags),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetPatientConversationsSponsorIdentifierURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/conversations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),void 0!==r.tags&&(e.tags=r.tags),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientConversationsSponsorIdentifier=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/conversations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.tags&&(i.tags=r.tags),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e}(n),B=G,N=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),F=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return N(e,r),e.prototype.GetMessageablePartiesForPatientExternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/conversations/messageable";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetMessageablePartiesForPatientExternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/conversations/messageable",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetMessageablePartiesForPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/messageable";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetMessageablePartiesForPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/messageable",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetMessageablePatientsForUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/messageable";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetMessageablePatientsForUser=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/messageable",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetMessageablePatientsForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/messageable";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetMessageablePatientsForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/messageable",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e}(n),W=F,H=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),X=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return H(e,r),e.prototype.GetOrganizationConversationWithPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetOrganizationConversationWithPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/patients/{patientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateOrganizationConversationStatusURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateOrganizationConversationStatus=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/patients/{patientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.SendMessageFromOrganizationToPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendMessageFromOrganizationToPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/conversations/patients/{patientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded,multipart/form-data",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.messageModel&&(e=r.messageModel),void 0===r.messageModel?void u(new Error("Missing required  parameter: messageModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.GetUserConversationWithPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{userId}",""+r.userId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetUserConversationWithPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/patients/{patientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateUserConversationStateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateUserConversationState=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/patients/{patientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.SendMessageFromUserToPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendMessageFromUserToPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/conversations/patients/{patientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded,multipart/form-data",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.messageModel&&(e=r.messageModel),void 0===r.messageModel?void u(new Error("Missing required  parameter: messageModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.GetPatientConversationWithOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientConversationWithOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdatePatientConversationWithOrganizationStatusURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdatePatientConversationWithOrganizationStatus=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.SendMessageFromPatientToOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendMessageFromPatientToOrganization=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded,multipart/form-data",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.messageModel&&(e=r.messageModel),void 0===r.messageModel?void u(new Error("Missing required  parameter: messageModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.GetPatientConversationWithUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),void 0!==r.fromDateTime&&(e.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(e.toDateTime=r.toDateTime),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientConversationWithUser=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.fromDateTime&&(i.fromDateTime=r.fromDateTime),void 0!==r.toDateTime&&(i.toDateTime=r.toDateTime),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdatePatientConversationWithUserStatusURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdatePatientConversationWithUserStatus=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.SendMessageFromPatientToUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendMessageFromPatientToUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/conversations/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded,multipart/form-data",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.messageModel&&(e=r.messageModel),void 0===r.messageModel?void u(new Error("Missing required  parameter: messageModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e}(n),K=X,V=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Z=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return V(e,r),e.prototype.ChangeDistributorSettingsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/settings";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeDistributorSettings=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/settings",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.CreateAuthorizationCodeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/authorizationcodes";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateAuthorizationCode=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/authorizationcodes",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.authCodeModel&&(e=r.authCodeModel),void 0===r.authCodeModel?void u(new Error("Missing required  parameter: authCodeModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.DeleteAuthorizationCodeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/authorizationcodes/{authorizationCode}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{authorizationCode}",""+r.authorizationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteAuthorizationCode=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/authorizationcodes/{authorizationCode}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{authorizationCode}",""+r.authorizationCode),void 0===r.authorizationCode?void d(new Error("Missing required  parameter: authorizationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.CreateDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var o=Object.keys(e);return t+"/api/distributors"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributor=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.distributorModel&&(e=r.distributorModel),void 0===r.distributorModel?void d(new Error("Missing required  parameter: distributorModel")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void t.request("POST",o+"/api/distributors",e,a,i,n,d,s)))})},e.prototype.GetSponsorsForDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorsForDistributor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.CreateSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsor=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.sponsorModel&&(e=r.sponsorModel),void 0===r.sponsorModel?void u(new Error("Missing required  parameter: sponsorModel")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.GetDistributorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding",i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId)return void d(new Error("Missing required  parameter: distributorId"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),e.request("GET",t+o,void 0,a,i,n,d,s)})},e.prototype.UpdateDistributorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorBranding=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/branding",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.DeleteDistributorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.RenameSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameSponsor=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.UploadDistributorBrandingEmailLogoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding/emaillogo";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadDistributorBrandingEmailLogo=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding/emaillogo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))})},e.prototype.UploadDistributorBrandingLogoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding/logo";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadDistributorBrandingLogo=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/branding/logo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))})},e}(n),Q=Z,J=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Y=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return J(e,r),e.prototype.AddExportFileRecordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/exportfiles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddExportFileRecord=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/exportfiles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteExportFileRecordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/exportfiles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fileName&&(e.fileName=r.fileName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteExportFileRecord=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/exportfiles",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fileName&&(i.fileName=r.fileName),void 0===r.fileName?void d(new Error("Missing required  parameter: fileName")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.AddImportFileRecordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/importfiles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddImportFileRecord=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/importfiles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteImportFileRecordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/importfiles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fileName&&(e.fileName=r.fileName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteImportFileRecord=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/importfiles",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fileName&&(i.fileName=r.fileName),void 0===r.fileName?void d(new Error("Missing required  parameter: fileName")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetIntegrationManagementDataURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetIntegrationManagementData=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.DeleteIntegrationManagementDataURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteIntegrationManagementData=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.UpdateIntegrationManagementCredentialsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/credentials";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateIntegrationManagementCredentials=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/integration/credentials",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e}(n),rr=Y,er=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),tr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return er(e,r),e.prototype.GetInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/invitations/{invitationCode}";o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetInvitation=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/invitations/{invitationCode}",i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode)return void d(new Error("Missing required  parameter: invitationCode"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),e.request("GET",t+o,void 0,a,i,n,d,s)})},e.prototype.GenerateActivationCodeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/invitations/{invitationCode}/activationcode";o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GenerateActivationCode=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/invitations/{invitationCode}/activationcode",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void u(new Error("Missing required  parameter: invitationCode")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))})},e}(n),or=tr,ir=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),ar=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return ir(e,r),e.prototype.IsPatientDeactivatedURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/activate";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.sponsorPatientId&&(e.sponsorPatientId=r.sponsorPatientId),void 0!==r.dateOfBirth&&(e.dateOfBirth=r.dateOfBirth),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.IsPatientDeactivated=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/activate",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.sponsorPatientId&&(i.sponsorPatientId=r.sponsorPatientId),void 0===r.sponsorPatientId?void d(new Error("Missing required  parameter: sponsorPatientId")):(void 0!==r.dateOfBirth&&(i.dateOfBirth=r.dateOfBirth),void 0===r.dateOfBirth?void d(new Error("Missing required  parameter: dateOfBirth")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.ActivateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/activate";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.Activate=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/activate",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.GetPatientCarePlansURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientCarePlans=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.AddCarePlansToPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCarePlansToPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.CloneCarePlanToPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CloneCarePlanToPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.AddCategoriesToPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCategoriesToPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.AffiliatePatientFromOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/organizations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AffiliatePatientFromOrganization=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/organizations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ArchivePatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/archive";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ArchivePatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/archive",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetBroadcastToPatientsShortCodesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/broadcast";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetBroadcastToPatientsShortCodes=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/broadcast",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.BroadcastToPatientsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/broadcast";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.BroadcastToPatients=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/broadcast",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.BulkUpdateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/bulkUpdate";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.BulkUpdate=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/bulkUpdate",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.ChangePasswordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/password";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePassword=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/password",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangePatientRoleURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/roles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePatientRole=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangePatientSettingsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/settings";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePatientSettings=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/settings",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ClearPatientAlertsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/alerts";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ClearPatientAlerts=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/alerts",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetPatientsForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientsForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreatePatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.CreatePatientCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/patient";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientCarePlan=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/patient",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.CreatePatientInFilamentDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var o=Object.keys(e);return t+"/api/patients"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientInFilamentDistributor=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.model&&(e=r.model),void 0===r.model)return void d(new Error("Missing required  parameter: model"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},t.request("POST",o+"/api/patients",e,a,i,n,d,s)})},e.prototype.CreatePersonalCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/personal";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePersonalCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/personal",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.DeactivateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/deactivate";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.Deactivate=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/deactivate",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))})},e.prototype.ReactivateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/reactivate";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.Reactivate=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/reactivate",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UpdatePatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdatePatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.DeletePatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeletePatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UploadPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.DeletePhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeletePhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetAlertedPatientsForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/alerted";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetAlertedPatientsForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/alerted",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetAlertedPatientsForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/alerted";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetAlertedPatientsForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/alerted",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetArchivedPatientsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/archived-patients";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetArchivedPatients=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/archived-patients",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetCompletedTaskReadModelsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/tasks";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCompletedTaskReadModels=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/tasks",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetPatientSchedulableTasksURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedulable";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientSchedulableTasks=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedulable",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetPatientsForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientsForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetTaskOutcomesOverTimeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/tasks/{taskId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{taskId}",""+r.taskId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.endDate&&(e.endDate=r.endDate),void 0!==r.intervalType&&(e.intervalType=r.intervalType),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetTaskOutcomesOverTime=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/tasks/{taskId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{taskId}",""+r.taskId),void 0===r.taskId?void d(new Error("Missing required  parameter: taskId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.endDate&&(i.endDate=r.endDate),void 0===r.endDate?void d(new Error("Missing required  parameter: endDate")):(void 0!==r.intervalType&&(i.intervalType=r.intervalType),void 0===r.intervalType?void d(new Error("Missing required  parameter: intervalType")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))))})},e.prototype.PushScheduleUpdateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/pushscheduleupdate";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.PushScheduleUpdate=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/pushscheduleupdate",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.ReplacePatientCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ReplacePatientCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/{carePlanId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.RemoveCarePlanFromPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/{carePlanId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveCarePlanFromPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/careplans/{carePlanId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.ReplacePatientCategoryURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories/{categoryId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{categoryId}",""+r.categoryId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ReplacePatientCategory=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories/{categoryId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{categoryId}",""+r.categoryId),void 0===r.categoryId?void u(new Error("Missing required  parameter: categoryId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.RemoveCategoryFromPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories/{categoryId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{categoryId}",""+r.categoryId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveCategoryFromPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/categories/{categoryId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{categoryId}",""+r.categoryId),void 0===r.categoryId?void d(new Error("Missing required  parameter: categoryId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UnaffiliatePatientFromOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/organizations/{organizationId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UnaffiliatePatientFromOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/organizations/{organizationId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UnarchivePatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/unarchive";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UnarchivePatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/unarchive",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UpdatePatientFullNameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/fullname";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdatePatientFullName=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/fullname",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.fullName&&(e=r.fullName),void 0===r.fullName?void u(new Error("Missing required  parameter: fullName")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdatePatientAddressURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/address";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdatePatientAddress=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/address",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdatePatientTimeZoneURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/timezone";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdatePatientTimeZone=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/timezone",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.GetSignaledAlertsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/signaledalerts";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),void 0!==r.activeOnly&&(e.activeOnly=r.activeOnly),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSignaledAlerts=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/signaledalerts",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.activeOnly&&(i.activeOnly=r.activeOnly),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e}(n),nr=ar,sr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),dr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return sr(e,r),e.prototype.GetRecentActivityPatientsForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/lastmeasurement";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.endDate&&(e.endDate=r.endDate),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetRecentActivityPatientsForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/lastmeasurement",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.endDate&&(i.endDate=r.endDate),void 0===r.endDate?void d(new Error("Missing required  parameter: endDate")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetPopulationCarePlansForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/population";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.carePlanIds&&(e.carePlanIds=r.carePlanIds),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPopulationCarePlansForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/population",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.carePlanIds&&(i.carePlanIds=r.carePlanIds),void 0===r.carePlanIds?void d(new Error("Missing required  parameter: carePlanIds")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetNoCarePlansForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/none";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetNoCarePlansForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/none",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetPersonalPatientCarePlansForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/personal";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPersonalPatientCarePlansForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/personal",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetPatientCarePlansForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/patient";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientCarePlansForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/careplan/patient",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetPatientsbyNameForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.lastName&&(e.lastName=r.lastName),void 0!==r.firstName&&(e.firstName=r.firstName),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientsbyNameForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/name",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.lastName&&(i.lastName=r.lastName),void 0===r.lastName?void d(new Error("Missing required  parameter: lastName")):(void 0!==r.firstName&&(i.firstName=r.firstName),void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetAlertedPatientsForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/alerted";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetAlertedPatientsForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/alerted",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetNewPatientsForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/createddate";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.endDate&&(e.endDate=r.endDate),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetNewPatientsForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/createddate",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.endDate&&(i.endDate=r.endDate),void 0===r.endDate?void d(new Error("Missing required  parameter: endDate")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetPatientsByAppointmentDateForSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/appointment";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.endDate&&(e.endDate=r.endDate),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientsByAppointmentDateForSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/appointment",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.endDate&&(i.endDate=r.endDate),void 0===r.endDate?void d(new Error("Missing required  parameter: endDate")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetPatientsByUserLastMeasurementURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/userlastmeasurement";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.includeShareCare&&(e.includeShareCare=r.includeShareCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientsByUserLastMeasurement=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/index/userlastmeasurement",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.includeShareCare&&(i.includeShareCare=r.includeShareCare),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e}(n),ur=dr,pr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),cr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return pr(e,r),e.prototype.ActivateWithSponsorNameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{sponsorName}/activate";o=o.replace("{sponsorName}",""+r.sponsorName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ActivateWithSponsorName=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{sponsorName}/activate",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{sponsorName}",""+r.sponsorName),void 0===r.sponsorName?void u(new Error("Missing required  parameter: sponsorName")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))})},e.prototype.IsPatientDeactivatedURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;void 0!==r.sponsorPatientId&&(e.sponsorPatientId=r.sponsorPatientId),void 0!==r.dateOfBirth&&(e.dateOfBirth=r.dateOfBirth),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var o=Object.keys(e);return t+"/api/patients/activate"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.IsPatientDeactivated=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o={},i={},a={};return new Promise(function(n,s){return i.Accept="application/json, text/json, application/xml, text/xml",i["Content-Type"]="",void 0!==r.sponsorPatientId&&(o.sponsorPatientId=r.sponsorPatientId),void 0===r.sponsorPatientId?void s(new Error("Missing required  parameter: sponsorPatientId")):(void 0!==r.dateOfBirth&&(o.dateOfBirth=r.dateOfBirth),void 0===r.dateOfBirth?void s(new Error("Missing required  parameter: dateOfBirth")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){o[e]=r.$queryParameters[e]}),void e.request("GET",t+"/api/patients/activate",void 0,i,o,a,s,n)))})},e.prototype.ActivateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var o=Object.keys(e);return t+"/api/patients/activate"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.Activate=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.model&&(e=r.model),void 0===r.model)return void d(new Error("Missing required  parameter: model"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),t.request("PUT",o+"/api/patients/activate",e,a,i,n,d,s)})},e.prototype.AddCarePlansToPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/careplans";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCarePlansToPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/careplans",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.AddCategoriesToPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/categories";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCategoriesToPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/categories",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.AffiliatePatientFromOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/organizations";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AffiliatePatientFromOrganization=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/organizations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.ChangePasswordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/password";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePassword=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/password",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.ChangePatientRoleInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/roles";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePatientRoleInternal=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.AddRolesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/roles";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddRoles=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.ChangePatientSettingsInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/settings";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePatientSettingsInternal=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/settings",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.ClearPatientAlertsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/alerts";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ClearPatientAlerts=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/alerts",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))})},e.prototype.UploadPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/photo";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))})},e.prototype.DeletePhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/photo";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeletePhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetCompletedTaskReadModelsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/tasks";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCompletedTaskReadModels=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/tasks",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetTaskOutcomesOverTimeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/tasks/{taskId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{taskId}",""+r.taskId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.endDate&&(e.endDate=r.endDate),void 0!==r.intervalType&&(e.intervalType=r.intervalType),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetTaskOutcomesOverTime=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/tasks/{taskId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{taskId}",""+r.taskId),void 0===r.taskId?void d(new Error("Missing required  parameter: taskId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.endDate&&(i.endDate=r.endDate),void 0===r.endDate?void d(new Error("Missing required  parameter: endDate")):(void 0!==r.intervalType&&(i.intervalType=r.intervalType),void 0===r.intervalType?void d(new Error("Missing required  parameter: intervalType")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.PushScheduleUpdateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/pushscheduleupdate";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.PushScheduleUpdate=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/pushscheduleupdate",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))})},e.prototype.ReplacePatientCarePlanURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/careplans/{carePlanId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ReplacePatientCarePlan=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/careplans/{carePlanId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.RemoveCarePlanFromPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/careplans/{carePlanId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveCarePlanFromPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/careplans/{carePlanId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.ReplacePatientCategoryURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/categories/{categoryId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{categoryId}",""+r.categoryId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ReplacePatientCategory=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/categories/{categoryId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{categoryId}",""+r.categoryId),void 0===r.categoryId?void u(new Error("Missing required  parameter: categoryId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.RemoveCategoryFromPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/categories/{categoryId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{categoryId}",""+r.categoryId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveCategoryFromPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/categories/{categoryId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{categoryId}",""+r.categoryId),void 0===r.categoryId?void d(new Error("Missing required  parameter: categoryId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.UnaffiliatePatientFromOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/organizations/{organizationId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UnaffiliatePatientFromOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/organizations/{organizationId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSignaledAlertsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/signaledalerts";void 0!==r.distributorId&&(e.distributorId=r.distributorId),void 0!==r.sponsorId&&(e.sponsorId=r.sponsorId),o=o.replace("{patientId}",""+r.patientId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),void 0!==r.activeOnly&&(e.activeOnly=r.activeOnly),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSignaledAlerts=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/signaledalerts",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",void 0!==r.distributorId&&(i.distributorId=r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.sponsorId&&(i.sponsorId=r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.activeOnly&&(i.activeOnly=r.activeOnly),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.GetPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.UpdatePatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdatePatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.DeletePatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeletePatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))})},e.prototype.BulkPatientUpdateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain;r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var o=Object.keys(e);return t+"/api/patients/bulkUpdate"+(o.length>0?"?"+o.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.BulkPatientUpdate=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",void 0!==r.model&&(e=r.model),void 0===r.model?void d(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void t.request("POST",o+"/api/patients/bulkUpdate",e,a,i,n,d,s)))})},e}(n),mr=cr,lr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Ir=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return lr(e,r),e.prototype.AcceptPatientInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/{invitationCode}/acceptance";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AcceptPatientInvitation=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/{invitationCode}/acceptance",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void u(new Error("Missing required  parameter: invitationCode")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.GetPatientInvitationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.accepted&&(e.accepted=r.accepted),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientInvitations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.accepted&&(i.accepted=r.accepted),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreatePatientInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientInvitation=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.CreatePatientInvitationWithAuthCodeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/authorizationcodes/{authorizationCode}/invitations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{authorizationCode}",""+r.authorizationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientInvitationWithAuthCode=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/authorizationcodes/{authorizationCode}/invitations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{authorizationCode}",""+r.authorizationCode),void 0===r.authorizationCode?void u(new Error("Missing required  parameter: authorizationCode")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.DeletePatientInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/{invitationCode}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeletePatientInvitation=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/{invitationCode}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.ResendPatientInvitationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/resend";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ResendPatientInvitations=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/invitations/resend",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e}(n),vr=Ir,hr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),yr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return hr(e,r),e.prototype.AddPatientProfileDefinitionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddPatientProfileDefinition=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.AffiliatePatientProfileDefinitionToSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/sponsors";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AffiliatePatientProfileDefinitionToSponsor=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/sponsors",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.CreatePatientProfileDefinitionCodeCollectionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/codeCollections";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientProfileDefinitionCodeCollection=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/codeCollections",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.CreatePatientProfileDefinitionTagElementURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/tagelements";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientProfileDefinitionTagElement=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/tagelements",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.CreatePatientProfileDefinitionTextElementURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/textelements";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientProfileDefinitionTextElement=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/textelements",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetPatientProfileDefinitionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientProfileDefinition=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.RemovePatientProfileDefinitionCodeCollectionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/codeCollections/{elementId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{elementId}",""+r.elementId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemovePatientProfileDefinitionCodeCollection=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/codeCollections/{elementId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(o=o.replace("{elementId}",""+r.elementId),void 0===r.elementId?void d(new Error("Missing required  parameter: elementId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.RemovePatientProfileDefinitionTagElementURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/tagelements/{patientProfileDefinitionTagElementId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{patientProfileDefinitionTagElementId}",""+r.patientProfileDefinitionTagElementId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemovePatientProfileDefinitionTagElement=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/tagelements/{patientProfileDefinitionTagElementId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(o=o.replace("{patientProfileDefinitionTagElementId}",""+r.patientProfileDefinitionTagElementId),void 0===r.patientProfileDefinitionTagElementId?void d(new Error("Missing required  parameter: patientProfileDefinitionTagElementId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.RemovePatientProfileDefinitionTextElementURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/textelements/{patientProfileDefinitionTextElementId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{patientProfileDefinitionTextElementId}",""+r.patientProfileDefinitionTextElementId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemovePatientProfileDefinitionTextElement=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/textelements/{patientProfileDefinitionTextElementId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(o=o.replace("{patientProfileDefinitionTextElementId}",""+r.patientProfileDefinitionTextElementId),void 0===r.patientProfileDefinitionTextElementId?void d(new Error("Missing required  parameter: patientProfileDefinitionTextElementId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.SetPatientProfileDefinitionCategoryURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/category";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SetPatientProfileDefinitionCategory=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/category",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.SetPatientProfileDefinitionElementCategoryURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/elements/{elementId}/category";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{elementId}",""+r.elementId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SetPatientProfileDefinitionElementCategory=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/elements/{elementId}/category",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{elementId}",""+r.elementId),void 0===r.elementId?void u(new Error("Missing required  parameter: elementId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.SetPatientProfileDefinitionElementCategoryByNameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/elements/names/{elementName}/category";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{elementName}",""+r.elementName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SetPatientProfileDefinitionElementCategoryByName=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/patientprofiledefinitions/{patientProfileDefinitionId}/elements/names/{elementName}/category",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{elementName}",""+r.elementName),void 0===r.elementName?void u(new Error("Missing required  parameter: elementName")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e}(n),br=yr,fr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),qr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return fr(e,r),e.prototype.AddCodesToCodeCollectionOnSponsorPatientProfileURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/codeCollections/{elementId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{elementId}",""+r.elementId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCodesToCodeCollectionOnSponsorPatientProfile=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/codeCollections/{elementId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{elementId}",""+r.elementId),void 0===r.elementId?void u(new Error("Missing required  parameter: elementId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))))})},e.prototype.AddCodesToCodeCollectionOnSponsorPatientProfileWithInstanceKeyURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/codeCollections/{elementId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{elementId}",""+r.elementId),o=o.replace("{key}",""+r.key),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddCodesToCodeCollectionOnSponsorPatientProfileWithInstanceKey=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/codeCollections/{elementId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{elementId}",""+r.elementId),void 0===r.elementId?void u(new Error("Missing required  parameter: elementId")):(i=i.replace("{key}",""+r.key),void 0===r.key?void u(new Error("Missing required  parameter: key")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))))})},e.prototype.AddElementTagsToSponsorPatientProfileURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/tagelements/{patientProfileDefinitionTagElementId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{patientProfileDefinitionTagElementId}",""+r.patientProfileDefinitionTagElementId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddElementTagsToSponsorPatientProfile=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/tagelements/{patientProfileDefinitionTagElementId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{patientProfileDefinitionTagElementId}",""+r.patientProfileDefinitionTagElementId),void 0===r.patientProfileDefinitionTagElementId?void u(new Error("Missing required  parameter: patientProfileDefinitionTagElementId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))))})},e.prototype.AddElementTagsToSponsorPatientProfileInstanceURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/tagelements/{patientProfileDefinitionTagElementId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{patientProfileDefinitionTagElementId}",""+r.patientProfileDefinitionTagElementId),o=o.replace("{key}",""+r.key),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddElementTagsToSponsorPatientProfileInstance=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/tagelements/{patientProfileDefinitionTagElementId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{patientProfileDefinitionTagElementId}",""+r.patientProfileDefinitionTagElementId),void 0===r.patientProfileDefinitionTagElementId?void u(new Error("Missing required  parameter: patientProfileDefinitionTagElementId")):(i=i.replace("{key}",""+r.key),void 0===r.key?void u(new Error("Missing required  parameter: key")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))))})},e.prototype.GetAllSponsorPatientProfilesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetAllSponsorPatientProfiles=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetAllSponsorPatientProfilesForProfileDefinitionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetAllSponsorPatientProfilesForProfileDefinition=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetSponsorPatientProfileURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorPatientProfile=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateSponsorPatientProfileURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorPatientProfile=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.GetSponsorPatientProfileInstanceURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{key}",""+r.key),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorPatientProfileInstance=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(o=o.replace("{key}",""+r.key),void 0===r.key?void d(new Error("Missing required  parameter: key")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.UpdateSponsorPatientProfileInstanceURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{key}",""+r.key),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorPatientProfileInstance=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{key}",""+r.key),void 0===r.key?void u(new Error("Missing required  parameter: key")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))))})},e.prototype.RemoveInstanceFromSponsorPatientProfileURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{key}",""+r.key),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveInstanceFromSponsorPatientProfile=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void d(new Error("Missing required  parameter: patientProfileDefinitionId")):(o=o.replace("{key}",""+r.key),void 0===r.key?void d(new Error("Missing required  parameter: key")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.SetLinkTextURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/linkText";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),o=o.replace("{key}",""+r.key),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SetLinkText=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/profiles/{patientProfileDefinitionId}/instances/{key}/linkText",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{patientProfileDefinitionId}",""+r.patientProfileDefinitionId),void 0===r.patientProfileDefinitionId?void u(new Error("Missing required  parameter: patientProfileDefinitionId")):(i=i.replace("{key}",""+r.key),void 0===r.key?void u(new Error("Missing required  parameter: key")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))))})},e}(n),Pr=qr,$r=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),gr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return $r(e,r),e.prototype.UpdateAppointmentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateAppointment=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.CreateAppointmentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateAppointment=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.CancelAppointmentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CancelAppointment=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d))))))})},e.prototype.CancelAppointmentByDateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments/date";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),void 0!==r.appointmentDateTime&&(e.appointmentDateTime=r.appointmentDateTime),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CancelAppointmentByDate=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/appointments/date",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.appointmentDateTime&&(i.appointmentDateTime=r.appointmentDateTime),void 0===r.appointmentDateTime?void d(new Error("Missing required  parameter: appointmentDateTime")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.RecordScheduledTaskOutcomeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/days/{dayOfCare}/scheduledtasks/{scheduledTaskId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{dayOfCare}",""+r.dayOfCare),o=o.replace("{scheduledTaskId}",""+r.scheduledTaskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RecordScheduledTaskOutcome=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/days/{dayOfCare}/scheduledtasks/{scheduledTaskId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{dayOfCare}",""+r.dayOfCare),void 0===r.dayOfCare?void u(new Error("Missing required  parameter: dayOfCare")):(i=i.replace("{scheduledTaskId}",""+r.scheduledTaskId),void 0===r.scheduledTaskId?void u(new Error("Missing required  parameter: scheduledTaskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))))})},e.prototype.GetScheduleWithDateRangeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.endDate&&(e.endDate=r.endDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetScheduleWithDateRange=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.endDate&&(i.endDate=r.endDate),void 0===r.endDate?void d(new Error("Missing required  parameter: endDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.GetScheduleForDayOfCareURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/days/{dayOfCare}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{dayOfCare}",""+r.dayOfCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetScheduleForDayOfCare=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/schedule/days/{dayOfCare}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{dayOfCare}",""+r.dayOfCare),void 0===r.dayOfCare?void d(new Error("Missing required  parameter: dayOfCare")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e}(n),jr=gr,Er=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),wr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Er(e,r),e.prototype.UpdateAppointmentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule/appointments";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateAppointment=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/schedule/appointments",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.CreateAppointmentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule/appointments";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateAppointment=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/schedule/appointments",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.CancelAppointmentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule/appointments";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CancelAppointment=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/schedule/appointments",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d))))})},e.prototype.CancelAppointmentByDateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sponsors/{sponsorId}/schedule/appointments";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.appointmentDateTime&&(e.appointmentDateTime=r.appointmentDateTime),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CancelAppointmentByDate=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sponsors/{sponsorId}/schedule/appointments",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.appointmentDateTime&&(i.appointmentDateTime=r.appointmentDateTime),void 0===r.appointmentDateTime?void d(new Error("Missing required  parameter: appointmentDateTime")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetScheduleWithDateRangeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule";o=o.replace("{patientId}",""+r.patientId),void 0!==r.startDate&&(e.startDate=r.startDate),void 0!==r.endDate&&(e.endDate=r.endDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetScheduleWithDateRange=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.startDate&&(i.startDate=r.startDate),void 0===r.startDate?void d(new Error("Missing required  parameter: startDate")):(void 0!==r.endDate&&(i.endDate=r.endDate),void 0===r.endDate?void d(new Error("Missing required  parameter: endDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetScheduleForDayOfCareURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule/days/{dayOfCare}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{dayOfCare}",""+r.dayOfCare),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetScheduleForDayOfCare=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule/days/{dayOfCare}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{dayOfCare}",""+r.dayOfCare),void 0===r.dayOfCare?void d(new Error("Missing required  parameter: dayOfCare")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.RecordScheduledTaskOutcomeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/schedule/days/{dayOfCare}/scheduledtasks/{scheduledTaskId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{dayOfCare}",""+r.dayOfCare),o=o.replace("{scheduledTaskId}",""+r.scheduledTaskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RecordScheduledTaskOutcome=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/schedule/days/{dayOfCare}/scheduledtasks/{scheduledTaskId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{dayOfCare}",""+r.dayOfCare),void 0===r.dayOfCare?void u(new Error("Missing required  parameter: dayOfCare")):(i=i.replace("{scheduledTaskId}",""+r.scheduledTaskId),void 0===r.scheduledTaskId?void u(new Error("Missing required  parameter: scheduledTaskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e}(n),xr=wr,kr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),zr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return kr(e,r),e.prototype.CreateCarePlanAdherenceReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-plans/adherence";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCarePlanAdherenceReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-plans/adherence",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreateCarePlanAdherenceReportForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/care-plans/adherence";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCarePlanAdherenceReportForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/care-plans/adherence",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.CreateCarePlanEngagementReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-plans/engagement";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCarePlanEngagementReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-plans/engagement",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreateCarePlanEngagementReportForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/care-plans/engagement";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCarePlanEngagementReportForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/care-plans/engagement",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.CreateCareTeamOrganizationEngagementReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-team/engagement";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCareTeamOrganizationEngagementReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-team/engagement",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.CreateCareTeamOrganizationSessionReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-team/sessions";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCareTeamOrganizationSessionReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/care-team/sessions",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.CreateCareTeamSponsorEngagementReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/care-team/engagement";o=o.replace("{distributorId}",""+r.distributorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCareTeamSponsorEngagementReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/care-team/engagement",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateCareTeamSponsorSessionReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/care-team/sessions";o=o.replace("{distributorId}",""+r.distributorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateCareTeamSponsorSessionReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/care-team/sessions",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreatePatientChannelReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/patients/channels";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientChannelReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/patients/channels",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreatePatientChannelReportForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/channels";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientChannelReportForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/channels",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.CreatePatientDemographicReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/patients/demographics";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientDemographicReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/patients/demographics",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreatePatientDemographicReportForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/demographics";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientDemographicReportForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/patients/demographics",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.CreatePatientInvitationReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/invitations/report";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientInvitationReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/invitations/report",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreatePatientInvitationReportForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/invitations/report";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreatePatientInvitationReportForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/invitations/report",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.CreateSponsorEngagementAndAdherenceReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/engagement-adherence";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorEngagementAndAdherenceReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/engagement-adherence",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreateSponsorEngagementAndAdherenceReportForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/engagement-adherence";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorEngagementAndAdherenceReportForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/engagement-adherence",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.CreateSponsorOnboardingReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/onboarding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorOnboardingReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/onboarding",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreateSponsorOnboardingReportForOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/onboarding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorOnboardingReportForOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/report/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/onboarding",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))))})},e}(n),Cr=zr,Mr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Or=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Mr(e,r),e.prototype.GetSharedCareUsersReportURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/sharedCare";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSharedCareUsersReport=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/sharedCare",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.AcceptSharedCareInvitationForNewPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/sharedcare/incoming/invitations/{invitationCode}/acceptance";o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AcceptSharedCareInvitationForNewPatient=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/sharedcare/incoming/invitations/{invitationCode}/acceptance",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void u(new Error("Missing required  parameter: invitationCode")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))})},e.prototype.GetSharedCareInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/sharedcare/invitations/{invitationCode}";o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSharedCareInvitation=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/sharedcare/invitations/{invitationCode}",i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode)return void d(new Error("Missing required  parameter: invitationCode"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),e.request("GET",t+o,void 0,a,i,n,d,s)})},e.prototype.AcceptSharedCareInvitationForExistingPatientURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/acceptance";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AcceptSharedCareInvitationForExistingPatient=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/acceptance",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))))})},e.prototype.ChangeOutgoingSharedCareMemberPermissionsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeOutgoingSharedCareMemberPermissions=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),void 0===r.sharedCarePatientId?void u(new Error("Missing required  parameter: sharedCarePatientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.RemoveOutgoingSharedCareMemberURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveOutgoingSharedCareMember=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),void 0===r.sharedCarePatientId?void d(new Error("Missing required  parameter: sharedCarePatientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.DeclineSharedCareInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/decline";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeclineSharedCareInvitation=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/decline",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetPendingReceivedSharedCareInvitationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPendingReceivedSharedCareInvitations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/invitations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.RemovePatientFromIncomingSharedCareURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/{sharedCarePatientId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemovePatientFromIncomingSharedCare=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/incoming/{sharedCarePatientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),void 0===r.sharedCarePatientId?void d(new Error("Missing required  parameter: sharedCarePatientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.RevokeSharedCareInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/revoke";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RevokeSharedCareInvitation=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/revoke",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))))})},e.prototype.SendSharedCareInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendSharedCareInvitation=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.SendSharedCareInvitationEmailURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/sendemail";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendSharedCareInvitationEmail=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/sendemail",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))))})},e}(n),Tr=Or,Ur=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Dr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Ur(e,r),e.prototype.AcceptSharedCareInvitationForExistingPatientInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/acceptance";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AcceptSharedCareInvitationForExistingPatientInternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/acceptance",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))})},e.prototype.ChangeOutgoingSharedCareMemberPermissionsInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeOutgoingSharedCareMemberPermissionsInternal=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(i=i.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),void 0===r.sharedCarePatientId?void u(new Error("Missing required  parameter: sharedCarePatientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.RemoveOutgoingSharedCareMemberInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveOutgoingSharedCareMemberInternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/{sharedCarePatientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),void 0===r.sharedCarePatientId?void d(new Error("Missing required  parameter: sharedCarePatientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.DeclineSharedCareInvitationInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/decline";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeclineSharedCareInvitationInternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/invitations/{invitationCode}/decline",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetPendingReceivedSharedCareInvitationsInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/invitations";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPendingReceivedSharedCareInvitationsInternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/invitations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.RemovePatientFromIncomingSharedCareInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/{sharedCarePatientId}";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemovePatientFromIncomingSharedCareInternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/incoming/{sharedCarePatientId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{sharedCarePatientId}",""+r.sharedCarePatientId),void 0===r.sharedCarePatientId?void d(new Error("Missing required  parameter: sharedCarePatientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.RevokeSharedCareInvitationInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/revoke";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RevokeSharedCareInvitationInternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/revoke",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))})},e.prototype.SendSharedCareInvitationInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/invitations";o=o.replace("{patientId}",""+r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendSharedCareInvitationInternal=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/patients/{patientId}/sharedcare/outgoing/invitations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{patientId}",""+r.patientId),void 0===r.patientId?void u(new Error("Missing required  parameter: patientId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.SendSharedCareInvitationEmailInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/sendemail";o=o.replace("{patientId}",""+r.patientId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.SendSharedCareInvitationEmailInternal=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/patients/{patientId}/sharedcare/outgoing/invitations/{invitationCode}/sendemail",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{patientId}",""+r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))})},e}(n),Sr=Dr,Rr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Ar=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Rr(e,r),e.prototype.ChangeOrganizationSettingsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/settings";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeOrganizationSettings=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/settings",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeSponsorOrganizationIdURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/sponsorOrganizationId";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorOrganizationId=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/sponsorOrganizationId",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeSponsorSettingsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/settings";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorSettings=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/settings",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.GetSponsorSecretsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorSecrets=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.ChangeSponsorSecretsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorSecrets=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.GetOrganizationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetOrganizations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateOrganization=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.DeleteOrganizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteOrganization=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetOrganizationBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetOrganizationBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.UpdateOrganizationBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateOrganizationBranding=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.DeleteOrganizationBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteOrganizationBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UploadOrganizationPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadOrganizationPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.DeleteOrganizationPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteOrganizationPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.DeleteSponsorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteSponsor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSponsorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.UpdateSponsorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorBranding=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteSponsorBrandingURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteSponsorBranding=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.DeleteSponsorSecretURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets/{secretKey}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{secretKey}",""+r.secretKey),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteSponsorSecret=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/secrets/{secretKey}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{secretKey}",""+r.secretKey),void 0===r.secretKey?void d(new Error("Missing required  parameter: secretKey")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetSponsorAuthorizationCodesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/authorizationcodes";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorAuthorizationCodes=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/authorizationcodes",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSponsorCountsForDateRangeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/counts";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorCountsForDateRange=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/counts",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetSponsorDataByNameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/names/{sponsorName}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorName}",""+r.sponsorName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorDataByName=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/names/{sponsorName}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorName}",""+r.sponsorName),void 0===r.sponsorName?void d(new Error("Missing required  parameter: sponsorName")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetSponsorDataByRegistrationCodeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/authorizationcodes/{id}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{id}",""+r.id),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorDataByRegistrationCode=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/authorizationcodes/{id}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{id}",""+r.id),void 0===r.id?void d(new Error("Missing required  parameter: id")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.UpdateOrganizationAddressURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/address";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateOrganizationAddress=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/address",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateOrganizationDescriptionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/description";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateOrganizationDescription=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/description",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateOrganizationDigitalContractURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/digitalcontact";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateOrganizationDigitalContract=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/digitalcontact",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateOrganizationNameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateOrganizationName=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateOrganizationPhoneNumberURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/phonenumber";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateOrganizationPhoneNumber=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/phonenumber",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void u(new Error("Missing required  parameter: organizationId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UploadOrganizationBrandingLogoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding/logo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadOrganizationBrandingLogo=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding/logo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UploadOrganizationBrandingEmailLogoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding/emaillogo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{organizationId}",""+r.organizationId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadOrganizationBrandingEmailLogo=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/organizations/{organizationId}/branding/emaillogo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{organizationId}",""+r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UploadSponsorBrandingLogoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding/logo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadSponsorBrandingLogo=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding/logo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))})},e.prototype.UploadSponsorBrandingEmailLogoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding/emaillogo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadSponsorBrandingEmailLogo=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/branding/emaillogo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSignaledAlertsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/signaledalerts";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),void 0!==r.activeOnly&&(e.activeOnly=r.activeOnly),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSignaledAlerts=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/signaledalerts",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0===r.fromDate?void d(new Error("Missing required  parameter: fromDate")):(void 0!==r.toDate&&(i.toDate=r.toDate),void 0===r.toDate?void d(new Error("Missing required  parameter: toDate")):(void 0!==r.activeOnly&&(i.activeOnly=r.activeOnly),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.TestSmsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/testsms";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.TestSms=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/testsms",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e}(n),Lr=Ar,_r=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Gr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return _r(e,r),e.prototype.GetWebHooksURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetWebHooks=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateWebHookURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateWebHook=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.UpdateWebHookURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/{webHookId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{webHookId}",""+r.webHookId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateWebHook=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/{webHookId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{webHookId}",""+r.webHookId),void 0===r.webHookId?void u(new Error("Missing required  parameter: webHookId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.DeleteWebHookURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/{webHookId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{webHookId}",""+r.webHookId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteWebHook=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/{webHookId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{webHookId}",""+r.webHookId),void 0===r.webHookId?void d(new Error("Missing required  parameter: webHookId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.BulkUpdateWebHookPayloadTypesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/bulkupdate/{payloadType}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{payloadType}",""+r.payloadType),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.BulkUpdateWebHookPayloadTypes=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/bulkupdate/{payloadType}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{payloadType}",""+r.payloadType),void 0===r.payloadType?void u(new Error("Missing required  parameter: payloadType")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateWebHookAuthorizationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/authorization";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateWebHookAuthorization=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/webhooks/authorization",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e}(n),Br=Gr,Nr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Fr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Nr(e,r),e.prototype.GetSurveysURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSurveys=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.Create=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetDistributorSurveysURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorSurveys=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.CreateDistributorSurveyURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorSurvey=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/surveys",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.GetSurveyURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/surveys/{surveyId}";o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSurvey=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/surveys/{surveyId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void d(new Error("Missing required  parameter: surveyId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.GetDistributorSurveyURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys/{surveyId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorSurvey=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys/{surveyId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void d(new Error("Missing required  parameter: surveyId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSponsorSurveyURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorSurvey=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void d(new Error("Missing required  parameter: surveyId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.RenameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.Rename=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void u(new Error("Missing required  parameter: surveyId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.RenameDistributorSurveyURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys/{surveyId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameDistributorSurvey=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/surveys/{surveyId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void u(new Error("Missing required  parameter: surveyId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.UpdateBranchesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/branches";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateBranches=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/branches",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void u(new Error("Missing required  parameter: surveyId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateDistributorBranchesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys/{surveyId}/branches";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorBranches=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/surveys/{surveyId}/branches",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void u(new Error("Missing required  parameter: surveyId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.UpdateDistributorStateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/surveys/{surveyId}/state";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorState=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/surveys/{surveyId}/state",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void u(new Error("Missing required  parameter: surveyId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.UpdateStateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/state";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateState=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/state",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void u(new Error("Missing required  parameter: surveyId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateSponsorSurveyIdURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/sponsorsurveyid";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{surveyId}",""+r.surveyId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorSurveyId=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/surveys/{surveyId}/sponsorsurveyid",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{surveyId}",""+r.surveyId),void 0===r.surveyId?void u(new Error("Missing required  parameter: surveyId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e}(n),Wr=Fr,Hr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Xr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Hr(e,r),e.prototype.AddTagsToDistributorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}/tags";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddTagsToDistributorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}/tags",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.AddTagsToSponsorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/tags";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddTagsToSponsorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/tags",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.RemoveTagsFromDistributorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/tags";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveTagsFromDistributorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/tags",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeDistributorTaskContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}/content";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeDistributorTaskContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}/content",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.ChangeDistributorTaskDeactivatedStateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}/deactivated";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeDistributorTaskDeactivatedState=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}/deactivated",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.ChangeDistributorTaskDescriptionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}/description";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeDistributorTaskDescription=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}/description",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.ChangeDistributorTaskMeasurementURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}/measurement";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeDistributorTaskMeasurement=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}/measurement",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.ChangeDistributorTaskCodesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}/codes";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeDistributorTaskCodes=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}/codes",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.ChangeSponsorTaskCodesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/codes";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorTaskCodes=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/codes",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeSponsorTaskContentURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/content";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorTaskContent=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/content",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeSponsorTaskDeactivatedStateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/deactivated";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorTaskDeactivatedState=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/deactivated",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeSponsorTaskDescriptionURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/description";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorTaskDescription=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/description",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeSponsorTaskIdURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/sponsortaskid";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorTaskId=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/sponsortaskid",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.GetDistributorTasksURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorTasks=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.CreateDistributorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.ReplaceDistributorTaskTagURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasktags";o=o.replace("{distributorId}",""+r.distributorId),void 0!==r.tagName&&(e.tagName=r.tagName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ReplaceDistributorTaskTag=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasktags",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.tagName&&(a.tagName=r.tagName),void 0===r.tagName?void u(new Error("Missing required  parameter: tagName")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.CreateDistributorTaskTagURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasktags";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorTaskTag=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasktags",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.DeleteDistributorTaskTagURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasktags";o=o.replace("{distributorId}",""+r.distributorId),void 0!==r.tagName&&(e.tagName=r.tagName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorTaskTag=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasktags",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.tagName&&(i.tagName=r.tagName),void 0===r.tagName?void d(new Error("Missing required  parameter: tagName")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetSponsorTasksURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorTasks=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateSponsorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.CreateSponsorTaskAlertURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorTaskAlert=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.ReplaceSponsorTaskTagURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasktags";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.tagName&&(e.tagName=r.tagName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ReplaceSponsorTaskTag=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasktags",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.tagName&&(a.tagName=r.tagName),void 0===r.tagName?void u(new Error("Missing required  parameter: tagName")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.CreateSponsorTaskTagURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasktags";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorTaskTag=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasktags",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteSponsorTaskTagURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasktags";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.tagName&&(e.tagName=r.tagName),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteSponsorTaskTag=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasktags",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.tagName&&(i.tagName=r.tagName),void 0===r.tagName?void d(new Error("Missing required  parameter: tagName")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetDistributorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorTask=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{taskId}",""+r.taskId),void 0===r.taskId?void d(new Error("Missing required  parameter: taskId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.UpdateDistributorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.GetSponsorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorTask=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{taskId}",""+r.taskId),void 0===r.taskId?void d(new Error("Missing required  parameter: taskId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UpdateSponsorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateSponsorTaskAlertURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts/{alertId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),o=o.replace("{alertId}",""+r.alertId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorTaskAlert=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts/{alertId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(i=i.replace("{alertId}",""+r.alertId),void 0===r.alertId?void u(new Error("Missing required  parameter: alertId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.RemoveSponsorTaskAlertURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts/{alertId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),o=o.replace("{alertId}",""+r.alertId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveSponsorTaskAlert=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/alerts/{alertId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{taskId}",""+r.taskId),void 0===r.taskId?void d(new Error("Missing required  parameter: taskId")):(o=o.replace("{alertId}",""+r.alertId),void 0===r.alertId?void d(new Error("Missing required  parameter: alertId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.RenameDistributorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/tasks/{taskId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameDistributorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/tasks/{taskId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.RenameSponsorTaskURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/name";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{taskId}",""+r.taskId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RenameSponsorTask=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/tasks/{taskId}/name",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{taskId}",""+r.taskId),void 0===r.taskId?void u(new Error("Missing required  parameter: taskId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e}(n),Kr=Xr,Vr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Zr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Vr(e,r),e.prototype.CreateDistributorTreatmentTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorTreatmentTaskScheduleItems=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.DeleteDistributorTreatmentTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.taskScheduleItemIds&&(e.taskScheduleItemIds=r.taskScheduleItemIds),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorTreatmentTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.taskScheduleItemIds&&(i.taskScheduleItemIds=r.taskScheduleItemIds),void 0===r.taskScheduleItemIds?void d(new Error("Missing required  parameter: taskScheduleItemIds")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.PatchDistributorTreatmentTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.PatchDistributorTreatmentTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PATCH",t+o,void 0,a,i,n,d,s)))))})},e.prototype.CreateTreatmentTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateTreatmentTaskScheduleItems=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.DeleteTreatmentTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.taskScheduleItemIds&&(e.taskScheduleItemIds=r.taskScheduleItemIds),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteTreatmentTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.taskScheduleItemIds&&(i.taskScheduleItemIds=r.taskScheduleItemIds),void 0===r.taskScheduleItemIds?void d(new Error("Missing required  parameter: taskScheduleItemIds")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.PatchTreatmentTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.PatchTreatmentTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PATCH",t+o,void 0,a,i,n,d,s))))))})},e.prototype.CreateDistributorUntilCompleteTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitem";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorUntilCompleteTaskScheduleItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitem",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.CreateUntilCompleteTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitem";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateUntilCompleteTaskScheduleItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitem",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.CreateDistributorWeeklyTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorWeeklyTaskScheduleItems=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.DeleteDistributorWeeklyTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.taskScheduleItemIds&&(e.taskScheduleItemIds=r.taskScheduleItemIds),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorWeeklyTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.taskScheduleItemIds&&(i.taskScheduleItemIds=r.taskScheduleItemIds),void 0===r.taskScheduleItemIds?void d(new Error("Missing required  parameter: taskScheduleItemIds")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.PatchDistributorWeeklyTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.PatchDistributorWeeklyTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PATCH",t+o,void 0,a,i,n,d,s)))))})},e.prototype.CreateWeeklyTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateWeeklyTaskScheduleItems=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))))})},e.prototype.DeleteWeeklyTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.taskScheduleItemIds&&(e.taskScheduleItemIds=r.taskScheduleItemIds),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteWeeklyTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.taskScheduleItemIds&&(i.taskScheduleItemIds=r.taskScheduleItemIds),void 0===r.taskScheduleItemIds?void d(new Error("Missing required  parameter: taskScheduleItemIds")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.PatchWeeklyTaskScheduleItemsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.PatchWeeklyTaskScheduleItems=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PATCH",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetDistributorTreatmentTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorTreatmentTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateDistributorTreatmentTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorTreatmentTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))))})},e.prototype.DeleteDistributorTreatmentTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorTreatmentTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetTreatmentTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetTreatmentTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.UpdateTreatmentTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateTreatmentTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.DeleteTreatmentTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteTreatmentTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/treatmenttaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.DeleteDistributorUntilCompleteTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorUntilCompleteTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.DeleteUntilCompleteTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteUntilCompleteTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.GetDistributorWeeklyTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorWeeklyTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateDistributorWeeklyTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorWeeklyTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s))))))})},e.prototype.DeleteDistributorWeeklyTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorWeeklyTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetWeeklyTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetWeeklyTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.UpdateWeeklyTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0!==r.modelScheduledTime&&(e["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(e["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateWeeklyTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.modelScheduledTime&&(i["model.scheduledTime"]=r.modelScheduledTime),void 0!==r.modelScheduledTimePeriod&&(i["model.scheduledTimePeriod"]=r.modelScheduledTimePeriod),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.DeleteWeeklyTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteWeeklyTaskScheduleItem=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/weeklytaskscheduleitems/{taskScheduleItemId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(o=o.replace("{taskScheduleItemId}",""+r.taskScheduleItemId),void 0===r.taskScheduleItemId?void d(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))))})},e.prototype.UpdateDistributorUntilCompleteTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.taskScheduleItemId&&(e.taskScheduleItemId=r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorUntilCompleteTaskScheduleItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.taskScheduleItemId&&(a.taskScheduleItemId=r.taskScheduleItemId),void 0===r.taskScheduleItemId?void u(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.UpdateUntilCompleteTaskScheduleItemURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0!==r.taskScheduleItemId&&(e.taskScheduleItemId=r.taskScheduleItemId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateUntilCompleteTaskScheduleItem=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/untilcompletetaskscheduleitems",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.taskScheduleItemId&&(a.taskScheduleItemId=r.taskScheduleItemId),void 0===r.taskScheduleItemId?void u(new Error("Missing required  parameter: taskScheduleItemId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))))})},e}(n),Qr=Zr,Jr=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Yr=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return Jr(e,r),e.prototype.CreateDistributorTaskScheduleURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorTaskSchedule=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.CreateTaskScheduleURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateTaskSchedule=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.ClearTaskSchedulesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ClearTaskSchedules=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetDistributorTaskScheduleURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorTaskSchedule=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.RemoveDistributorTaskScheduleURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveDistributorTaskSchedule=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetTaskScheduleURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetTaskSchedule=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.RemoveTaskScheduleURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveTaskSchedule=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void d(new Error("Missing required  parameter: carePlanId")):(o=o.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void d(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateTaskScheduleNoteURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/note";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateTaskScheduleNote=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/note",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.UpdateDistributorTaskScheduleNoteURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/note";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorTaskScheduleNote=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/note",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateDistributorTaskScheduleTargetURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/target";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorTaskScheduleTarget=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/target",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateTaskScheduleTargetURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/target";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateTaskScheduleTarget=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/target",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.UpdateDistributorTaskScheduleRolesAllowedToRecordOutcomeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/rolesallowedtorecordoutcome";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorTaskScheduleRolesAllowedToRecordOutcome=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/rolesallowedtorecordoutcome",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateTaskScheduleRolesAllowedToRecordOutcomeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/rolesallowedtorecordoutcome";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateTaskScheduleRolesAllowedToRecordOutcome=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/rolesallowedtorecordoutcome",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.UpdateDistributorTaskScheduleIsDeactivatedURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/isdeactivated";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorTaskScheduleIsDeactivated=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/isdeactivated",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateTaskScheduleIsDeactivatedURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/isdeactivated";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{carePlanId}",""+r.carePlanId),o=o.replace("{taskScheduleId}",""+r.taskScheduleId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateTaskScheduleIsDeactivated=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/careplans/{carePlanId}/taskschedules/{taskScheduleId}/isdeactivated",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{carePlanId}",""+r.carePlanId),void 0===r.carePlanId?void u(new Error("Missing required  parameter: carePlanId")):(i=i.replace("{taskScheduleId}",""+r.taskScheduleId),void 0===r.taskScheduleId?void u(new Error("Missing required  parameter: taskScheduleId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e}(n),re=Yr,ee=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),te=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return ee(e,r),e.prototype.GetTimeZonesURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/timezones/{countryCode}";o=o.replace("{countryCode}",""+r.countryCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetTimeZones=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/timezones/{countryCode}",i={},a={},n={};return new Promise(function(s,d){if(a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{countryCode}",""+r.countryCode),void 0===r.countryCode)return void d(new Error("Missing required  parameter: countryCode"));r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),e.request("GET",t+o,void 0,a,i,n,d,s)})},e}(n),oe=te,ie=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),ae=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return ie(e,r),e.prototype.CreateTimeCardRecordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateTimeCardRecord=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e.prototype.GetCurrentTimeCardURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/current";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),void 0!==r.patientId&&(e.patientId=r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetCurrentTimeCard=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/current",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.patientId&&(i.patientId=r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateCurrentTimeCardURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/current";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateCurrentTimeCard=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/current",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.GetPatientTimeCardURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/timecards";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.patientId&&(e.patientId=r.patientId),void 0!==r.fromDate&&(e.fromDate=r.fromDate),void 0!==r.toDate&&(e.toDate=r.toDate),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetPatientTimeCard=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/timecards",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.patientId&&(i.patientId=r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.fromDate&&(i.fromDate=r.fromDate),void 0!==r.toDate&&(i.toDate=r.toDate),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetRecentTimeCardsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/recent";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),void 0!==r.patientId&&(e.patientId=r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetRecentTimeCards=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/recent",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.patientId&&(i.patientId=r.patientId),void 0===r.patientId?void d(new Error("Missing required  parameter: patientId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.GetTimeCardRecordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/{timeCardRecordId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),o=o.replace("{timeCardRecordId}",""+r.timeCardRecordId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetTimeCardRecord=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/{timeCardRecordId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(o=o.replace("{timeCardRecordId}",""+r.timeCardRecordId),void 0===r.timeCardRecordId?void d(new Error("Missing required  parameter: timeCardRecordId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))))})},e.prototype.UpdateTimeCardRecordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/{timeCardRecordId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),o=o.replace("{timeCardRecordId}",""+r.timeCardRecordId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateTimeCardRecord=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards/records/{timeCardRecordId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(i=i.replace("{timeCardRecordId}",""+r.timeCardRecordId),void 0===r.timeCardRecordId?void u(new Error("Missing required  parameter: timeCardRecordId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))))})},e.prototype.GetUserPatientTimeCardURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),void 0!==r.patientId&&(e.patientId=r.patientId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetUserPatientTimeCard=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timecards",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.patientId&&(i.patientId=r.patientId),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e}(n),ne=ae,se=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),de=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return se(e,r),e.prototype.AddRolesToSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/roles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddRolesToSponsorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.DeleteRolesFromSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/roles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteRolesFromSponsorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d))))))})},e.prototype.AffiliateUserToOrganizationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/organizations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AffiliateUserToOrganizations=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/organizations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.RemoveUserAffiliationToOrganizationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/organizations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.RemoveUserAffiliationToOrganizations=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/organizations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d))))))})},e.prototype.ArchiveSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/archive";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ArchiveSponsorUser=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/archive",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))})},e.prototype.ChangePasswordURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/password";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePassword=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/password",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.ChangeSponsorUserSettingsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/settings";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangeSponsorUserSettings=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/settings",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.GetDistributorUserListURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorUserList=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))})},e.prototype.CreateDistributorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users";o=o.replace("{distributorId}",""+r.distributorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateDistributorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/users",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))})},e.prototype.GetSponsorUserListURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.organizationId&&(e.organizationId=r.organizationId),void 0!==r.archived&&(e.archived=r.archived),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorUserList=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.organizationId&&(i.organizationId=r.organizationId),void 0!==r.archived&&(i.archived=r.archived),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateSponsorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.UploadSponsorUserPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadSponsorUserPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.DeleteSponsorUserPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteSponsorUserPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.GetSponsorUserAsyncURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorUserAsync=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UpdateSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateSponsorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.GetSponsorUserListWithoutDistributorURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/sponsors/{sponsorId}/users";o=o.replace("{sponsorId}",""+r.sponsorId),void 0!==r.organizationId&&(e.organizationId=r.organizationId),void 0!==r.archived&&(e.archived=r.archived),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorUserListWithoutDistributor=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/sponsors/{sponsorId}/users",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.organizationId&&(i.organizationId=r.organizationId),void 0===r.organizationId?void d(new Error("Missing required  parameter: organizationId")):(void 0!==r.archived&&(i.archived=r.archived),void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.UnarchiveSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/unarchive";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UnarchiveSponsorUser=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/unarchive",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("PUT",t+o,void 0,a,i,n,d,s)))))})},e.prototype.UpdateUserFullNameURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/fullname";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateUserFullName=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/fullname",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateUserAddressURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/address";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateUserAddress=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/address",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.UpdateUserTimeZoneURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timezone";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateUserTimeZone=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/{userId}/timezone",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))))})},e.prototype.AcceptUserInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations/{invitationCode}/acceptance";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AcceptUserInvitation=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations/{invitationCode}/acceptance",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void u(new Error("Missing required  parameter: invitationCode")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.GetUserInvitationsURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetUserInvitations=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.CreateUserInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateUserInvitation=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteUserInvitationURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations/{invitationCode}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{invitationCode}",""+r.invitationCode),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteUserInvitation=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/users/invitations/{invitationCode}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{invitationCode}",""+r.invitationCode),void 0===r.invitationCode?void d(new Error("Missing required  parameter: invitationCode")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s)))))})},e.prototype.ResendInvitationsByCodeURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/user/invitations/coderesend";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ResendInvitationsByCode=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/user/invitations/coderesend",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.ResendInvitationsByDateURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/user/invitations/dateresend";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ResendInvitationsByDate=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/user/invitations/dateresend",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e}(n),ue=de,pe=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),ce=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return pe(e,r),e.prototype.AddRolesToDistributorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}/roles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddRolesToDistributorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/users/{userId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteRolesFromDistributorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}/roles";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteRolesFromDistributorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/users/{userId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d)))))})},e.prototype.AddRolesToSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/sponsors/{sponsorId}/users/{userId}/roles";o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AddRolesToSponsorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/sponsors/{sponsorId}/users/{userId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.DeleteRolesFromSponsorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/sponsors/{sponsorId}/users/{userId}/roles";o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteRolesFromSponsorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/sponsors/{sponsorId}/users/{userId}/roles",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("DELETE",o+i,e,n,a,s,u,d)))))})},e.prototype.ChangePasswordInternalURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/users/{userId}/password";o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.ChangePasswordInternal=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/users/{userId}/password",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d))))})},e.prototype.UploadDistributorUserPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UploadDistributorUserPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s))))})},e.prototype.DeleteDistributorUserPhotoURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}/photo";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.DeleteDistributorUserPhoto=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}/photo",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("DELETE",t+o,void 0,a,i,n,d,s))))})},e.prototype.GetDistributorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetDistributorUser=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e.prototype.UpdateDistributorUserURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/users/{userId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.UpdateDistributorUser=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/users/{userId}",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{userId}",""+r.userId),void 0===r.userId?void u(new Error("Missing required  parameter: userId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),void t.request("PUT",o+i,e,n,a,s,u,d)))))})},e.prototype.GetSponsorUserAsyncURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/sponsors/{sponsorId}/users/{userId}";o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{userId}",""+r.userId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetSponsorUserAsync=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/sponsors/{sponsorId}/users/{userId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{userId}",""+r.userId),void 0===r.userId?void d(new Error("Missing required  parameter: userId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s))))})},e}(n),me=ce,le=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Ie=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return le(e,r),e.prototype.CreateVideoCallURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.CreateVideoCall=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d)))))})},e.prototype.GetVideoCallURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{roomId}",""+r.roomId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]});var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.GetVideoCall=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{roomId}",""+r.roomId),void 0===r.roomId?void d(new Error("Missing required  parameter: roomId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),void e.request("GET",t+o,void 0,a,i,n,d,s)))))})},e.prototype.AcceptVideoCallURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}/accept";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{roomId}",""+r.roomId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.AcceptVideoCall=function(r){var e=this,t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}/accept",i={},a={},n={};return new Promise(function(s,d){return a.Accept="application/json, text/json, application/xml, text/xml",a["Content-Type"]="",o=o.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void d(new Error("Missing required  parameter: distributorId")):(o=o.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void d(new Error("Missing required  parameter: sponsorId")):(o=o.replace("{roomId}",""+r.roomId),void 0===r.roomId?void d(new Error("Missing required  parameter: roomId")):(void 0!==r.authorization&&(a.Authorization=r.authorization),void 0===r.authorization?void d(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){i[e]=r.$queryParameters[e]}),n=i,i={},void e.request("POST",t+o,void 0,a,i,n,d,s)))))})},e.prototype.EndVideoCallURL=function(r){var e={},t=r.$domain?r.$domain:this.domain,o="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}/end";o=o.replace("{distributorId}",""+r.distributorId),o=o.replace("{sponsorId}",""+r.sponsorId),o=o.replace("{roomId}",""+r.roomId),r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(t){e[t]=r.$queryParameters[t]}),e={};var i=Object.keys(e);return t+o+(i.length>0?"?"+i.map(function(r){return r+"="+encodeURIComponent(e[r])}).join("&"):"")},e.prototype.EndVideoCall=function(r){var e,t=this,o=r.$domain?r.$domain:this.domain,i="/api/distributors/{distributorId}/sponsors/{sponsorId}/videocall/{roomId}/end",a={},n={},s={};return new Promise(function(d,u){return n.Accept="application/json, text/json, application/xml, text/xml",n["Content-Type"]="application/json,text/json,application/xml,text/xml,application/x-www-form-urlencoded",i=i.replace("{distributorId}",""+r.distributorId),void 0===r.distributorId?void u(new Error("Missing required  parameter: distributorId")):(i=i.replace("{sponsorId}",""+r.sponsorId),void 0===r.sponsorId?void u(new Error("Missing required  parameter: sponsorId")):(i=i.replace("{roomId}",""+r.roomId),void 0===r.roomId?void u(new Error("Missing required  parameter: roomId")):(void 0!==r.model&&(e=r.model),void 0===r.model?void u(new Error("Missing required  parameter: model")):(void 0!==r.authorization&&(n.Authorization=r.authorization),void 0===r.authorization?void u(new Error("Missing required  parameter: authorization")):(r.$queryParameters&&Object.keys(r.$queryParameters).forEach(function(e){a[e]=r.$queryParameters[e]}),s=a,a={},void t.request("POST",o+i,e,n,a,s,u,d))))))})},e}(n),ve=Ie;t.d(e,"ApiClass",function(){return a}),t.d(e,"Accounts",function(){return u}),t.d(e,"Audit",function(){return m}),t.d(e,"Beacon",function(){return v}),t.d(e,"Branding",function(){return b}),t.d(e,"CampaignMonitor",function(){return P}),t.d(e,"CareCenter",function(){return j}),t.d(e,"CareCenterInternal",function(){return x}),t.d(e,"CarePlans",function(){return C}),t.d(e,"Categories",function(){return T}),t.d(e,"ChatBot",function(){return S}),t.d(e,"ClientDataExport",function(){return L}),t.d(e,"ConversationLists",function(){return B}),t.d(e,"ConversationParties",function(){return W}),t.d(e,"Conversations",function(){return K}),t.d(e,"Distributors",function(){return Q}),t.d(e,"IntegrationManagement",function(){return rr}),t.d(e,"Invitations",function(){return or}),t.d(e,"Patient",function(){return nr}),t.d(e,"PatientIndex",function(){return ur}),t.d(e,"PatientInternal",function(){return mr}),t.d(e,"PatientInvitations",function(){return vr}),t.d(e,"PatientProfileDefinitions",function(){return br}),t.d(e,"PatientProfiles",function(){return Pr}),t.d(e,"PatientSchedules",function(){return jr}),t.d(e,"PatientSchedulesInternal",function(){return xr}),t.d(e,"Reports",function(){return Cr}),t.d(e,"SharedCare",function(){return Tr}),t.d(e,"SharedCareInternal",function(){return Sr}),t.d(e,"Sponsors",function(){return Lr}),t.d(e,"SponsorWebHook",function(){return Br}),t.d(e,"Surveys",function(){return Wr}),t.d(e,"Tasks",function(){return Kr}),t.d(e,"TaskScheduleItems",function(){return Qr}),t.d(e,"TaskSchedules",function(){return re}),t.d(e,"Time",function(){return oe}),t.d(e,"TimeCard",function(){return ne}),t.d(e,"User",function(){return ue}),t.d(e,"UserInternal",function(){return me}),t.d(e,"VideoCall",function(){return ve})},function(r,e,t){function o(){}function i(r){if(!v(r))return r;var e=[];for(var t in r)a(e,t,r[t]);return e.join("&")}function a(r,e,t){if(null!=t)if(Array.isArray(t))t.forEach(function(t){a(r,e,t)});else if(v(t))for(var o in t)a(r,e+"["+o+"]",t[o]);else r.push(encodeURIComponent(e)+"="+encodeURIComponent(t));else null===t&&r.push(encodeURIComponent(e))}function n(r){for(var e,t,o={},i=r.split("&"),a=0,n=i.length;a<n;++a)e=i[a],t=e.indexOf("="),-1==t?o[decodeURIComponent(e)]="":o[decodeURIComponent(e.slice(0,t))]=decodeURIComponent(e.slice(t+1));return o}function s(r){var e,t,o,i,a=r.split(/\r?\n/),n={};a.pop();for(var s=0,d=a.length;s<d;++s)t=a[s],e=t.indexOf(":"),o=t.slice(0,e).toLowerCase(),i=f(t.slice(e+1)),n[o]=i;return n}function d(r){return/[\/+]json\b/.test(r)}function u(r){this.req=r,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var e=this.xhr.status;1223===e&&(e=204),this._setStatusProperties(e),this.header=this.headers=s(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&r._responseType?this.body=this.xhr.response:this.body="HEAD"!=this.req.method?this._parseBody(this.text?this.text:this.xhr.response):null}function p(r,e){var t=this;this._query=this._query||[],this.method=r,this.url=e,this.header={},this._header={},this.on("end",function(){var r=null,e=null;try{e=new u(t)}catch(e){return r=new Error("Parser is unable to parse the response"),r.parse=!0,r.original=e,t.xhr?(r.rawResponse=void 0===t.xhr.responseType?t.xhr.responseText:t.xhr.response,r.status=t.xhr.status?t.xhr.status:null,r.statusCode=r.status):(r.rawResponse=null,r.status=null),t.callback(r)}t.emit("response",e);var o;try{t._isResponseOK(e)||(o=new Error(e.statusText||"Unsuccessful HTTP response"),o.original=r,o.response=e,o.status=e.status)}catch(r){o=r}o?t.callback(o,e):t.callback(null,e)})}function c(r,e,t){var o=b("DELETE",r);return"function"==typeof e&&(t=e,e=null),e&&o.send(e),t&&o.end(t),o}var m;"undefined"!=typeof window?m=window:"undefined"!=typeof self?m=self:(console.warn("Using browser-only version of superagent in non-browser environment"),m=this);var l=t(4),I=t(5),v=t(0),h=t(6),y=t(8),b=e=r.exports=function(r,t){return"function"==typeof t?new e.Request("GET",r).end(t):1==arguments.length?new e.Request("GET",r):new e.Request(r,t)};e.Request=p,b.getXHR=function(){if(!(!m.XMLHttpRequest||m.location&&"file:"==m.location.protocol&&m.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(r){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(r){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(r){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(r){}throw Error("Browser-only version of superagent could not find XHR")};var f="".trim?function(r){return r.trim()}:function(r){return r.replace(/(^\s*|\s*$)/g,"")};b.serializeObject=i,b.parseString=n,b.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},b.serialize={"application/x-www-form-urlencoded":i,"application/json":JSON.stringify},b.parse={"application/x-www-form-urlencoded":n,"application/json":JSON.parse},h(u.prototype),u.prototype._parseBody=function(r){var e=b.parse[this.type];return this.req._parser?this.req._parser(this,r):(!e&&d(this.type)&&(e=b.parse["application/json"]),e&&r&&(r.length||r instanceof Object)?e(r):null)},u.prototype.toError=function(){var r=this.req,e=r.method,t=r.url,o="cannot "+e+" "+t+" ("+this.status+")",i=new Error(o);return i.status=this.status,i.method=e,i.url=t,i},b.Response=u,l(p.prototype),I(p.prototype),p.prototype.type=function(r){return this.set("Content-Type",b.types[r]||r),this},p.prototype.accept=function(r){return this.set("Accept",b.types[r]||r),this},p.prototype.auth=function(r,e,t){switch("object"==typeof e&&null!==e&&(t=e),t||(t={type:"function"==typeof btoa?"basic":"auto"}),t.type){case"basic":this.set("Authorization","Basic "+btoa(r+":"+e));break;case"auto":this.username=r,this.password=e;break;case"bearer":this.set("Authorization","Bearer "+r)}return this},p.prototype.query=function(r){return"string"!=typeof r&&(r=i(r)),r&&this._query.push(r),this},p.prototype.attach=function(r,e,t){if(e){if(this._data)throw Error("superagent can't mix .send() and .attach()");this._getFormData().append(r,e,t||e.name)}return this},p.prototype._getFormData=function(){return this._formData||(this._formData=new m.FormData),this._formData},p.prototype.callback=function(r,e){if(this._maxRetries&&this._retries++<this._maxRetries&&y(r,e))return this._retry();var t=this._callback;this.clearTimeout(),r&&(this._maxRetries&&(r.retries=this._retries-1),this.emit("error",r)),t(r,e)},p.prototype.crossDomainError=function(){var r=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");r.crossDomain=!0,r.status=this.status,r.method=this.method,r.url=this.url,this.callback(r)},p.prototype.buffer=p.prototype.ca=p.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},p.prototype.pipe=p.prototype.write=function(){throw Error("Streaming is not supported in browser version of superagent")},p.prototype._isHost=function(r){return r&&"object"==typeof r&&!Array.isArray(r)&&"[object Object]"!==Object.prototype.toString.call(r)},p.prototype.end=function(r){return this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=r||o,this._finalizeQueryString(),this._end()},p.prototype._end=function(){var r=this,e=this.xhr=b.getXHR(),t=this._formData||this._data;this._setTimeouts(),e.onreadystatechange=function(){var t=e.readyState;if(t>=2&&r._responseTimeoutTimer&&clearTimeout(r._responseTimeoutTimer),4==t){var o;try{o=e.status}catch(r){o=0}if(!o){if(r.timedout||r._aborted)return;return r.crossDomainError()}r.emit("end")}};var o=function(e,t){t.total>0&&(t.percent=t.loaded/t.total*100),t.direction=e,r.emit("progress",t)};if(this.hasListeners("progress"))try{e.onprogress=o.bind(null,"download"),e.upload&&(e.upload.onprogress=o.bind(null,"upload"))}catch(r){}try{this.username&&this.password?e.open(this.method,this.url,!0,this.username,this.password):e.open(this.method,this.url,!0)}catch(r){return this.callback(r)}if(this._withCredentials&&(e.withCredentials=!0),!this._formData&&"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof t&&!this._isHost(t)){var i=this._header["content-type"],a=this._serializer||b.serialize[i?i.split(";")[0]:""];!a&&d(i)&&(a=b.serialize["application/json"]),a&&(t=a(t))}for(var n in this.header)null!=this.header[n]&&this.header.hasOwnProperty(n)&&e.setRequestHeader(n,this.header[n]);return this._responseType&&(e.responseType=this._responseType),this.emit("request",this),e.send(void 0!==t?t:null),this},b.get=function(r,e,t){var o=b("GET",r);return"function"==typeof e&&(t=e,e=null),e&&o.query(e),t&&o.end(t),o},b.head=function(r,e,t){var o=b("HEAD",r);return"function"==typeof e&&(t=e,e=null),e&&o.query(e),t&&o.end(t),o},b.options=function(r,e,t){var o=b("OPTIONS",r);return"function"==typeof e&&(t=e,e=null),e&&o.send(e),t&&o.end(t),o},b.del=c,b.delete=c,b.patch=function(r,e,t){var o=b("PATCH",r);return"function"==typeof e&&(t=e,e=null),e&&o.send(e),t&&o.end(t),o},b.post=function(r,e,t){var o=b("POST",r);return"function"==typeof e&&(t=e,e=null),e&&o.send(e),t&&o.end(t),o},b.put=function(r,e,t){var o=b("PUT",r);return"function"==typeof e&&(t=e,e=null),e&&o.send(e),t&&o.end(t),o}},function(r,e,t){function o(r){if(r)return i(r)}function i(r){for(var e in o.prototype)r[e]=o.prototype[e];return r}r.exports=o,o.prototype.on=o.prototype.addEventListener=function(r,e){return this._callbacks=this._callbacks||{},(this._callbacks["$"+r]=this._callbacks["$"+r]||[]).push(e),this},o.prototype.once=function(r,e){function t(){this.off(r,t),e.apply(this,arguments)}return t.fn=e,this.on(r,t),this},o.prototype.off=o.prototype.removeListener=o.prototype.removeAllListeners=o.prototype.removeEventListener=function(r,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var t=this._callbacks["$"+r];if(!t)return this;if(1==arguments.length)return delete this._callbacks["$"+r],this;for(var o,i=0;i<t.length;i++)if((o=t[i])===e||o.fn===e){t.splice(i,1);break}return this},o.prototype.emit=function(r){this._callbacks=this._callbacks||{};var e=[].slice.call(arguments,1),t=this._callbacks["$"+r];if(t){t=t.slice(0);for(var o=0,i=t.length;o<i;++o)t[o].apply(this,e)}return this},o.prototype.listeners=function(r){return this._callbacks=this._callbacks||{},this._callbacks["$"+r]||[]},o.prototype.hasListeners=function(r){return!!this.listeners(r).length}},function(r,e,t){function o(r){if(r)return i(r)}function i(r){for(var e in o.prototype)r[e]=o.prototype[e];return r}var a=t(0);r.exports=o,o.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,this},o.prototype.parse=function(r){return this._parser=r,this},o.prototype.responseType=function(r){return this._responseType=r,this},o.prototype.serialize=function(r){return this._serializer=r,this},o.prototype.timeout=function(r){if(!r||"object"!=typeof r)return this._timeout=r,this._responseTimeout=0,this;for(var e in r)switch(e){case"deadline":this._timeout=r.deadline;break;case"response":this._responseTimeout=r.response;break;default:console.warn("Unknown timeout option",e)}return this},o.prototype.retry=function(r){return 0!==arguments.length&&!0!==r||(r=1),r<=0&&(r=0),this._maxRetries=r,this._retries=0,this},o.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this._end()},o.prototype.then=function(r,e){if(!this._fullfilledPromise){var t=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise(function(r,e){t.end(function(t,o){t?e(t):r(o)})})}return this._fullfilledPromise.then(r,e)},o.prototype.catch=function(r){return this.then(void 0,r)},o.prototype.use=function(r){return r(this),this},o.prototype.ok=function(r){if("function"!=typeof r)throw Error("Callback required");return this._okCallback=r,this},o.prototype._isResponseOK=function(r){return!!r&&(this._okCallback?this._okCallback(r):r.status>=200&&r.status<300)},o.prototype.get=function(r){return this._header[r.toLowerCase()]},o.prototype.getHeader=o.prototype.get,o.prototype.set=function(r,e){if(a(r)){for(var t in r)this.set(t,r[t]);return this}return this._header[r.toLowerCase()]=e,this.header[r]=e,this},o.prototype.unset=function(r){return delete this._header[r.toLowerCase()],delete this.header[r],this},o.prototype.field=function(r,e){if(null===r||void 0===r)throw new Error(".field(name, val) name can not be empty");if(this._data&&console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"),a(r)){for(var t in r)this.field(t,r[t]);return this}if(Array.isArray(e)){for(var o in e)this.field(r,e[o]);return this}if(null===e||void 0===e)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof e&&(e=""+e),this._getFormData().append(r,e),this},o.prototype.abort=function(){return this._aborted?this:(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort"),this)},o.prototype.withCredentials=function(r){return void 0==r&&(r=!0),this._withCredentials=r,this},o.prototype.redirects=function(r){return this._maxRedirects=r,this},o.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},o.prototype.send=function(r){var e=a(r),t=this._header["content-type"];if(this._formData&&console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"),e&&!this._data)Array.isArray(r)?this._data=[]:this._isHost(r)||(this._data={});else if(r&&this._data&&this._isHost(this._data))throw Error("Can't merge these send calls");if(e&&a(this._data))for(var o in r)this._data[o]=r[o];else"string"==typeof r?(t||this.type("form"),t=this._header["content-type"],this._data="application/x-www-form-urlencoded"==t?this._data?this._data+"&"+r:r:(this._data||"")+r):this._data=r;return!e||this._isHost(r)?this:(t||this.type("json"),this)},o.prototype.sortQuery=function(r){return this._sort=void 0===r||r,this},o.prototype._finalizeQueryString=function(){var r=this._query.join("&");if(r&&(this.url+=(this.url.indexOf("?")>=0?"&":"?")+r),this._query.length=0,this._sort){var e=this.url.indexOf("?");if(e>=0){var t=this.url.substring(e+1).split("&");"function"==typeof this._sort?t.sort(this._sort):t.sort(),this.url=this.url.substring(0,e)+"?"+t.join("&")}}},o.prototype._appendQueryString=function(){console.trace("Unsupported")},o.prototype._timeoutError=function(r,e,t){if(!this._aborted){var o=new Error(r+e+"ms exceeded");o.timeout=e,o.code="ECONNABORTED",o.errno=t,this.timedout=!0,this.abort(),this.callback(o)}},o.prototype._setTimeouts=function(){var r=this;this._timeout&&!this._timer&&(this._timer=setTimeout(function(){r._timeoutError("Timeout of ",r._timeout,"ETIME")},this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout(function(){r._timeoutError("Response timeout of ",r._responseTimeout,"ETIMEDOUT")},this._responseTimeout))}},function(r,e,t){function o(r){if(r)return i(r)}function i(r){for(var e in o.prototype)r[e]=o.prototype[e];return r}var a=t(7);r.exports=o,o.prototype.get=function(r){return this.header[r.toLowerCase()]},o.prototype._setHeaderProperties=function(r){var e=r["content-type"]||"";this.type=a.type(e);var t=a.params(e);for(var o in t)this[o]=t[o];this.links={};try{r.link&&(this.links=a.parseLinks(r.link))}catch(r){}},o.prototype._setStatusProperties=function(r){var e=r/100|0;this.status=this.statusCode=r,this.statusType=e,this.info=1==e,this.ok=2==e,this.redirect=3==e,this.clientError=4==e,this.serverError=5==e,this.error=(4==e||5==e)&&this.toError(),this.accepted=202==r,this.noContent=204==r,this.badRequest=400==r,this.unauthorized=401==r,this.notAcceptable=406==r,this.forbidden=403==r,this.notFound=404==r}},function(r,e){e.type=function(r){return r.split(/ *; */).shift()},e.params=function(r){return r.split(/ *; */).reduce(function(r,e){var t=e.split(/ *= */),o=t.shift(),i=t.shift();return o&&i&&(r[o]=i),r},{})},e.parseLinks=function(r){return r.split(/ *, */).reduce(function(r,e){var t=e.split(/ *; */),o=t[0].slice(1,-1);return r[t[1].split(/ *= */)[1].slice(1,-1)]=o,r},{})},e.cleanHeader=function(r,e){return delete r["content-type"],delete r["content-length"],delete r["transfer-encoding"],delete r.host,e&&delete r.cookie,r}},function(r,e){var t=["ECONNRESET","ETIMEDOUT","EADDRINFO","ESOCKETTIMEDOUT"];r.exports=function(r,e){return!!(r&&r.code&&~t.indexOf(r.code))||(!!(e&&e.status&&e.status>=500)||(!!(r&&"timeout"in r&&"ECONNABORTED"==r.code)||!!(r&&"crossDomain"in r)))}}])});
//# sourceMappingURL=aw-api.min.js.map