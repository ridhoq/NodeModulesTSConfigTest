import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class Surveys
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class Surveys extends ApiClass {
    GetSurveysURL(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves a collection of surveys for a sponsor.
     * @method
     * @name Surveys#GetSurveys
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} authorization - access token
     */
    GetSurveys(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.SurveyCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a new survey.
     * @method
     * @name Surveys#Create
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {} model - The survey creation model.
     * @param {string} authorization - access token
     */
    Create(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.SurveyCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetDistributorSurveysURL(parameters: {
        distributorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves a collection of surveys for a distributor.
     * @method
     * @name Surveys#GetDistributorSurveys
     * @param {string} distributorId - The distributor identifier.
     * @param {string} authorization - access token
     */
    GetDistributorSurveys(parameters: {
        distributorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateDistributorSurveyURL(parameters: {
        distributorId: string;
        model: Api.SurveyCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a new survey.
     * @method
     * @name Surveys#CreateDistributorSurvey
     * @param {string} distributorId - The distributor identifier.
     * @param {} model - The survey creation model.
     * @param {string} authorization - access token
     */
    CreateDistributorSurvey(parameters: {
        distributorId: string;
        model: Api.SurveyCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetSurveyURL(parameters: {
        surveyId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves a survey.
     * @method
     * @name Surveys#GetSurvey
     * @param {string} surveyId - The survey identifier.
     * @param {string} authorization - access token
     */
    GetSurvey(parameters: {
        surveyId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetDistributorSurveyURL(parameters: {
        distributorId: string;
        surveyId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves a survey.
     * @method
     * @name Surveys#GetDistributorSurvey
     * @param {string} distributorId - The distributor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {string} authorization - access token
     */
    GetDistributorSurvey(parameters: {
        distributorId: string;
        surveyId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetSponsorSurveyURL(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves a survey.
     * @method
     * @name Surveys#GetSponsorSurvey
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {string} authorization - access token
     */
    GetSponsorSurvey(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RenameURL(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that renames a survey.
     * @method
     * @name Surveys#Rename
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {} model - The name model.
     * @param {string} authorization - access token
     */
    Rename(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RenameDistributorSurveyURL(parameters: {
        distributorId: string;
        surveyId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that renames a survey.
     * @method
     * @name Surveys#RenameDistributorSurvey
     * @param {string} distributorId - The distributor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {} model - The name model.
     * @param {string} authorization - access token
     */
    RenameDistributorSurvey(parameters: {
        distributorId: string;
        surveyId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateBranchesURL(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.SurveyBranchesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates the branches of an existing survey.
     * @method
     * @name Surveys#UpdateBranches
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {} model - The survey's branches.
     * @param {string} authorization - access token
     */
    UpdateBranches(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.SurveyBranchesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateDistributorBranchesURL(parameters: {
        distributorId: string;
        surveyId: string;
        model: Api.SurveyBranchesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates the branches of an existing survey.
     * @method
     * @name Surveys#UpdateDistributorBranches
     * @param {string} distributorId - The distributor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {} model - The survey's branches.
     * @param {string} authorization - access token
     */
    UpdateDistributorBranches(parameters: {
        distributorId: string;
        surveyId: string;
        model: Api.SurveyBranchesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateDistributorStateURL(parameters: {
        distributorId: string;
        surveyId: string;
        model: Api.SurveyStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that activates an existing survey.
     * @method
     * @name Surveys#UpdateDistributorState
     * @param {string} distributorId - The distributor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {} model - The survey state model.
     * @param {string} authorization - access token
     */
    UpdateDistributorState(parameters: {
        distributorId: string;
        surveyId: string;
        model: Api.SurveyStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateStateURL(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.SurveyStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that activates an existing survey.
     * @method
     * @name Surveys#UpdateState
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {} model - The survey state model.
     * @param {string} authorization - access token
     */
    UpdateState(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.SurveyStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateSponsorSurveyIdURL(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.SurveySponsorSurveyIdBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * Responsible for updating the survey's sponsor survey id
     * @method
     * @name Surveys#UpdateSponsorSurveyId
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} surveyId - The survey identifier.
     * @param {} model - The survey sponsor survey id model.
     */
    UpdateSponsorSurveyId(parameters: {
        distributorId: string;
        sponsorId: string;
        surveyId: string;
        model: Api.SurveySponsorSurveyIdBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
