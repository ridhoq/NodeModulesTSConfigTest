import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class TimeCard
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class TimeCard extends ApiClass {
    CreateTimeCardRecordURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        model: Api.TimeCardRecordCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that creates time card entries. Requires a checkin record,
                    may optionally include a checkout record.
    * @method
    * @name TimeCard#CreateTimeCardRecord
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} userId - The user identifier.
         * @param {} model - The time card record to create.
         * @param {string} authorization - access token
    */
    CreateTimeCardRecord(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        model: Api.TimeCardRecordCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetCurrentTimeCardURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves the current time card for a user (if a time card exists)
                    for a patient.
    * @method
    * @name TimeCard#GetCurrentTimeCard
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} userId - The user identifier.
         * @param {string} patientId - Required - the  patient id must be specified
         * @param {string} authorization - access token
    */
    GetCurrentTimeCard(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateCurrentTimeCardURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        model: Api.CurrentTimeCardActionBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * If the user has an existing time
     * @method
     * @name TimeCard#UpdateCurrentTimeCard
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} userId - The user identifier.
     * @param {} model - Requested update to the current time card.
     * @param {string} authorization - access token
     */
    UpdateCurrentTimeCard(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        model: Api.CurrentTimeCardActionBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetPatientTimeCardURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        fromDate?: string;
        toDate?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves the time card for a patient, showing all of a given sponsor's
                    user  interactions with that patient.
    * @method
    * @name TimeCard#GetPatientTimeCard
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} patientId - Filter to a single patient
         * @param {string} fromDate - The beginning point, in UTC, from which to search for time cards, inclusive. May be omitted
         * @param {string} toDate - The endpoints point, in UTC, to which to search for time cards, inclusive. May be omitted
         * @param {string} authorization - access token
    */
    GetPatientTimeCard(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        fromDate?: string;
        toDate?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetRecentTimeCardsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves recent time card records for a user/patient. Generally, that
                    means records during the 24 hours prior to the most recent time card entry
    * @method
    * @name TimeCard#GetRecentTimeCards
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} userId - The user identifier.
         * @param {string} patientId - Required - the  patient id must be specified
         * @param {string} authorization - access token
    */
    GetRecentTimeCards(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetTimeCardRecordURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        timeCardRecordId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves the time card record corresponding to a particular id.
     * @method
     * @name TimeCard#GetTimeCardRecord
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} userId - The user identifier.
     * @param {string} timeCardRecordId - The time card record identifier.
     * @param {string} authorization - access token
     */
    GetTimeCardRecord(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        timeCardRecordId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateTimeCardRecordURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        timeCardRecordId: string;
        model: Api.TimeCardRecordUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that updates time card record actions given a time card id.
                    All values for the action must be supplied, or existing data will be
                    blanked.
    * @method
    * @name TimeCard#UpdateTimeCardRecord
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} userId - The user identifier.
         * @param {string} timeCardRecordId - The time card record identifier.
         * @param {} model - The time card record update.
         * @param {string} authorization - access token
    */
    UpdateTimeCardRecord(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        timeCardRecordId: string;
        model: Api.TimeCardRecordUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetUserPatientTimeCardURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        patientId?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves the time card for a user's interactions with a patient
     * @method
     * @name TimeCard#GetUserPatientTimeCard
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} userId - The user identifier.
     * @param {string} patientId - Optional - if not specified retrieves all timecards for all patients
     * @param {string} authorization - access token
     */
    GetUserPatientTimeCard(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        patientId?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
