import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class SharedCare
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class SharedCare extends ApiClass {
    GetSharedCareUsersReportURL(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * Retrieves a list of shared care users and who invited them.
     * @method
     * @name SharedCare#GetSharedCareUsersReport
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} authorization - access token
     */
    GetSharedCareUsersReport(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    AcceptSharedCareInvitationForNewPatientURL(parameters: {
        invitationCode: string;
        model: Api.SharedCareInvitationAcceptBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that allows new users to accept a shared care invitation they've received.
     * @method
     * @name SharedCare#AcceptSharedCareInvitationForNewPatient
     * @param {string} invitationCode - The invitation code.
     * @param {} model - The shared care invitation acceptance model.
     */
    AcceptSharedCareInvitationForNewPatient(parameters: {
        invitationCode: string;
        model: Api.SharedCareInvitationAcceptBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetSharedCareInvitationURL(parameters: {
        invitationCode: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves the specified shared care invitation.
     * @method
     * @name SharedCare#GetSharedCareInvitation
     * @param {string} invitationCode - The invitation code.
     */
    GetSharedCareInvitation(parameters: {
        invitationCode: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    AcceptSharedCareInvitationForExistingPatientURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that allows existing Patient IO Patients
                    to accept a shared care invitation they've received.
    * @method
    * @name SharedCare#AcceptSharedCareInvitationForExistingPatient
         * @param {string} distributorId - The distributor identifier
         * @param {string} sponsorId - The sponsor identifier
         * @param {string} patientId - The invited's patient identifier (can be, either, unique to PatientIO or to the sponsor).
         * @param {string} invitationCode - The invitation code.
         * @param {string} authorization - access token
    */
    AcceptSharedCareInvitationForExistingPatient(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeOutgoingSharedCareMemberPermissionsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        sharedCarePatientId: string;
        model: Api.SharedCarePermissionsBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that changes the shared care patient permissions.
     * @method
     * @name SharedCare#ChangeOutgoingSharedCareMemberPermissions
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} sharedCarePatientId - The shared care patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {} model - The shared care permissions model.
     * @param {string} authorization - access token
     */
    ChangeOutgoingSharedCareMemberPermissions(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        sharedCarePatientId: string;
        model: Api.SharedCarePermissionsBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RemoveOutgoingSharedCareMemberURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        sharedCarePatientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that removes shared care rights from a patient, for a relation.
     * @method
     * @name SharedCare#RemoveOutgoingSharedCareMember
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} sharedCarePatientId - The shared care patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} authorization - access token
     */
    RemoveOutgoingSharedCareMember(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        sharedCarePatientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    DeclineSharedCareInvitationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that declines a shared care invitation.
     * @method
     * @name SharedCare#DeclineSharedCareInvitation
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} invitationCode - The invitation code.
     * @param {string} authorization - access token
     */
    DeclineSharedCareInvitation(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetPendingReceivedSharedCareInvitationsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves a patient's received shared care invitations.
     * @method
     * @name SharedCare#GetPendingReceivedSharedCareInvitations
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} authorization - access token
     */
    GetPendingReceivedSharedCareInvitations(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RemovePatientFromIncomingSharedCareURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        sharedCarePatientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that removes a patient from the incoming shared care of the specified patient.
     * @method
     * @name SharedCare#RemovePatientFromIncomingSharedCare
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} sharedCarePatientId - The incoming shared care patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} authorization - access token
     */
    RemovePatientFromIncomingSharedCare(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        sharedCarePatientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RevokeSharedCareInvitationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that revokes a shared care invitation.
     * @method
     * @name SharedCare#RevokeSharedCareInvitation
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} invitationCode - The invitation code.
     * @param {string} authorization - access token
     */
    RevokeSharedCareInvitation(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    SendSharedCareInvitationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        model: Api.SharedCareInvitationCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a patient invitation, and sends a notice to the invited patient.
     * @method
     * @name SharedCare#SendSharedCareInvitation
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {} model - The shared care invitation creation model.
     * @param {string} authorization - access token
     */
    SendSharedCareInvitation(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        model: Api.SharedCareInvitationCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    SendSharedCareInvitationEmailURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that sends the shared care invitation email.
     * @method
     * @name SharedCare#SendSharedCareInvitationEmail
     * @param {string} distributorId - The distributor identifier
     * @param {string} sponsorId - The sponsor identifier
     * @param {string} patientId - The patient identifier (can be, either, unique to PatientIO or to the sponsor).
     * @param {string} invitationCode - The invitation code.
     * @param {string} authorization - access token
     */
    SendSharedCareInvitationEmail(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
