import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class SponsorWebHook
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class SponsorWebHook extends ApiClass {
    GetWebHooksURL(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that retrieves the current web hooks for the sponsor.
     * @method
     * @name SponsorWebHook#GetWebHooks
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} authorization - access token
     */
    GetWebHooks(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateWebHookURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.WebHookCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a web hook for the sponsor.
     * @method
     * @name SponsorWebHook#CreateWebHook
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {} model - The web hook model.
     * @param {string} authorization - access token
     */
    CreateWebHook(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.WebHookCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateWebHookURL(parameters: {
        distributorId: string;
        sponsorId: string;
        webHookId: string;
        model: Api.WebHookUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates a particular web hook for a sponsor.
     * @method
     * @name SponsorWebHook#UpdateWebHook
     * @param {string} distributorId - The distributor identifier,
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} webHookId - The web hook identifier.
     * @param {} model - The web hook model.
     * @param {string} authorization - access token
     */
    UpdateWebHook(parameters: {
        distributorId: string;
        sponsorId: string;
        webHookId: string;
        model: Api.WebHookUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    DeleteWebHookURL(parameters: {
        distributorId: string;
        sponsorId: string;
        webHookId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that delete's a particular web hook for a sponsor.
     * @method
     * @name SponsorWebHook#DeleteWebHook
     * @param {string} distributorId - The distributor identifier,
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} webHookId - The web hook identifier.
     * @param {string} authorization - access token
     */
    DeleteWebHook(parameters: {
        distributorId: string;
        sponsorId: string;
        webHookId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    BulkUpdateWebHookPayloadTypesURL(parameters: {
        distributorId: string;
        sponsorId: string;
        payloadType: "PatientIo" | "Fhir";
        model: Api.IdListBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates multiple web hooks with a new payload type
     * @method
     * @name SponsorWebHook#BulkUpdateWebHookPayloadTypes
     * @param {string} distributorId -
     * @param {string} sponsorId -
     * @param {string} payloadType -
     * @param {} model - The list of web hook ids
     * @param {string} authorization - access token
     */
    BulkUpdateWebHookPayloadTypes(parameters: {
        distributorId: string;
        sponsorId: string;
        payloadType: "PatientIo" | "Fhir";
        model: Api.IdListBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateWebHookAuthorizationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.WebHookAuthorizationUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates a particular web hook's authorization for a sponsor.
     * @method
     * @name SponsorWebHook#UpdateWebHookAuthorization
     * @param {string} distributorId - The distributor identifier,
     * @param {string} sponsorId - The sponsor identifier.
     * @param {} model - The web hook model.
     * @param {string} authorization - access token
     */
    UpdateWebHookAuthorization(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.WebHookAuthorizationUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
