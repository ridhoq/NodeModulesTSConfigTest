import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class PatientInvitations
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class PatientInvitations extends ApiClass {
    AcceptPatientInvitationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        invitationCode: string;
        model: Api.AcceptInvitationBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that accepts an invitation for a patient.
                    Accepting the invitation creates an actual Patient record within Patient IO,
                    using the data in the invitation.
    * @method
    * @name PatientInvitations#AcceptPatientInvitation
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} invitationCode - The invitation code.
         * @param {} model - The invitation acceptance model.
    */
    AcceptPatientInvitation(parameters: {
        distributorId: string;
        sponsorId: string;
        invitationCode: string;
        model: Api.AcceptInvitationBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetPatientInvitationsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        accepted?: boolean;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves patient invitations for a sponsor.
    * @method
    * @name PatientInvitations#GetPatientInvitations
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {boolean} accepted - If set to true retrieve accepted. false retrieves unaccepted. If ommitted
                    retrieves both.
         * @param {string} authorization - access token
    */
    GetPatientInvitations(parameters: {
        distributorId: string;
        sponsorId: string;
        accepted?: boolean;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreatePatientInvitationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.PatientInvitationCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a patient invitation and sends a notice to the invited patient.
     * @method
     * @name PatientInvitations#CreatePatientInvitation
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {} model - The patient invitation creation model.
     * @param {string} authorization - access token
     */
    CreatePatientInvitation(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.PatientInvitationCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreatePatientInvitationWithAuthCodeURL(parameters: {
        distributorId: string;
        authorizationCode: string;
        model: Api.KioskPatientInvitationCreateBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method creates an invitation and sends a notice to the patient.
                    This method allows the creation of a patient invitation for a
                    sponsor based on an authorization code. This allows a client that only knows
                    the authorization code for a sponsor to create and send an invitation to a
                    sponsor to a patient without authenticating (supports the Kiosk application.)
    * @method
    * @name PatientInvitations#CreatePatientInvitationWithAuthCode
         * @param {string} distributorId - The distributor identifier.
         * @param {string} authorizationCode - The authorization code.
         * @param {} model - The kiosk patient invitation creation model.
    */
    CreatePatientInvitationWithAuthCode(parameters: {
        distributorId: string;
        authorizationCode: string;
        model: Api.KioskPatientInvitationCreateBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    DeletePatientInvitationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that deletes an invitation for a patient.
     * @method
     * @name PatientInvitations#DeletePatientInvitation
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} invitationCode - The invitation code.
     * @param {string} authorization - access token
     */
    DeletePatientInvitation(parameters: {
        distributorId: string;
        sponsorId: string;
        invitationCode: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ResendPatientInvitationsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.ResendInvitationsBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that resends unsent invitations given a list of invitation codes,
                    or invitations created within a certain date range.
    * @method
    * @name PatientInvitations#ResendPatientInvitations
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {} model - The resend invitations model.
         * @param {string} authorization - access token
    */
    ResendPatientInvitations(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.ResendInvitationsBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
