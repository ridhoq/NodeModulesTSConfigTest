import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class Tasks
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class Tasks extends ApiClass {
    AddTagsToDistributorTaskURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TagListBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that adds tags to a Distributor owned task. Tags are used to facilitate grouping
                    and filtering Tasks.
    * @method
    * @name Tasks#AddTagsToDistributorTask
         * @param {string} distributorId - The distributor identifier.
         * @param {string} taskId - The task identifier.
         * @param {} model - The tag list model.
         * @param {string} authorization - access token
    */
    AddTagsToDistributorTask(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TagListBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    AddTagsToSponsorTaskURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TagListBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that adds tags to a Sponsor owned Task.
                    Tags are used to facilitate grouping and filtering Tasks.
    * @method
    * @name Tasks#AddTagsToSponsorTask
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} taskId - The task identifier.
         * @param {} model - The tag list model.
         * @param {string} authorization - access token
    */
    AddTagsToSponsorTask(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TagListBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RemoveTagsFromDistributorTaskURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TagListBindingModel;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that removes tags from a distributor task.
     * @method
     * @name Tasks#RemoveTagsFromDistributorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The tag list model.
     * @param {string} sponsorId -
     * @param {string} authorization - access token
     */
    RemoveTagsFromDistributorTask(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TagListBindingModel;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeDistributorTaskContentURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskContentBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that changes the content URI assigned to a distributor task
     * @method
     * @name Tasks#ChangeDistributorTaskContent
     * @param {string} distributorId - The distributor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The task content model.
     * @param {string} authorization - access token
     */
    ChangeDistributorTaskContent(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskContentBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeDistributorTaskDeactivatedStateURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskDeactivatedStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that activates or Deactivates a Distributor Task.
                    A deactivated Task can no longer be assigned to a Patient.
    * @method
    * @name Tasks#ChangeDistributorTaskDeactivatedState
         * @param {string} distributorId - The distributor identifier.
         * @param {string} taskId - The task identifier.
         * @param {} model - The task deactivated state model.
         * @param {string} authorization - access token
    */
    ChangeDistributorTaskDeactivatedState(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskDeactivatedStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeDistributorTaskDescriptionURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskDescriptionBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that changes the description for a Distributor Task
     * @method
     * @name Tasks#ChangeDistributorTaskDescription
     * @param {string} distributorId - The distributor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The task description model.
     * @param {string} authorization - access token
     */
    ChangeDistributorTaskDescription(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskDescriptionBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeDistributorTaskMeasurementURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskMeasurementBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that changes the Measurement information for a Distributor Task.
     * @method
     * @name Tasks#ChangeDistributorTaskMeasurement
     * @param {string} distributorId - The distributor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The task measurement model.
     * @param {string} authorization - access token
     */
    ChangeDistributorTaskMeasurement(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskMeasurementBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeDistributorTaskCodesURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskCodesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that changes the MedicalCodes of a distributor
                task. Any existing codes are replaced.
    * @method
    * @name Tasks#ChangeDistributorTaskCodes
         * @param {string} distributorId - The distributor identifier.
         * @param {string} taskId - The task identifier.
         * @param {} model - &gt;The MedicalCodes model.
         * @param {string} authorization - access token
    */
    ChangeDistributorTaskCodes(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskCodesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeSponsorTaskCodesURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskCodesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that changes the MedicalCodes of a task.
                Any existing codes are replaced.
    * @method
    * @name Tasks#ChangeSponsorTaskCodes
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} taskId - The task identifier.
         * @param {} model - The MedicalCodes model.
         * @param {string} authorization - access token
    */
    ChangeSponsorTaskCodes(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskCodesBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeSponsorTaskContentURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskContentBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that changes the content URI of the sponsor task.
     * @method
     * @name Tasks#ChangeSponsorTaskContent
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The task content model.
     * @param {string} authorization - access token
     */
    ChangeSponsorTaskContent(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskContentBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeSponsorTaskDeactivatedStateURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskDeactivatedStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that activates or deactivates a Sponsor Task.
                    A deactivated task can no longer be assigned to Care Plans.
    * @method
    * @name Tasks#ChangeSponsorTaskDeactivatedState
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} taskId - The task identifier.
         * @param {} model - The task deactivated state model.
         * @param {string} authorization - access token
    */
    ChangeSponsorTaskDeactivatedState(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskDeactivatedStateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeSponsorTaskDescriptionURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskDescriptionBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that changes the description for a sponsor task.
     * @method
     * @name Tasks#ChangeSponsorTaskDescription
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The model.
     * @param {string} authorization - access token
     */
    ChangeSponsorTaskDescription(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskDescriptionBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ChangeSponsorTaskIdURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.SponsorTaskIdBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that changes the sponsor task identifier for a sponsor task.
     * @method
     * @name Tasks#ChangeSponsorTaskId
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The model.
     * @param {string} authorization - access token
     */
    ChangeSponsorTaskId(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.SponsorTaskIdBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetDistributorTasksURL(parameters: {
        distributorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets all Distributor tasks.
     * @method
     * @name Tasks#GetDistributorTasks
     * @param {string} distributorId - The distributor identifier.
     * @param {string} authorization - access token
     */
    GetDistributorTasks(parameters: {
        distributorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateDistributorTaskURL(parameters: {
        distributorId: string;
        model: Api.TaskCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a distributor level task.
     * @method
     * @name Tasks#CreateDistributorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {} model - The task creation model.
     * @param {string} authorization - access token
     */
    CreateDistributorTask(parameters: {
        distributorId: string;
        model: Api.TaskCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ReplaceDistributorTaskTagURL(parameters: {
        distributorId: string;
        tagName: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that replaces a TaskTag for a Distributor.
     * @method
     * @name Tasks#ReplaceDistributorTaskTag
     * @param {string} distributorId - The distributor identifier.
     * @param {string} tagName - The name of the tag to replace.
     * @param {} model - The model for the name of the tag to add
     * @param {string} authorization - access token
     */
    ReplaceDistributorTaskTag(parameters: {
        distributorId: string;
        tagName: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateDistributorTaskTagURL(parameters: {
        distributorId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a TaskTag for a Distributor
     * @method
     * @name Tasks#CreateDistributorTaskTag
     * @param {string} distributorId - The distributor identifier.
     * @param {} model - The model for the name of the tag to add
     * @param {string} authorization - access token
     */
    CreateDistributorTaskTag(parameters: {
        distributorId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    DeleteDistributorTaskTagURL(parameters: {
        distributorId: string;
        tagName: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that delete a TaskTag for a distributor.
     * @method
     * @name Tasks#DeleteDistributorTaskTag
     * @param {string} distributorId - The distributor identifier.
     * @param {string} tagName - The tag name.
     * @param {string} authorization - access token
     */
    DeleteDistributorTaskTag(parameters: {
        distributorId: string;
        tagName: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetSponsorTasksURL(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets the sponsor tasks.
     * @method
     * @name Tasks#GetSponsorTasks
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} authorization - access token
     */
    GetSponsorTasks(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateSponsorTaskURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.TaskCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a task for a Sponsor.
     * @method
     * @name Tasks#CreateSponsorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {} model - The task creation model.
     * @param {string} authorization - access token
     */
    CreateSponsorTask(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.TaskCreateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateSponsorTaskAlertURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.CreateTaskAlertBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates the task alert for a Task.
     * @method
     * @name Tasks#CreateSponsorTaskAlert
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The model.
     * @param {string} authorization - access token
     */
    CreateSponsorTaskAlert(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.CreateTaskAlertBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    ReplaceSponsorTaskTagURL(parameters: {
        distributorId: string;
        sponsorId: string;
        tagName: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that replaces a TaskTag for a Distributor.
     * @method
     * @name Tasks#ReplaceSponsorTaskTag
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} tagName - The name of the tag to replace.
     * @param {} model - The model for the name of the tag to add
     * @param {string} authorization - access token
     */
    ReplaceSponsorTaskTag(parameters: {
        distributorId: string;
        sponsorId: string;
        tagName: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    CreateSponsorTaskTagURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that creates a TaskTag for a Sponsor
     * @method
     * @name Tasks#CreateSponsorTaskTag
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {} model - The model for the name of the tag to add
     * @param {string} authorization - access token
     */
    CreateSponsorTaskTag(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    DeleteSponsorTaskTagURL(parameters: {
        distributorId: string;
        sponsorId: string;
        tagName: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that deletes a TaskTag from a Sponsor.
     * @method
     * @name Tasks#DeleteSponsorTaskTag
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} tagName - The name of the tag to delete.
     * @param {string} authorization - access token
     */
    DeleteSponsorTaskTag(parameters: {
        distributorId: string;
        sponsorId: string;
        tagName: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetDistributorTaskURL(parameters: {
        distributorId: string;
        taskId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets a Distributor task.
     * @method
     * @name Tasks#GetDistributorTask
     * @param {string} distributorId - The Distributor identifier.
     * @param {string} taskId - The task identifier.
     * @param {string} authorization - access token
     */
    GetDistributorTask(parameters: {
        distributorId: string;
        taskId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateDistributorTaskURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates a task for a sponsor.
     * @method
     * @name Tasks#UpdateDistributorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The task update model.
     * @param {string} authorization - access token
     */
    UpdateDistributorTask(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.TaskUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetSponsorTaskURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets the sponsor task.
     * @method
     * @name Tasks#GetSponsorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {string} authorization - access token
     */
    GetSponsorTask(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateSponsorTaskURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates a task for a sponsor.
     * @method
     * @name Tasks#UpdateSponsorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The task update model.
     * @param {string} authorization - access token
     */
    UpdateSponsorTask(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.TaskUpdateBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    UpdateSponsorTaskAlertURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        alertId: string;
        model: Api.UpdateTaskAlertBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that updates a task alert for a Task.
     * @method
     * @name Tasks#UpdateSponsorTaskAlert
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {string} alertId - The alert identifier.
     * @param {} model - The task alert update model.
     * @param {string} authorization - access token
     */
    UpdateSponsorTaskAlert(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        alertId: string;
        model: Api.UpdateTaskAlertBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RemoveSponsorTaskAlertURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        alertId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that deletes the task alert for a Task.
     * @method
     * @name Tasks#RemoveSponsorTaskAlert
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {string} alertId - The alert identifier.
     * @param {string} authorization - access token
     */
    RemoveSponsorTaskAlert(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        alertId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RenameDistributorTaskURL(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that renames a task for a distributor.
     * @method
     * @name Tasks#RenameDistributorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The name model.
     * @param {string} authorization - access token
     */
    RenameDistributorTask(parameters: {
        distributorId: string;
        taskId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RenameSponsorTaskURL(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that renames a task for a sponsor.
     * @method
     * @name Tasks#RenameSponsorTask
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} taskId - The task identifier.
     * @param {} model - The name model.
     * @param {string} authorization - access token
     */
    RenameSponsorTask(parameters: {
        distributorId: string;
        sponsorId: string;
        taskId: string;
        model: Api.NameBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
