import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class Beacon
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class Beacon extends ApiClass {
    RecordBeaconURL(parameters: {
        model: Api.RecordBeaconBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is an endpoint for capturing beacons in an authenticated context. The endpoint uses the current user and
                    the following http headers to create a beacon:
                    X-FILAMENT-OS-TYPE - The platform operating system
                    X-FILAMENT-OS-VERSION - The platform operating system's version
                    X-FILAMENT-APP-VERSION - The version of the Patient IO App
    * @method
    * @name Beacon#RecordBeacon
         * @param {} model - The model containg the type of beacon.
         * @param {string} authorization - access token
    */
    RecordBeacon(parameters: {
        model: Api.RecordBeaconBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    RecordInvitationBeaconURL(parameters: {
        model: Api.RecordInvitationBeaconBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is an endpoint for capturing beacons in an unauthenticated context for invitations. The endpoint
                    uses the following http headers to create a beacon:
                    X-FILAMENT-OS-TYPE - The platform operating system
                    X-FILAMENT-OS-VERSION - The platform operating system's version
                    X-FILAMENT-APP-VERSION - The version of the Patient IO App
    * @method
    * @name Beacon#RecordInvitationBeacon
         * @param {} model - The model containing the type of beacon and the invitation code.
    */
    RecordInvitationBeacon(parameters: {
        model: Api.RecordInvitationBeaconBindingModel;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
