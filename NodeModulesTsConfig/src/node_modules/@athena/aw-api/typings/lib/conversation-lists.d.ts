import * as request from "superagent";
import ApiClass from './api';
/**
 *
 * @class ConversationLists
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class ConversationLists extends ApiClass {
    GetSponsorOrganizationConversationsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves a list of all of a sponsor's organization conversations,
                    optionally within a specified date range. The organization list is constrained to the organizations
                    which the calling user has a right to view.
    * @method
    * @name ConversationLists#GetSponsorOrganizationConversations
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} fromDateTime - The beginning point, in UTC, from which to search for conversations, inclusive. May be
                    omitted.
         * @param {string} toDateTime - The endpoints point, in UTC, to which to search for conversations, inclusive.
                    May be omitted.
         * @param {string} tags - A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of
                    a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in
                    the list,
                    all tags must be present on the conversation in order for it to be included. Parameter is optional.
         * @param {string} authorization - access token
    */
    GetSponsorOrganizationConversations(parameters: {
        distributorId: string;
        sponsorId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetSponsorOrganizationConversationsMetaDataURL(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves metadata about all the conversations in a sponsor's organizations.
                    The organizations are constrained to those the caller can see.
    * @method
    * @name ConversationLists#GetSponsorOrganizationConversationsMetaData
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} authorization - access token
    */
    GetSponsorOrganizationConversationsMetaData(parameters: {
        distributorId: string;
        sponsorId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetOrganizationConversationsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        organizationId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves a list of all of an organization's conversations, optionally within a specified date range.
    * @method
    * @name ConversationLists#GetOrganizationConversations
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} organizationId - The organization identifier.
         * @param {string} fromDateTime - The beginning point, in UTC, from which to search for conversations, inclusive. May be
                    omitted.
         * @param {string} toDateTime - The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.
         * @param {string} tags - A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of
                    a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in
                    the list,
                    all tags must be present on the conversation in order for it to be included. Parameter is optional.
         * @param {string} authorization - access token
    */
    GetOrganizationConversations(parameters: {
        distributorId: string;
        sponsorId: string;
        organizationId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetUserConversationsURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves a list of all of a user's conversations, optionally within a specified date range.
    * @method
    * @name ConversationLists#GetUserConversations
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} userId - The user identifier.
         * @param {string} fromDateTime - The beginning point, in UTC, from which to search for conversations, inclusive. May be omitted.
         * @param {string} toDateTime - The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.
         * @param {string} tags - A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of
                    a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in
                    the list,
                    all tags must be present on the conversation in order for it to be included. Parameter is optional.
         * @param {string} authorization - access token
    */
    GetUserConversations(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetPatientConversationsURL(parameters: {
        patientId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves a list of all of a patient's conversations, optionally within a specified date range.
    * @method
    * @name ConversationLists#GetPatientConversations
         * @param {string} patientId - The patient identifier.
         * @param {string} fromDateTime - The beginning point, in UTC, from which to search for conversations, inclusive. May be omitted.
         * @param {string} toDateTime - The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.
         * @param {string} tags - A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of
                    a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in
                    the list,
                    all tags must be present on the conversation in order for it to be included. Parameter is optional
         * @param {string} authorization - access token
    */
    GetPatientConversations(parameters: {
        patientId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetPatientConversationsSponsorIdentifierURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
    * This is a method that retrieves a list of all of a patient's conversations, optionally within a specified date range.
    * @method
    * @name ConversationLists#GetPatientConversationsSponsorIdentifier
         * @param {string} distributorId - The distributor identifier.
         * @param {string} sponsorId - The sponsor identifier.
         * @param {string} patientId - The patient identifier.
         * @param {string} fromDateTime - The beginning point, in UTC, from which to search for conversations, inclusive. May be omitted.
         * @param {string} toDateTime - The endpoints point, in UTC, to which to search for conversations, inclusive. May be omitted.
         * @param {string} tags - A CSV list of tags that may be used to filter which conversations are returned. Placing an ! in front of
                    a tag (e.g. !Inbox) will result in conversations with that tag being excluded. If more than one tag is present in
                    the list,
                    all tags must be present on the conversation in order for it to be included. Parameter is optional
         * @param {string} authorization - access token
    */
    GetPatientConversationsSponsorIdentifier(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        fromDateTime?: string;
        toDateTime?: string;
        tags?: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
