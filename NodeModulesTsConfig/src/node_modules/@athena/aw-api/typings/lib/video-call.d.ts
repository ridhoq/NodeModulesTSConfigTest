import * as request from "superagent";
import * as Api from './api';
import ApiClass from './api';
/**
 *
 * @class VideoCall
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class VideoCall extends ApiClass {
    CreateVideoCallURL(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.VideoCallBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method for a caregiver to request a video call with a patient.
     * @method
     * @name VideoCall#CreateVideoCall
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {} model - The binding model.
     * @param {string} authorization - access token
     */
    CreateVideoCall(parameters: {
        distributorId: string;
        sponsorId: string;
        model: Api.VideoCallBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetVideoCallURL(parameters: {
        distributorId: string;
        sponsorId: string;
        roomId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method to get information about an existing video call.
     * @method
     * @name VideoCall#GetVideoCall
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} roomId - The room identifier.
     * @param {string} authorization - access token
     */
    GetVideoCall(parameters: {
        distributorId: string;
        sponsorId: string;
        roomId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    AcceptVideoCallURL(parameters: {
        distributorId: string;
        sponsorId: string;
        roomId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method for a patient to accept a video call.
     * @method
     * @name VideoCall#AcceptVideoCall
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} roomId - The room identifier.
     * @param {string} authorization - access token
     */
    AcceptVideoCall(parameters: {
        distributorId: string;
        sponsorId: string;
        roomId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    EndVideoCallURL(parameters: {
        distributorId: string;
        sponsorId: string;
        roomId: string;
        model: Api.VideoCallEndBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method to end a video call.
     * @method
     * @name VideoCall#EndVideoCall
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} roomId - The room identifier.
     * @param {} model - The model.
     * @param {string} authorization - access token
     */
    EndVideoCall(parameters: {
        distributorId: string;
        sponsorId: string;
        roomId: string;
        model: Api.VideoCallEndBindingModel;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
