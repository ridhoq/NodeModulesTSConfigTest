import * as request from "superagent";
import ApiClass from './api';
/**
 *
 * @class ConversationParties
 * @param {(string)} [domainOrOptions] - The project domain.
 */
export default class ConversationParties extends ApiClass {
    GetMessageablePartiesForPatientExternalURL(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets the patient's list of messageable parties.
     * @method
     * @name ConversationParties#GetMessageablePartiesForPatientExternal
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} patientId - The patient identifier.
     * @param {string} authorization - access token
     */
    GetMessageablePartiesForPatientExternal(parameters: {
        distributorId: string;
        sponsorId: string;
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetMessageablePartiesForPatientURL(parameters: {
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets the patient's list of messageable parties.
     * @method
     * @name ConversationParties#GetMessageablePartiesForPatient
     * @param {string} patientId - The patient identifier, must be the internal identifier to Patient IO.
     * @param {string} authorization - access token
     */
    GetMessageablePartiesForPatient(parameters: {
        patientId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetMessageablePatientsForUserURL(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets a user's list of messageable parties
     * @method
     * @name ConversationParties#GetMessageablePatientsForUser
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} userId - The user identifier.
     * @param {string} authorization - access token
     */
    GetMessageablePatientsForUser(parameters: {
        distributorId: string;
        sponsorId: string;
        userId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
    GetMessageablePatientsForOrganizationURL(parameters: {
        distributorId: string;
        sponsorId: string;
        organizationId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): string;
    /**
     * This is a method that gets an organization's list of messageable parties (patients).
     * @method
     * @name ConversationParties#GetMessageablePatientsForOrganization
     * @param {string} distributorId - The distributor identifier.
     * @param {string} sponsorId - The sponsor identifier.
     * @param {string} organizationId - The user identifier.
     * @param {string} authorization - access token
     */
    GetMessageablePatientsForOrganization(parameters: {
        distributorId: string;
        sponsorId: string;
        organizationId: string;
        authorization: string;
        $queryParameters?: any;
        $domain?: string;
    }): Promise<request.Response>;
}
