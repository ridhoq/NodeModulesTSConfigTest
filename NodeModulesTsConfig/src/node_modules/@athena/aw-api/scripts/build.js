'use strict';


// Makes the script crash on unhandled rejections instead of silently
// ignoring them. In the future, promise rejections that are not handled will
// terminate the Node.js process with a non-zero exit code.
process.on('unhandledRejection', err => {
    throw err;
});

const fs = require('fs-extra');
var CodeGen = require('swagger-js-codegen').CodeGen;

// const request = require('request');

// const SWAGGER_URL = "https://api-pio-tst-docs-west.azurewebsites.net/swagger/docs/v1";

// request({
//     url: SWAGGER_URL,
//     headers: {
//         "Accept": "application/json"
//     }    
// }, function (error, response, body) {
//     console.log('error:', error); // Print the error if one occurred 
//     console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received 
//     // console.log('body:', body); // Print the HTML for the Google homepage. 
//     // let json = JSON.parse(response);
//     // console.log(response);
//     fs.writeFile('./swagger.json', JSON.stringify(response));
// });


var file = './swagger.spec.json';
var swagger = JSON.parse(fs.readFileSync(file, 'UTF-8'));

var tsSourceCode = CodeGen.getTypescriptCode({ className: 'Test', swagger: swagger, imports: ['../../typings/tsd.d.ts'] });

fs.writeFile('./generated.ts', tsSourceCode);